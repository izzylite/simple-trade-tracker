{"version":3,"file":"static/js/682.44a4c2bc.chunk.js","mappings":"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","sources":["components/common/BaseDialog.tsx","components/common/TagsDisplay.tsx","components/common/ConfirmationDialog.tsx","components/common/FormField.tsx","components/Animations.tsx","components/TradeDetailExpanded.tsx","components/TagFilterDialog.tsx","components/TargetBadge.tsx","utils/formatters.ts","components/ImageZoomDialog.tsx","components/charts/CumulativePnLChart.tsx","components/charts/DailyPnLChart.tsx","components/charts/WinLossDistribution.tsx","components/charts/TagPerformanceAnalysis.tsx","components/charts/DailySummaryTable.tsx","components/charts/SessionPerformanceAnalysis.tsx","components/charts/TradesListDialog.tsx","components/charts/RiskRewardChart.tsx","components/PerformanceCharts.tsx","components/SelectDateDialog.tsx","styles/scrollbarStyles.ts","components/StyledComponents.tsx","styles/dialogStyles.ts","utils/tagColors.ts"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogProps,\r\n  IconButton,\r\n  Typography,\r\n  Box,\r\n  useTheme,\r\n  Button,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { Close as CloseIcon } from '@mui/icons-material';\r\nimport { dialogProps } from '../../styles/dialogStyles';\r\nimport { scrollbarStyles } from '../../styles/scrollbarStyles';\r\nimport {\r\n  DialogTitleStyled,\r\n  DialogContentStyled,\r\n  DialogActionsStyled\r\n} from '../StyledComponents';\r\n\r\nexport interface BaseDialogProps extends Omit<DialogProps, 'title'> {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: ReactNode;\r\n  actions?: ReactNode;\r\n  children: ReactNode;\r\n  maxWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n  fullWidth?: boolean;\r\n  hideCloseButton?: boolean;\r\n  hideFooterCancelButton?: boolean;\r\n  cancelButtonText?: string;\r\n  cancelButtonAction?: () => void;\r\n  primaryButtonText?: string;\r\n  primaryButtonAction?: (e?: React.FormEvent) => void;\r\n  isSubmitting?: boolean;\r\n  contentSx?: any;\r\n}\r\n\r\nconst BaseDialog: React.FC<BaseDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  title,\r\n  actions,\r\n  children,\r\n  maxWidth = 'sm',\r\n  fullWidth = true,\r\n  hideCloseButton = false,\r\n  hideFooterCancelButton = false,\r\n  cancelButtonText = 'Cancel',\r\n  cancelButtonAction,\r\n  primaryButtonText = 'Save',\r\n  primaryButtonAction,\r\n  isSubmitting = false,\r\n  contentSx = {},\r\n  ...rest\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      fullWidth={fullWidth}\r\n      {...dialogProps}\r\n      slotProps={{\r\n        paper: {\r\n          sx: {\r\n            borderRadius: 2,\r\n            boxShadow: 'none',\r\n            border: `1px solid ${theme.palette.divider}`,\r\n            maxHeight: '90vh',\r\n            overflow: 'hidden',\r\n            '& .MuiDialogContent-root': {\r\n              ...scrollbarStyles(theme)\r\n            }\r\n          }\r\n        }\r\n      }}\r\n      {...rest}\r\n    >\r\n      <DialogTitleStyled>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\r\n          {typeof title === 'string' ? (\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n          ) : (\r\n            title\r\n          )}\r\n        </Box>\r\n        {!hideCloseButton && (\r\n          <IconButton onClick={onClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitleStyled>\r\n\r\n      <DialogContentStyled sx={contentSx}>\r\n        {children}\r\n      </DialogContentStyled>\r\n\r\n      {(actions || !hideFooterCancelButton || primaryButtonAction) && (\r\n        <DialogActionsStyled>\r\n          {actions}\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n\r\n            {(!hideFooterCancelButton || cancelButtonAction) && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={cancelButtonAction || onClose}\r\n              >\r\n                {cancelButtonText}\r\n              </Button>\r\n            )}\r\n\r\n            {primaryButtonAction && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={primaryButtonAction}\r\n                disabled={isSubmitting}\r\n                sx={{\r\n                  minWidth: '100px',\r\n                  position: 'relative',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  gap: 1\r\n                }}\r\n              >\r\n                {primaryButtonText}\r\n                {isSubmitting && (\r\n                  <CircularProgress\r\n                    size={16}\r\n                    sx={{\r\n                      position: 'static'\r\n                    }}\r\n                  />\r\n                )}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </DialogActionsStyled>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BaseDialog;\r\n","import React, { useMemo } from 'react';\r\nimport { Box, Chip, Typography, useTheme } from '@mui/material';\r\nimport { Label as TagIcon } from '@mui/icons-material';\r\nimport {\r\n  getTagChipStyles,\r\n  formatTagForDisplay,\r\n  isGroupedTag,\r\n  getTagGroup,\r\n  getUniqueTagGroups,\r\n  filterTagsByGroup,\r\n  getTagName\r\n} from '../../utils/tagColors';\r\n\r\ninterface TagsDisplayProps {\r\n  tags: string[];\r\n  onTagClick?: (tag: string) => void;\r\n  onTagDelete?: (tag: string) => void;\r\n  showGroups?: boolean;\r\n  chipSize?: 'small' | 'medium';\r\n  maxHeight?: string | number;\r\n}\r\n\r\nconst TagsDisplay: React.FC<TagsDisplayProps> = ({\r\n  tags,\r\n  onTagClick,\r\n  onTagDelete,\r\n  showGroups = true,\r\n  chipSize = 'small',\r\n  maxHeight\r\n}) => {\r\n  // Filter out Partials tags\r\n  const filteredTags = tags.filter(tag => !tag.startsWith('Partials:'));\r\n  const theme = useTheme();\r\n\r\n  // Organize tags by category\r\n  const organizedTags = useMemo(() => {\r\n    if (!filteredTags || filteredTags.length === 0) return { groups: {}, ungroupedTags: [] };\r\n\r\n    const groups: Record<string, string[]> = {};\r\n    const ungroupedTags: string[] = [];\r\n\r\n    // Get all unique groups\r\n    const uniqueGroups = getUniqueTagGroups(filteredTags);\r\n\r\n    // Initialize groups\r\n    uniqueGroups.forEach(group => {\r\n      groups[group] = filterTagsByGroup(filteredTags || [], group);\r\n    });\r\n\r\n    // Get ungrouped tags\r\n    filteredTags.forEach(tag => {\r\n      if (!isGroupedTag(tag)) {\r\n        ungroupedTags.push(tag);\r\n      }\r\n    });\r\n\r\n    return { groups, ungroupedTags };\r\n  }, [filteredTags]);\r\n\r\n  if (!filteredTags || filteredTags.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      gap: 1,\r\n      maxHeight: maxHeight,\r\n      overflowY: maxHeight ? 'auto' : 'visible'\r\n    }}>\r\n      {showGroups && Object.keys(organizedTags.groups).length > 0 && (\r\n        <>\r\n          {Object.entries(organizedTags.groups).map(([group, groupTags]) => (\r\n            <Box key={group} sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\r\n                {group}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                {groupTags.map(tag => (\r\n                  <Chip\r\n                    key={tag}\r\n                    label={getTagName(tag)}\r\n                    size={chipSize}\r\n                    onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n                    onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n                    sx={getTagChipStyles(tag, theme)}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      {organizedTags.ungroupedTags.length > 0 && (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n          {showGroups && Object.keys(organizedTags.groups).length > 0 && (\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\r\n              Tags\r\n            </Typography>\r\n          )}\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n            {organizedTags.ungroupedTags.map(tag => (\r\n              <Chip\r\n                key={tag}\r\n                label={formatTagForDisplay(tag)}\r\n                size={chipSize}\r\n                onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n                onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n                sx={getTagChipStyles(tag, theme)}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {!showGroups && (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {filteredTags.map(tag => (\r\n            <Chip\r\n              key={tag}\r\n              label={formatTagForDisplay(tag)}\r\n              size={chipSize}\r\n              onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n              onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n              sx={getTagChipStyles(tag, theme)}\r\n            />\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TagsDisplay;\r\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  CircularProgress\n} from '@mui/material';\n\ninterface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n  isSubmitting?: boolean;\n  confirmColor?: 'primary' | 'error' | 'warning' | 'success' | 'info';\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  open,\n  title,\n  message,\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  onConfirm,\n  onCancel,\n  isSubmitting = false,\n  confirmColor = 'primary'\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onCancel}\n      maxWidth=\"xs\"\n      fullWidth\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <Typography>{message}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={onCancel}\n          disabled={isSubmitting}\n        >\n          {cancelText}\n        </Button>\n        <Button\n          onClick={onConfirm}\n          color={confirmColor}\n          variant=\"contained\"\n          disabled={isSubmitting}\n          sx={{\n            minWidth: '100px',\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 1\n          }}\n        >\n          {confirmText}\n          {isSubmitting && (\n            <CircularProgress\n              size={20}\n              sx={{\n                position: 'static'\n              }}\n            />\n          )}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React, { JSX, ReactNode } from 'react';\r\nimport { \r\n  TextField, \r\n  TextFieldProps, \r\n  FormControl, \r\n  InputLabel, \r\n  Select, \r\n  MenuItem, \r\n  SelectProps,\r\n  Autocomplete,\r\n  AutocompleteProps,\r\n  Box,\r\n  Typography\r\n} from '@mui/material';\r\n\r\n// Text Field\r\ninterface TextInputProps extends Omit<TextFieldProps, 'label'> {\r\n  label: string;\r\n  helperText?: string;\r\n}\r\n\r\nexport const TextInput: React.FC<TextInputProps> = ({ \r\n  label, \r\n  helperText,\r\n  ...rest \r\n}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <TextField\r\n        label={label}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        size=\"small\"\r\n        {...rest}\r\n      />\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Select Field\r\ninterface SelectInputProps extends Omit<SelectProps, 'label'> {\r\n  label: string;\r\n  options: Array<{ value: string | number; label: string }>;\r\n  helperText?: string;\r\n}\r\n\r\nexport const SelectInput: React.FC<SelectInputProps> = ({ \r\n  label, \r\n  options, \r\n  helperText,\r\n  ...rest \r\n}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <FormControl fullWidth size=\"small\">\r\n        <InputLabel>{label}</InputLabel>\r\n        <Select\r\n          label={label}\r\n          {...rest}\r\n        >\r\n          {options.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Autocomplete Field\r\ninterface AutocompleteInputProps<T> extends Omit<AutocompleteProps<T, boolean, boolean, boolean>, 'renderInput'> {\r\n  label: string;\r\n  helperText?: string;\r\n  textFieldProps?: Partial<TextFieldProps>;\r\n}\r\n\r\nexport function AutocompleteInput<T>({ \r\n  label, \r\n  helperText,\r\n  textFieldProps,\r\n  ...rest \r\n}: AutocompleteInputProps<T>): JSX.Element {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <Autocomplete\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={label}\r\n            size=\"small\"\r\n            {...textFieldProps}\r\n          />\r\n        )}\r\n        {...rest}\r\n      />\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Form Section\r\ninterface FormSectionProps {\r\n  title?: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const FormSection: React.FC<FormSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n      {title && (\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Form Row (for horizontal layout)\r\ninterface FormRowProps {\r\n  children: ReactNode;\r\n  spacing?: number;\r\n}\r\n\r\nexport const FormRow: React.FC<FormRowProps> = ({ children, spacing = 2 }) => {\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: { xs: 'column', sm: 'row' }, \r\n      gap: spacing,\r\n      '& > *': { flex: 1 }\r\n    }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Form Actions\r\ninterface FormActionsProps {\r\n  children: ReactNode;\r\n  align?: 'left' | 'center' | 'right';\r\n  spacing?: number;\r\n}\r\n\r\nexport const FormActions: React.FC<FormActionsProps> = ({ \r\n  children, \r\n  align = 'right',\r\n  spacing = 1 \r\n}) => {\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      justifyContent: align === 'left' ? 'flex-start' : align === 'center' ? 'center' : 'flex-end',\r\n      gap: spacing,\r\n      mt: 2\r\n    }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n","import { keyframes } from '@mui/system';\nimport { styled } from '@mui/material/styles';\nimport { Box, Paper } from '@mui/material';\n\n// Fade in animation\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\n// Slide up animation\nexport const slideUp = keyframes`\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// Slide down animation\nexport const slideDown = keyframes`\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// Slide left animation\nexport const slideLeft = keyframes`\n  from {\n    transform: translateX(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\n// Slide right animation\nexport const slideRight = keyframes`\n  from {\n    transform: translateX(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\n// Scale up animation\nexport const scaleUp = keyframes`\n  from {\n    transform: scale(0.9);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n`;\n\n// Pulse animation\nexport const pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\n// Shake animation\nexport const shake = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-5px);\n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(5px);\n  }\n`;\n\n// Bounce animation\nexport const bounce = keyframes`\n  0%, 20%, 50%, 80%, 100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-10px);\n  }\n  60% {\n    transform: translateY(-5px);\n  }\n`;\n\n// Rotate animation\nexport const rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\n// Animated container component\nexport const AnimatedContainer = styled(Box)(({ theme }) => ({\n  animation: `${fadeIn} 0.5s ease-out`,\n}));\n\n// Animated paper component\nexport const AnimatedPaper = styled(Paper)(({ theme }) => ({\n  animation: `${scaleUp} 0.3s ease-out`,\n}));\n\n// Animated slide up component\nexport const AnimatedSlideUp = styled(Box)({\n  animation: 'slideUp 0.3s ease-out',\n  '@keyframes slideUp': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    }\n  }\n});\n\n// Animated slide down component\nexport const AnimatedSlideDown = styled(Box)({\n  animation: 'slideDown 0.3s ease-out',\n  '@keyframes slideDown': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(-20px)'\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    }\n  }\n});\n\n// Animated slide left component\nexport const AnimatedSlideLeft = styled(Box)(({ theme }) => ({\n  animation: `${slideLeft} 0.5s ease-out`,\n}));\n\n// Animated slide right component\nexport const AnimatedSlideRight = styled(Box)(({ theme }) => ({\n  animation: `${slideRight} 0.5s ease-out`,\n}));\n\n// Animated pulse component\nexport const AnimatedPulse = styled(Box)({\n  animation: 'pulse 2s infinite',\n  '@keyframes pulse': {\n    '0%': {\n      transform: 'scale(1)'\n    },\n    '50%': {\n      transform: 'scale(1.05)'\n    },\n    '100%': {\n      transform: 'scale(1)'\n    }\n  }\n});\n\n// Animated shake component\nexport const AnimatedShake = styled(Box)(({ theme }) => ({\n  animation: `${shake} 0.5s ease-in-out`,\n}));\n\n// Animated bounce component\nexport const AnimatedBounce = styled(Box)(({ theme }) => ({\n  animation: `${bounce} 2s infinite`,\n}));\n\n// Animated dropdown component\nexport const AnimatedDropdown = styled(Box)({\n  animation: 'dropdown 0.3s ease-out',\n  transformOrigin: 'top',\n  overflow: 'hidden',\n  '@keyframes dropdown': {\n    from: {\n      opacity: 0,\n      maxHeight: '0px',\n      transform: 'scaleY(0)'\n    },\n    to: {\n      opacity: 1,\n      maxHeight: '1000px',\n      transform: 'scaleY(1)'\n    }\n  }\n});\n\n// Animated rotate component\nexport const AnimatedRotate = styled(Box)(({ theme }) => ({\n  animation: `${rotate} 2s linear infinite`,\n}));\n\n// Staggered animation container\nexport const StaggeredContainer = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${fadeIn} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered slide up container\nexport const StaggeredSlideUp = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${slideUp} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered slide down container\nexport const StaggeredSlideDown = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${slideDown} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered scale up container\nexport const StaggeredScaleUp = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${scaleUp} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Stack,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Button\r\n} from '@mui/material';\r\nimport { alpha, useTheme, keyframes } from '@mui/material/styles';\r\nimport { format } from 'date-fns';\r\nimport { Trade } from '../types/trade';\r\nimport {\r\n  ZoomIn as ZoomInIcon,\r\n  AttachMoney as MoneyIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Balance as RiskIcon,\r\n  Schedule as SessionIcon,\r\n  Note as NoteIcon,\r\n  Image as ImageIcon\r\n} from '@mui/icons-material';\r\nimport { AnimatedDropdown } from './Animations';\r\nimport { TagsDisplay } from './common';\r\nimport { TradeImage } from './trades/TradeForm';\r\n\r\ninterface TradeDetailExpandedProps {\r\n  trade: Trade;\r\n  isExpanded: boolean;\r\n  setZoomedImage: (url: string) => void;\r\n  onUpdateTradeProperty?: (tradeId: string, updateCallback: (trade: Trade) => Trade) => Promise<Trade | undefined>;\r\n}\r\n\r\n// Define shimmer animation\r\nconst shimmer = keyframes`\r\n  0% {\r\n    background-position: -200% 0;\r\n  }\r\n  100% {\r\n    background-position: 200% 0;\r\n  }\r\n`;\r\n\r\n// Helper function to check if an image is pending\r\nconst isPendingImage = (image: TradeImage): boolean => {\r\n  return image.pending || false;\r\n};\r\n\r\n// Helper function to check if an image is loading or pending\r\nconst isImageLoading = (image: TradeImage, loadingState: {[key: string]: boolean}): boolean => {\r\n  return isPendingImage(image) || loadingState[image.id] === true;\r\n};\r\n\r\nconst TradeDetailExpanded: React.FC<TradeDetailExpandedProps> = ({\r\n  trade,\r\n  isExpanded,\r\n  setZoomedImage,\r\n  onUpdateTradeProperty\r\n}) => {\r\n  const theme = useTheme();\r\n  const [isToggling, setIsToggling] = useState(false);\r\n  const [loadingImages, setLoadingImages] = useState<{[key: string]: boolean}>({});\r\n\r\n  // Initialize loading state for all images\r\n  useEffect(() => {\r\n    if (trade.images && trade.images.length > 0) {\r\n      const initialLoadingState: {[key: string]: boolean} = {};\r\n      trade.images.forEach(image => {\r\n        if (!isPendingImage(image)) {\r\n          initialLoadingState[image.id] = true;\r\n        }\r\n      });\r\n      setLoadingImages(initialLoadingState);\r\n    }\r\n  }, [trade.images]);\r\n\r\n  // No need to organize tags here as TagsDisplay will handle it\r\n\r\n  // Function to toggle trade type between 'win' and 'loss'\r\n  const handleToggleTradeType = async () => {\r\n    if (!onUpdateTradeProperty || isToggling) return;\r\n\r\n    try {\r\n      setIsToggling(true);\r\n      await onUpdateTradeProperty(trade.id, (currentTrade) => ({\r\n        ...currentTrade,\r\n        type: currentTrade.type === 'win' ? 'loss' : 'win',\r\n        // Flip the amount sign\r\n        amount: currentTrade.type === 'win' ? -Math.abs(currentTrade.amount) : Math.abs(currentTrade.amount)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error toggling trade type:', error);\r\n    } finally {\r\n      setIsToggling(false);\r\n    }\r\n  };\r\n\r\n  if (!isExpanded) return null;\r\n\r\n  return (\r\n    <AnimatedDropdown>\r\n      <Box sx={{\r\n        p: 2,\r\n        borderBottomLeftRadius: 8,\r\n        borderBottomRightRadius: 8,\r\n        borderTopRightRadius: 0,\r\n        borderTopLeftRadius: 0,\r\n        borderLeft: `1px solid ${theme.palette.divider}`,\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n\r\n        backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n        mb: 1,\r\n        width: '100%'\r\n      }}>\r\n        <Stack spacing={3}>\r\n          {/* Properties Section */}\r\n          <Box sx={{ width: '100%' }}>\r\n            {trade.name && (\r\n              <Typography variant=\"h6\" color=\"text.primary\" sx={{ mb: 2, display: 'block', fontWeight: 700 }}>\r\n                📈 {trade.name}\r\n              </Typography>\r\n            )}\r\n            <Typography variant=\"subtitle2\" color=\"text.primary\" sx={{ mb: 1.5, display: 'block', fontWeight: 700, fontSize: '0.9rem' }}>\r\n              Properties\r\n            </Typography>\r\n\r\n            <Stack spacing={2} sx={{ width: '100%' }}>\r\n              {/* Key Properties Grid */}\r\n              <Box sx={{\r\n                display: 'grid',\r\n                gridTemplateColumns: { xs: '1fr', sm: 'repeat(2, 1fr)' },\r\n                gap: 2,\r\n                width: '100%'\r\n              }}>\r\n                {/* Entry/Exit Prices */}\r\n                {(trade.entry || trade.exit) && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.info.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.info.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5,\r\n                    gridColumn: { xs: '1', sm: 'span 2' }\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\r\n                      {trade.entry && (\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                          <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                            Entry Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                            {trade.entry}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                      {trade.exit && (\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                          <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                            Exit Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                            {trade.exit}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n                {/* PnL */}\r\n                <Paper elevation={0} sx={{\r\n                  p: 1.5,\r\n                  borderRadius: 2,\r\n                  backgroundColor: alpha(\r\n                    trade.amount > 0 ? theme.palette.success.main :\r\n                    trade.amount < 0 ? theme.palette.error.main :\r\n                    theme.palette.grey[500],\r\n                    0.1\r\n                  ),\r\n                  border: `1px solid ${alpha(\r\n                    trade.amount > 0 ? theme.palette.success.main :\r\n                    trade.amount < 0 ? theme.palette.error.main :\r\n                    theme.palette.grey[500],\r\n                    0.2\r\n                  )}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 0.5\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                    <MoneyIcon sx={{\r\n                      fontSize: 18,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.secondary'\r\n                    }} />\r\n                    <Typography variant=\"caption\" sx={{\r\n                      fontWeight: 600,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.secondary'\r\n                    }}>\r\n                      PnL\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Typography variant=\"h6\" sx={{\r\n                      fontWeight: 700,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.primary',\r\n                      fontSize: '1.1rem'\r\n                    }}>\r\n                      {trade.amount > 0 ? '+' : ''}{trade.amount.toFixed(2)}\r\n                    </Typography>\r\n\r\n                    {onUpdateTradeProperty && (\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        color={trade.type === 'win' ? 'success' : 'error'}\r\n                        onClick={handleToggleTradeType}\r\n                        disabled={isToggling}\r\n                        sx={{\r\n                          minWidth: '80px',\r\n                          fontSize: '0.7rem',\r\n                          position: 'relative'\r\n                        }}\r\n                      >\r\n                        {isToggling ? (\r\n                          <>\r\n                            <CircularProgress\r\n                              size={16}\r\n                              color=\"inherit\"\r\n                              sx={{\r\n                                position: 'absolute',\r\n                                left: '8px'\r\n                              }}\r\n                            />\r\n                            Processing...\r\n                          </>\r\n                        ) : (\r\n                          <>Toggle {trade.type === 'win' ? 'Win' : 'Loss'}</>\r\n                        )}\r\n                      </Button>\r\n                    )}\r\n                  </Box>\r\n                </Paper>\r\n\r\n                {/* Date */}\r\n                <Paper elevation={0} sx={{\r\n                  p: 1.5,\r\n                  borderRadius: 2,\r\n                  backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                  border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 0.5\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                    <CalendarIcon sx={{ fontSize: 18, color: 'primary.main' }} />\r\n                    <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'primary.main' }}>\r\n                      Date\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                    {format(trade.date, 'MMMM d, yyyy')}\r\n                  </Typography>\r\n                </Paper>\r\n\r\n                {/* Risk to Reward */}\r\n                {trade.riskToReward && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.warning.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.warning.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <RiskIcon sx={{ fontSize: 18, color: 'warning.main' }} />\r\n                      <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'warning.main' }}>\r\n                        Risk to Reward\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                      {trade.riskToReward}\r\n                    </Typography>\r\n                  </Paper>\r\n                )}\r\n\r\n                {/* Session */}\r\n                {trade.session && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.info.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.info.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <SessionIcon sx={{ fontSize: 18, color: 'info.main' }} />\r\n                      <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                        Session\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                      {trade.session}\r\n                    </Typography>\r\n                  </Paper>\r\n                )}\r\n              </Box>\r\n\r\n              <Divider sx={{ my: 1.5 }} />\r\n\r\n              {/* Tags Section */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 1 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: '0.9rem' }}>\r\n                    Tags\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box sx={{ pl: 1 }}>\r\n                  <TagsDisplay\r\n                    tags={trade.tags || []}\r\n                    showGroups={true}\r\n                    chipSize=\"medium\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n\r\n          {/* Notes */}\r\n          {trade.notes && (\r\n            <Box>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\r\n                <NoteIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600, display: 'block' }}>\r\n                  Notes\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{\r\n                p: 1.5,\r\n                borderRadius: 1,\r\n                backgroundColor: alpha(theme.palette.background.paper, 0.7),\r\n\r\n                maxHeight: 'none', // Ensure no max height constraint\r\n                overflow: 'visible' // Prevent scrollbars\r\n              }}>\r\n                <Typography variant=\"body2\" sx={{\r\n                  whiteSpace: 'pre-line',\r\n                  overflow: 'visible', // Prevent scrollbars\r\n                  lineHeight: 1.5 // Slightly increased line height for better readability\r\n                }}>\r\n                  {trade.notes}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n\r\n          {/* Images */}\r\n          {trade.images && trade.images.length > 0 && (\r\n            <Box>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\r\n                <ImageIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600, display: 'block' }}>\r\n                  Images\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{\r\n                width: '100%'\r\n              }}>\r\n                {/* Organize images into rows based on their saved layout */}\r\n                {(() => {\r\n                  // Group images by row\r\n                  const imagesByRow: { [key: number]: TradeImage[] } = {};\r\n\r\n                  // Organize images by row\r\n                  trade.images.forEach(image => {\r\n                    const row = image.row !== undefined ? image.row : 0;\r\n                    if (!imagesByRow[row]) {\r\n                      imagesByRow[row] = [];\r\n                    }\r\n                    imagesByRow[row].push(image);\r\n                  });\r\n\r\n                  const sortedRows = Object.entries(imagesByRow)\r\n                    .sort(([a], [b]) => Number(a) - Number(b))\r\n                    .map(([_, images]) => images);\r\n\r\n                  return sortedRows.map((rowImages, rowIndex) => (\r\n                    <Box\r\n                      key={`row-${rowIndex}`}\r\n                      sx={{\r\n                        display: 'flex',\r\n                        width: '100%',\r\n                        mb: 2,\r\n                        gap: 1 // Add small gap between columns\r\n                      }}\r\n                    >\r\n                      {/* Sort images in the row by column */}\r\n                      {rowImages\r\n                        .sort((a, b) => (a.column || 0) - (b.column || 0))\r\n                        .map((image, colIndex) => (\r\n                          <Box\r\n                            key={`image-${image.id}-${rowIndex}-${colIndex}`}\r\n                            sx={{\r\n                              width: `${image.columnWidth || 100}%`,\r\n                              borderRadius: 1,\r\n                              overflow: 'hidden',\r\n                              position: 'relative'\r\n                            }}\r\n                          >\r\n                            <Box\r\n                              sx={{\r\n                                position: 'relative',\r\n                                '&:hover .overlay': {\r\n                                  opacity: 1\r\n                                },\r\n                                ...(image.width && image.height ? {\r\n                                  paddingTop: `${(image.height / image.width) * 100}%`,\r\n                                  maxHeight: rowImages.length > 1 ? '300px' : 'none',\r\n                                  overflow: 'hidden',\r\n                                  width: '100%',\r\n                                  height: 'auto'\r\n                                } : {})\r\n                              }}\r\n                            >\r\n                              {/* Loading placeholder */}\r\n                              {image.width && image.height && isImageLoading(image, loadingImages) && (\r\n                                <Box\r\n                                  sx={{\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    backgroundColor: theme => alpha(theme.palette.divider, 0.2),\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    zIndex: 1\r\n                                  }}\r\n                                >\r\n                                  \r\n                                </Box>\r\n                              )}\r\n\r\n                              {/* Image container */}\r\n                              <Box\r\n                                sx={{\r\n                                  position: 'absolute',\r\n                                  top: 0,\r\n                                  left: 0,\r\n                                  width: '100%',\r\n                                  height: '100%',\r\n                                  zIndex: 2,\r\n                                  cursor: isImageLoading(image, loadingImages) ? 'default' : 'pointer',\r\n                                  ...(isImageLoading(image, loadingImages) && {\r\n                                    background: (theme) => {\r\n                                      const baseColor = theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.04)';\r\n                                      const shimmerColor = theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.1)';\r\n                                      return `linear-gradient(90deg, ${baseColor} 25%, ${shimmerColor} 50%, ${baseColor} 75%)`;\r\n                                    },\r\n                                    backgroundSize: '200% 100%',\r\n                                    animation: `${shimmer} 1.5s infinite linear`,\r\n                                    willChange: 'background-position',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center'\r\n                                  })\r\n                                }}\r\n                              >\r\n                                {isPendingImage(image) ? (\r\n                                  <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>\r\n                                    <CircularProgress size={24} color=\"primary\" />\r\n                                    <Typography variant=\"caption\" sx={{ color: 'text.secondary', fontWeight: 500 }}>\r\n                                      Uploading...\r\n                                    </Typography>\r\n                                  </Box>\r\n                                ) : (\r\n                                  <img\r\n                                    src={image.url}\r\n                                    alt={image.caption || `Trade Image`}\r\n                                    style={{\r\n                                      width: '100%',\r\n                                      maxHeight: rowImages.length > 1 ? '300px' : 'none',\r\n                                      objectFit: 'contain',\r\n                                      position: image.width && image.height ? 'absolute' : 'relative',\r\n                                      top: 0,\r\n                                      left: 0,\r\n                                      height: image.width && image.height ? '100%' : 'auto',\r\n                                      opacity: loadingImages[image.id] ? 0 : 1,\r\n                                      transition: 'opacity 0.3s ease-in-out'\r\n                                    }}\r\n                                    onLoad={() => {\r\n                                      // Mark this image as loaded\r\n                                      setLoadingImages(prev => ({\r\n                                        ...prev,\r\n                                        [image.id]: false\r\n                                      }));\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Box>\r\n\r\n                              {/* Zoom overlay */}\r\n                              {!isImageLoading(image, loadingImages) && (\r\n                                <Box\r\n                                  className=\"overlay\"\r\n                                  sx={{\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    bottom: 0,\r\n                                    backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    opacity: 0,\r\n                                    transition: 'opacity 0.2s ease-in-out',\r\n                                    cursor: 'pointer',\r\n                                    zIndex: 3\r\n                                  }}\r\n                                  onClick={() => setZoomedImage(image.url)}\r\n                                >\r\n                                  <ZoomInIcon sx={{ color: 'white', fontSize: 32 }} />\r\n                                </Box>\r\n                              )}\r\n                            </Box>\r\n                            {image.caption && (\r\n                              <Box sx={{\r\n                                p: 1,\r\n                                borderTop: `1px solid ${theme.palette.divider}`,\r\n                                backgroundColor: alpha(theme.palette.background.paper, 0.7),\r\n                                maxHeight: 'none', // Ensure no max height constraint\r\n                                overflow: 'visible' // Prevent scrollbars\r\n                              }}>\r\n                                <Typography variant=\"caption\" sx={{\r\n                                  color: 'text.secondary',\r\n                                  display: 'block',\r\n                                  whiteSpace: 'pre-line',\r\n                                  fontSize: '0.7rem', // Even smaller font size for captions in view mode\r\n                                  lineHeight: 1.3, // Tighter line height for better readability\r\n                                  overflow: 'visible' // Prevent scrollbars\r\n                                }}>\r\n                                  {image.caption}\r\n                                </Typography>\r\n                              </Box>\r\n                            )}\r\n                          </Box>\r\n                        ))\r\n                      }\r\n                    </Box>\r\n                  ));\r\n                })()\r\n                }\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Stack>\r\n      </Box>\r\n    </AnimatedDropdown>\r\n  );\r\n};\r\n\r\nexport default TradeDetailExpanded;\r\n","import React, { useMemo, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  useTheme,\r\n  TextField,\r\n  Autocomplete,\r\n  Chip\r\n} from '@mui/material';\r\nimport {\r\n  getTagChipStyles,\r\n  formatTagForDisplay,\r\n  isGroupedTag,\r\n  getTagGroup,\r\n  getUniqueTagGroups,\r\n  filterTagsByGroup\r\n} from '../utils/tagColors';\r\nimport { BaseDialog, SelectInput } from './common';\r\n\r\ninterface TagFilterDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n  allTags: string[];\r\n  selectedTags: string[];\r\n  onTagsChange: (tags: string[]) => void;\r\n  showClearButton?: boolean;\r\n  showApplyButton?: boolean;\r\n}\r\n\r\nconst TagFilterDialog: React.FC<TagFilterDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  title = 'Filter by Tags',\r\n  allTags,\r\n  selectedTags,\r\n  onTagsChange,\r\n  showClearButton = true,\r\n  showApplyButton = true\r\n}) => {\r\n  const theme = useTheme();\r\n  const [selectedTagGroup, setSelectedTagGroup] = useState<string>('');\r\n\r\n  // Get all unique tag groups\r\n  const tagGroups = useMemo(() => {\r\n    return getUniqueTagGroups(allTags);\r\n  }, [allTags]);\r\n\r\n  // Filter tags by selected group\r\n  const filteredTags = useMemo(() => {\r\n    if (!selectedTagGroup) return allTags;\r\n    return filterTagsByGroup(allTags, selectedTagGroup);\r\n  }, [allTags, selectedTagGroup]);\r\n\r\n  const handleClearTags = () => {\r\n    onTagsChange([]);\r\n  };\r\n\r\n  const dialogTitle = (\r\n    <Typography variant=\"h6\">{title}</Typography>\r\n  );\r\n\r\n  const dialogActions = (showClearButton || showApplyButton) ? (\r\n    <Box>\r\n      {showClearButton && (\r\n        <Button onClick={handleClearTags} color=\"inherit\">\r\n          Clear All\r\n        </Button>\r\n      )}\r\n      {showApplyButton && (\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Apply\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  ) : undefined;\r\n\r\n  return (\r\n    <BaseDialog\r\n      open={open}\r\n      onClose={onClose}\r\n      title={dialogTitle}\r\n      actions={dialogActions}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n        {tagGroups.length > 0 && (\r\n          <SelectInput\r\n            label=\"Filter by Tag Group\"\r\n            value={selectedTagGroup}\r\n            onChange={(e) => setSelectedTagGroup(e.target.value as string)}\r\n            options={[\r\n              { value: \"\", label: \"All Tags\" },\r\n              ...tagGroups.map(group => ({ value: group, label: group }))\r\n            ]}\r\n            size=\"small\"\r\n          />\r\n        )}\r\n\r\n        <Autocomplete\r\n          multiple\r\n          options={filteredTags}\r\n          value={selectedTags}\r\n          onChange={(_, newValue) => onTagsChange(newValue)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Select Tags\"\r\n              placeholder=\"Choose tags to filter\"\r\n              fullWidth\r\n            />\r\n          )}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                label={formatTagForDisplay(option, true)}\r\n                {...getTagProps({ index })}\r\n                sx={getTagChipStyles(option, theme)}\r\n                title={isGroupedTag(option) ? `Group: ${getTagGroup(option)}` : undefined}\r\n              />\r\n            ))\r\n          }\r\n          renderOption={(props, option) => (\r\n            <li {...props}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                {isGroupedTag(option) && (\r\n                  <Chip\r\n                    label={getTagGroup(option)}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      ...getTagChipStyles(option, theme),\r\n                      height: '18px',\r\n                      fontSize: '0.7rem'\r\n                    }}\r\n                  />\r\n                )}\r\n                {formatTagForDisplay(option, true)}\r\n              </Box>\r\n            </li>\r\n          )}\r\n        />\r\n      </Box>\r\n\r\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n        {selectedTags.length > 0\r\n          ? `Selected ${selectedTags.length} tag${selectedTags.length > 1 ? 's' : ''}`\r\n          : 'Select tags to filter. When no tags are selected, all items will be shown.'}\r\n      </Typography>\r\n    </BaseDialog>\r\n  );\r\n};\r\n\r\nexport default TagFilterDialog;\r\n","import React from 'react';\r\nimport { Box, Typography, useTheme, Tooltip } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { CheckCircle, Flag } from '@mui/icons-material';\r\n\r\ninterface TargetBadgeProps {\r\n  progress: number;\r\n  isMet: boolean;\r\n  tooltipText?: string;\r\n}\r\n\r\nconst TargetBadge: React.FC<TargetBadgeProps> = ({\r\n  progress,\r\n  isMet,\r\n  tooltipText = 'Shows progress towards your target goal'\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const badgeContent = (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      bgcolor:  isMet ? alpha(theme.palette.success.main, 0.9) : alpha(theme.palette.primary.main, 0.1),\r\n      color:  isMet ? 'white' : 'primary.main',\r\n      borderRadius: '12px',\r\n      width: 'auto',\r\n      height: 22,\r\n      ml: 1,\r\n      px: 0.8,\r\n      border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`\r\n    }}>\r\n      {isMet ? (\r\n        <CheckCircle sx={{ fontSize: '0.875rem', mr: 0.3 }} />\r\n      ) : (\r\n        <Flag sx={{ fontSize: '0.875rem', mr: 0.3 }} />\r\n      )}\r\n      <Typography variant=\"caption\" sx={{ fontWeight: 600, fontSize: isMet ? '0.5rem' : '0.7rem' }}>\r\n        {Math.max(progress, 0).toFixed(0)}%\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Tooltip title={tooltipText} arrow placement=\"top\">\r\n      {badgeContent}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default TargetBadge;\r\n","/**\r\n * Format a numeric value as currency\r\n * @param amount The amount to format\r\n * @returns Formatted currency string\r\n */\r\nexport const formatValue = (amount: number): string => {\r\n  const absAmount = Math.abs(amount);\r\n  if (absAmount >= 1000) {\r\n    return `$${(amount / 1000).toFixed(1)}k`;\r\n  }\r\n  return `$${amount.toFixed(2)}`;\r\n};\r\n\r\n/**\r\n * Format a numeric value as currency with full precision\r\n * @param amount The amount to format\r\n * @returns Formatted currency string\r\n */\r\nexport const formatCurrency = (amount: number): string => {\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\n/**\r\n * Format a percentage value\r\n * @param value The percentage value to format\r\n * @param decimals Number of decimal places\r\n * @returns Formatted percentage string\r\n */\r\nexport const formatPercentage = (value: number, decimals: number = 1): string => {\r\n  return `${value.toFixed(decimals)}%`;\r\n};\r\n\r\n/**\r\n * Format a date in a consistent way\r\n * @param date The date to format\r\n * @param format The format to use (short, medium, long)\r\n * @returns Formatted date string\r\n */\r\nexport const formatDate = (date: Date, format: 'short' | 'medium' | 'long' = 'medium'): string => {\r\n  switch (format) {\r\n    case 'short':\r\n      return date.toLocaleDateString(undefined, { month: 'numeric', day: 'numeric' });\r\n    case 'medium':\r\n      return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' });\r\n    case 'long':\r\n      return date.toLocaleDateString(undefined, { month: 'long', day: 'numeric', year: 'numeric' });\r\n    default:\r\n      return date.toLocaleDateString();\r\n  }\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  Box,\r\n  IconButton,\r\n  useTheme\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  ZoomIn as ZoomInIcon,\r\n  RestartAlt as RestartAltIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface ImageZoomDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  imageUrl: string | null;\r\n}\r\n\r\nconst ImageZoomDialog: React.FC<ImageZoomDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  imageUrl\r\n}) => {\r\n  const theme = useTheme();\r\n  const [scale, setScale] = useState(1);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const imageRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleWheel = (e: React.WheelEvent) => {\r\n    e.preventDefault();\r\n    const delta = e.deltaY;\r\n    const newScale = delta > 0\r\n      ? Math.max(1, scale - 0.1)\r\n      : Math.min(3, scale + 0.1);\r\n\r\n    setScale(newScale);\r\n  };\r\n\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    if (scale > 1) {\r\n      e.preventDefault();\r\n      setIsDragging(true);\r\n      setDragStart({\r\n        x: e.clientX - position.x,\r\n        y: e.clientY - position.y\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging || scale <= 1) return;\r\n\r\n    e.preventDefault();\r\n    const newX = e.clientX - dragStart.x;\r\n    const newY = e.clientY - dragStart.y;\r\n\r\n    if (imageRef.current && containerRef.current) {\r\n      const containerRect = containerRef.current.getBoundingClientRect();\r\n      const imageRect = imageRef.current.getBoundingClientRect();\r\n\r\n      const maxX = (imageRect.width * (scale - 1)) / 2;\r\n      const maxY = (imageRect.height * (scale - 1)) / 2;\r\n\r\n      const boundedX = Math.min(Math.max(-maxX, newX), maxX);\r\n      const boundedY = Math.min(Math.max(-maxY, newY), maxY);\r\n\r\n      setPosition({\r\n        x: boundedX,\r\n        y: boundedY\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    setScale(1);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  // Reset zoom when image changes\r\n  useEffect(() => {\r\n    if (open) {\r\n      resetZoom();\r\n    }\r\n  }, [open, imageUrl]);\r\n\r\n  // Add event listeners for mouse up on document level\r\n  useEffect(() => {\r\n    const handleGlobalMouseUp = () => {\r\n      setIsDragging(false);\r\n    };\r\n\r\n    document.addEventListener('mouseup', handleGlobalMouseUp);\r\n    return () => {\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          boxShadow: 'none',\r\n          backgroundColor: 'transparent',\r\n          overflow: 'hidden',\r\n          maxWidth: '80%',\r\n          '& .MuiDialogContent-root': {\r\n            '&::-webkit-scrollbar': {\r\n              width: '8px',\r\n              height: '8px'\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              background: 'transparent'\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              background: theme.palette.mode === 'dark'\r\n                ? 'rgba(255, 255, 255, 0.2)'\r\n                : 'rgba(0, 0, 0, 0.2)',\r\n              borderRadius: '4px',\r\n              '&:hover': {\r\n                background: theme.palette.mode === 'dark'\r\n                  ? 'rgba(255, 255, 255, 0.3)'\r\n                  : 'rgba(0, 0, 0, 0.3)'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {imageUrl && (\r\n        <Box\r\n          ref={containerRef}\r\n          sx={{\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '80vh',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            overflow: 'hidden',\r\n            cursor: scale > 1 ? 'grab' : 'default',\r\n            '&:active': {\r\n              cursor: scale > 1 ? 'grabbing' : 'default'\r\n            }\r\n          }}\r\n          onWheel={handleWheel}\r\n          onMouseDown={handleMouseDown}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: 'relative',\r\n              transform: `scale(${scale}) translate(${position.x}px, ${position.y}px)`,\r\n              transition: isDragging ? 'none' : 'transform 0.1s ease-out'\r\n            }}\r\n          >\r\n            <img\r\n              ref={imageRef}\r\n              src={imageUrl}\r\n              alt=\"Trade\"\r\n              style={{\r\n                maxWidth: '100%',\r\n                maxHeight: '100%',\r\n                objectFit: 'contain',\r\n                userSelect: 'none',\r\n                pointerEvents: 'none'\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 16,\r\n              right: 16,\r\n              display: 'flex',\r\n              gap: 1,\r\n              backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n              borderRadius: 1,\r\n              p: 0.5\r\n            }}\r\n          >\r\n            <IconButton\r\n              onClick={() => setScale(Math.max(1, scale - 0.1))}\r\n              disabled={scale <= 1}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <ZoomInIcon sx={{ transform: 'rotate(45deg)' }} />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => setScale(Math.min(3, scale + 0.1))}\r\n              disabled={scale >= 3}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <ZoomInIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={resetZoom}\r\n              disabled={scale === 1}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <RestartAltIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={onClose}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ImageZoomDialog;\r\n","import React from 'react';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  ReferenceLine\r\n} from 'recharts';\r\nimport { Box, Paper, Typography, useTheme } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { format } from 'date-fns';\r\nimport { Trade } from '../../types/trade';\r\nimport { formatValue } from '../../utils/formatters';\r\n\r\ninterface CumulativePnLChartProps {\r\n  chartData: any[];\r\n  targetValue: number | null;\r\n  monthlyTarget?: number;\r\n  setMultipleTradesDialog: (dialogState: any) => void;\r\n  timePeriod: 'month' | 'year' | 'all';\r\n}\r\n\r\n// Custom Y-axis tick component\r\nconst CustomYAxisTick = (props: any) => {\r\n  const { x, y, payload } = props;\r\n  const value = payload.value;\r\n  const formattedValue = formatValue(value);\r\n  \r\n  return (\r\n    <g transform={`translate(${x},${y})`}>\r\n      <text x={0} y={0} dy={5} textAnchor=\"end\" fill=\"#666\" fontSize={12}>\r\n        {formattedValue}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\n// Custom tooltip component\r\nconst CustomTooltip = ({ active, payload, label, type }: any) => {\r\n  const theme = useTheme();\r\n  \r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    \r\n    return (\r\n      <Paper sx={{ p: 1.5, boxShadow: theme.shadows[3] }}>\r\n        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n          {label}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: data.dailyChange > 0 ? '#4caf50' : data.dailyChange < 0 ? '#f44336' : 'text.secondary',\r\n            fontWeight: 'bold'\r\n          }}\r\n        >\r\n          {formatValue(data.dailyChange)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Cumulative P&L: {formatValue(data.cumulativePnL)}\r\n        </Typography>\r\n        {data.trades && data.trades.length > 0 && (\r\n          <Typography variant=\"body2\" sx={{ color: theme.palette.primary.main, fontSize: '0.75rem', mt: 0.5 }}>\r\n            Click to view {data.trades.length} trade{data.trades.length > 1 ? 's' : ''}\r\n          </Typography>\r\n        )}\r\n      </Paper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst CumulativePnLChart: React.FC<CumulativePnLChartProps> = ({\r\n  chartData,\r\n  targetValue,\r\n  monthlyTarget,\r\n  setMultipleTradesDialog,\r\n  timePeriod\r\n}) => {\r\n  const theme = useTheme();\r\n  \r\n  // Define colors\r\n  const COLORS = {\r\n    win: '#4caf50',\r\n    loss: '#f44336',\r\n    zero: '#9e9e9e',\r\n    breakEven: '#ff9800'\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\">Cumulative P&L</Typography>\r\n        {monthlyTarget && targetValue !== null && (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              bgcolor: alpha(theme.palette.primary.main, 0.1),\r\n              px: 1.5,\r\n              py: 0.5,\r\n              borderRadius: 1,\r\n              fontSize: '0.875rem'\r\n            }}\r\n          >\r\n            Target: {monthlyTarget}% (${targetValue?.toFixed(2)})\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <AreaChart data={chartData}>\r\n          <defs>\r\n            <linearGradient id=\"colorPnLWin\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor={COLORS.win} stopOpacity={0.2} />\r\n              <stop offset=\"95%\" stopColor={COLORS.win} stopOpacity={0} />\r\n            </linearGradient>\r\n            <linearGradient id=\"colorPnLLoss\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor={COLORS.loss} stopOpacity={0.2} />\r\n              <stop offset=\"95%\" stopColor={COLORS.loss} stopOpacity={0} />\r\n            </linearGradient>\r\n          </defs>\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={{\r\n              fill: theme.palette.text.secondary,\r\n              fontSize: timePeriod === 'year' ? 8 : 12\r\n            }}\r\n          />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={<CustomYAxisTick />}\r\n          />\r\n          <Tooltip content={(props) => <CustomTooltip {...props} type=\"cumulative\" />} />\r\n          {targetValue !== null && (\r\n            <>\r\n              <ReferenceLine\r\n                y={targetValue}\r\n                stroke={theme.palette.primary.main}\r\n                strokeDasharray=\"4 4\"\r\n                strokeWidth={2}\r\n              />\r\n              {/* Add a semi-transparent area above the target line */}\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"cumulativePnL\"\r\n                stroke=\"none\"\r\n                fill={theme.palette.primary.main}\r\n                fillOpacity={0.05}\r\n                baseValue={targetValue}\r\n              />\r\n            </>\r\n          )}\r\n          <ReferenceLine y={0} stroke={COLORS.zero} strokeDasharray=\"3 3\" />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"cumulativePnL\"\r\n            stroke={COLORS.win}\r\n            fill=\"url(#colorPnLWin)\"\r\n            strokeWidth={2}\r\n            name=\"Cumulative P&L\"\r\n            style={{ cursor: 'pointer' }}\r\n            activeDot={(props) => {\r\n              const { cx, cy, index } = props;\r\n              return (\r\n                <circle\r\n                  cx={cx}\r\n                  cy={cy}\r\n                  r={6}\r\n                  stroke={theme.palette.background.paper}\r\n                  strokeWidth={2}\r\n                  fill={theme.palette.primary.main}\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    console.log('Dot clicked, Index:', index);\r\n                    const dataPoint = chartData[index];\r\n                    if (dataPoint && dataPoint.trades && dataPoint.trades.length > 0) {\r\n                      const formattedDate = format(dataPoint.fullDate, 'MMMM d, yyyy');\r\n                      setMultipleTradesDialog({\r\n                        open: true,\r\n                        trades: dataPoint.trades,\r\n                        date: formattedDate,\r\n                        expandedTradeId: dataPoint.trades.length === 1 ? dataPoint.trades[0].id : null\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            dot={{\r\n              r: 3,\r\n              fill: COLORS.win,\r\n              stroke: theme.palette.background.paper,\r\n              strokeWidth: 1\r\n            }}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CumulativePnLChart;\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n  Cell\r\n} from 'recharts';\r\nimport { Paper, Typography, useTheme } from '@mui/material';\r\nimport { format } from 'date-fns'; \r\n import { formatValue } from '../../utils/formatters';\r\n\r\ninterface DailyPnLChartProps {\r\n  chartData: any[];\r\n  drawdownViolationValue: number;\r\n  setMultipleTradesDialog: (dialogState: any) => void;\r\n  timePeriod: 'month' | 'year' | 'all';\r\n}\r\n\r\n// Custom Y-axis tick component for daily P&L\r\nconst CustomDailyPnLYAxisTick = (props: any) => {\r\n  const { x, y, payload } = props;\r\n  const value = payload.value;\r\n  const formattedValue = formatValue(value);\r\n  \r\n  return (\r\n    <g transform={`translate(${x},${y})`}>\r\n      <text x={0} y={0} dy={5} textAnchor=\"end\" fill=\"#666\" fontSize={12}>\r\n        {formattedValue}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\n// Custom tooltip component\r\nconst CustomTooltip = ({ active, payload, label, type }: any) => {\r\n  const theme = useTheme();\r\n  \r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    \r\n    return (\r\n      <Paper sx={{ p: 1.5, boxShadow: theme.shadows[3] }}>\r\n        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n          {label}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: data.isWin ? '#4caf50' : data.isLoss ? '#f44336' : 'text.secondary',\r\n            fontWeight: 'bold'\r\n          }}\r\n        >\r\n          {formatValue(data.pnl)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {data.isWin ? 'Win' : data.isLoss ? 'Loss' : 'Break Even'}\r\n        </Typography>\r\n        {data.trades && data.trades.length > 0 && (\r\n          <Typography variant=\"body2\" sx={{ color: theme.palette.primary.main, fontSize: '0.75rem', mt: 0.5 }}>\r\n            Click to view {data.trades.length} trade{data.trades.length > 1 ? 's' : ''}\r\n          </Typography>\r\n        )}\r\n      </Paper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst DailyPnLChart: React.FC<DailyPnLChartProps> = ({\r\n  chartData,\r\n  drawdownViolationValue,\r\n  setMultipleTradesDialog,\r\n  timePeriod\r\n}) => {\r\n  const theme = useTheme();\r\n  \r\n  // Define colors\r\n  const COLORS = {\r\n    win: '#4caf50',\r\n    loss: '#f44336',\r\n    zero: '#9e9e9e',\r\n    breakEven: '#ff9800'\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\r\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n        Daily P&L\r\n      </Typography>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={{\r\n              fill: theme.palette.text.secondary,\r\n              fontSize: timePeriod === 'year' ? 8 : 12\r\n            }}\r\n          />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={<CustomDailyPnLYAxisTick />}\r\n          />\r\n          <Tooltip content={(props) => <CustomTooltip {...props} type=\"daily\" />} />\r\n          <ReferenceLine y={0} stroke={COLORS.zero} strokeDasharray=\"3 3\" />\r\n          <ReferenceLine\r\n            y={drawdownViolationValue}\r\n            stroke={theme.palette.error.main}\r\n            strokeDasharray=\"3 3\"\r\n            strokeWidth={2}\r\n            label={{\r\n              position: 'right',\r\n              value: `Max Drawdown: ${formatValue(drawdownViolationValue)}`,\r\n              fill: theme.palette.error.main,\r\n              fontSize: 12,\r\n              fontWeight: 'bold'\r\n            }}\r\n          />\r\n          <Bar\r\n            dataKey=\"pnl\"\r\n            name=\"Daily P&L\"\r\n            radius={[4, 4, 0, 0]}\r\n            onClick={(data: any) => {\r\n              console.log('Bar clicked:', data);\r\n              if (data && data.payload) {\r\n                const payload = data.payload;\r\n                if (payload.trades && payload.trades.length > 0) {\r\n                  const formattedDate = format(payload.fullDate, 'MMMM d, yyyy');\r\n                  setMultipleTradesDialog({\r\n                    open: true,\r\n                    trades: payload.trades,\r\n                    date: formattedDate,\r\n                    expandedTradeId: payload.trades.length === 1 ? payload.trades[0].id : null\r\n                  });\r\n                }\r\n              }\r\n            }}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {chartData.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={entry.isWin ? COLORS.win : entry.isLoss ? COLORS.loss : COLORS.breakEven}\r\n                fillOpacity={0.8}\r\n              />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DailyPnLChart;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  Tooltip\r\n} from 'recharts';\r\nimport { Box, Paper, Typography, useTheme, Button } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { PieChart as PieChartIcon, DonutLarge as DonutLargeIcon } from '@mui/icons-material';\r\nimport { getTagColor } from '../../utils/tagColors';\r\n\r\nimport TagFilterDialog from '../TagFilterDialog';\r\n\r\ninterface WinLossDistributionProps {\r\n  winLossData: any[];\r\n  comparisonWinLossData?: any[] | null;\r\n  allTags: string[];\r\n  comparisonTags: string[];\r\n  setComparisonTags: (tags: string[]) => void;\r\n  onPieClick?: (category: string) => void;\r\n  tagStats?: { tag: string; totalTrades: number }[];\r\n}\r\n\r\nconst WinLossDistribution: React.FC<WinLossDistributionProps> = ({\r\n  winLossData,\r\n  comparisonWinLossData,\r\n  allTags,\r\n  comparisonTags,\r\n  setComparisonTags,\r\n  onPieClick,\r\n  tagStats = []\r\n}) => {\r\n  const theme = useTheme();\r\n  const [comparisonTagsDialogOpen, setComparisonTagsDialogOpen] = useState(false);\r\n\r\n  // Add a style element to remove focus outlines from SVG elements\r\n  React.useEffect(() => {\r\n    // Create a style element\r\n    const style = document.createElement('style');\r\n    // Add CSS to remove focus outlines from SVG elements\r\n    style.innerHTML = `\r\n      .recharts-sector:focus,\r\n      .recharts-sector:focus-visible,\r\n      .recharts-pie:focus,\r\n      .recharts-pie:focus-visible,\r\n      .recharts-pie-sector:focus,\r\n      .recharts-pie-sector:focus-visible,\r\n      .recharts-layer:focus,\r\n      .recharts-layer:focus-visible,\r\n      .recharts-surface:focus,\r\n      .recharts-surface:focus-visible {\r\n        outline: none !important;\r\n        stroke: none !important;\r\n        stroke-width: 0 !important;\r\n        box-shadow: none !important;\r\n      }\r\n\r\n      /* Target all SVG elements in the chart */\r\n      .recharts-wrapper svg *:focus,\r\n      .recharts-wrapper svg *:focus-visible,\r\n      .win-loss-chart-container svg *:focus,\r\n      .win-loss-chart-container svg *:focus-visible {\r\n        outline: none !important;\r\n        stroke-width: 0 !important;\r\n      }\r\n    `;\r\n    // Append the style element to the document head\r\n    document.head.appendChild(style);\r\n\r\n    // Clean up the style element when the component unmounts\r\n    return () => {\r\n      document.head.removeChild(style);\r\n    };\r\n  }, []);\r\n\r\n  // Define colors with enhanced visual appeal\r\n  const COLORS = {\r\n    win: theme.palette.mode === 'dark' ? '#66bb6a' : '#4caf50', // Slightly lighter green in dark mode\r\n    loss: theme.palette.mode === 'dark' ? '#ef5350' : '#f44336', // Slightly lighter red in dark mode\r\n    zero: theme.palette.mode === 'dark' ? '#bdbdbd' : '#9e9e9e', // Lighter gray in dark mode\r\n    breakEven: theme.palette.mode === 'dark' ? '#ffb74d' : '#ff9800' // Lighter orange in dark mode\r\n  };\r\n\r\n  // Define chart styling\r\n  const chartStyle = {\r\n    outerRadius: 100,\r\n    innerRadius: 60,\r\n    paddingAngle: 3,\r\n    cornerRadius: 4,\r\n    activeFillOpacity: 0.9,\r\n    hoverShadowColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)',\r\n    labelFontSize: '0.85rem',\r\n    labelFontWeight: 500\r\n  };\r\n\r\n  // Generate tag distribution data when in tag distribution mode\r\n  const generateTagDistributionData = () => {\r\n    if (!comparisonTags || comparisonTags.length === 0) return [];\r\n\r\n    // If we don't have any win/loss data, we can't generate tag distribution\r\n    if (!comparisonWinLossData || !comparisonWinLossData.some(d => d.value > 0)) {\r\n      return [];\r\n    }\r\n\r\n    // Create a map to store the count for each tag\r\n    const tagCounts = new Map<string, number>();\r\n\r\n    // Use the tagStats from the parent component if available\r\n    if (tagStats && tagStats.length > 0) {\r\n      // Filter to only include the selected comparison tags\r\n      const filteredTagStats = tagStats.filter(stat => comparisonTags.includes(stat.tag));\r\n\r\n      // If we have stats for the selected tags, use them\r\n      if (filteredTagStats.length > 0) {\r\n        filteredTagStats.forEach(stat => {\r\n          tagCounts.set(stat.tag, stat.totalTrades);\r\n        });\r\n      } else {\r\n        // Fallback if we don't have stats for the selected tags\r\n        comparisonTags.forEach(tag => {\r\n          // Use a hash of the tag name to generate a consistent value\r\n          const hash = tag.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\r\n          // Generate a value between 1 and 10 based on the hash\r\n          const value = (hash % 10) + 1;\r\n          tagCounts.set(tag, value);\r\n        });\r\n      }\r\n    } else {\r\n      // Fallback if we don't have any tag stats\r\n      comparisonTags.forEach(tag => {\r\n        // Use a hash of the tag name to generate a consistent value\r\n        const hash = tag.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\r\n        // Generate a value between 1 and 10 based on the hash\r\n        const value = (hash % 10) + 1;\r\n        tagCounts.set(tag, value);\r\n      });\r\n    }\r\n\r\n    // Convert to the format needed for the pie chart\r\n    return Array.from(tagCounts.entries())\r\n      .map(([tag, count]) => ({\r\n        name: tag,\r\n        value: count\r\n      }));\r\n  };\r\n\r\n  // Get the appropriate data based on whether tags are selected\r\n  const chartData = comparisonTags.length > 0\r\n    ? generateTagDistributionData()\r\n    : winLossData;\r\n\r\n  return (\r\n    <Paper\r\n      elevation={theme.palette.mode === 'dark' ? 2 : 1}\r\n      sx={{\r\n        p: 3,\r\n        borderRadius: 2,\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        bgcolor: theme.palette.background.paper,\r\n      }}>\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        mb: 3,\r\n        pb: 1.5,\r\n      }}>\r\n        <Typography variant=\"h6\" sx={{\r\n           \r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 1\r\n        }}>\r\n          {comparisonTags.length > 0 ? (\r\n            <>\r\n              \r\n              Tag Distribution\r\n            </>\r\n          ) : (\r\n            <>\r\n             \r\n              Win/Loss Distribution\r\n            </>\r\n          )}\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={() => setComparisonTagsDialogOpen(true)}\r\n          sx={{ textTransform: 'none' }}\r\n        >\r\n          {comparisonTags.length > 0 ? `Compare: ${comparisonTags.length} tags` : 'Compare Tags'}\r\n        </Button>\r\n        <TagFilterDialog\r\n          open={comparisonTagsDialogOpen}\r\n          onClose={() => setComparisonTagsDialogOpen(false)}\r\n          title=\"Select Tags to Compare\"\r\n          allTags={allTags}\r\n          selectedTags={comparisonTags}\r\n          onTagsChange={(tags) => setComparisonTags(tags)}\r\n          showApplyButton={true}\r\n          showClearButton={true}\r\n        />\r\n      </Box>\r\n      <Box sx={{ flex: 1, minHeight: 300 }} className=\"win-loss-chart-container\">\r\n        {/* Show message when no data is available */}\r\n        {comparisonTags.length > 0 && chartData.length === 0 ? (\r\n          <Box sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '100%',\r\n            flexDirection: 'column',\r\n            gap: 2\r\n          }}>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              No trades found with the selected tags\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              Try selecting different tags for comparison\r\n            </Typography>\r\n          </Box>\r\n        ) : (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart\r\n              style={{ outline: 'none' }}\r\n              tabIndex={-1}\r\n              margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\r\n            >\r\n              <Tooltip\r\n                content={({ active, payload }) => {\r\n                  if (active && payload && payload.length) {\r\n                    const data = payload[0].payload;\r\n                    return (\r\n                      <Paper sx={{ p: 1.5, boxShadow: theme.shadows[3] }}>\r\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n                          {data.name}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          sx={{\r\n                            color: comparisonTags.length > 0\r\n                              ? getTagColor(data.name)\r\n                              : data.name === 'Wins'\r\n                                ? COLORS.win\r\n                                : data.name === 'Losses'\r\n                                  ? COLORS.loss\r\n                                  : COLORS.breakEven,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        >\r\n                          {data.value} trade{data.value !== 1 ? 's' : ''}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          {(data.value / chartData.reduce((sum, item) => sum + item.value, 0) * 100).toFixed(1)}% of total\r\n                        </Typography>\r\n                        {onPieClick && (\r\n                          <Typography variant=\"body2\" sx={{ color: theme.palette.primary.main, fontSize: '0.75rem', mt: 0.5 }}>\r\n                            Click to view trades\r\n                          </Typography>\r\n                        )}\r\n                      </Paper>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n              <Pie\r\n                data={chartData}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                outerRadius={chartStyle.outerRadius}\r\n                strokeWidth={0}\r\n                innerRadius={chartStyle.innerRadius}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                label={({ name, percent }) => {\r\n                  // Only show labels for segments with significant percentage\r\n                  if (percent < 0.05) return null;\r\n                  return `${name} ${(percent * 100).toFixed(0)}%`;\r\n                }}\r\n                paddingAngle={chartStyle.paddingAngle}\r\n                cornerRadius={chartStyle.cornerRadius}\r\n                onClick={(data) => {\r\n                  if (onPieClick) {\r\n                    onPieClick(data.name);\r\n                  }\r\n                }}\r\n                cursor={'pointer'}\r\n                style={{\r\n                  outline: 'none',\r\n                  filter: 'drop-shadow(0px 2px 5px rgba(0,0,0,0.1))'\r\n                }}\r\n                tabIndex={-1}\r\n              >\r\n                {chartData.map((entry, index) => {\r\n                  // Determine the fill color based on whether we're showing tags or win/loss\r\n                  let fillColor;\r\n                  if (comparisonTags.length > 0) {\r\n                    // For tag distribution, use the tag's color from the tagColors utility\r\n                    fillColor = getTagColor(entry.name);\r\n                  } else {\r\n                    // For win/loss distribution, use the predefined colors\r\n                    fillColor = entry.name === 'Wins' ? COLORS.win :\r\n                               entry.name === 'Losses' ? COLORS.loss :\r\n                               COLORS.breakEven;\r\n                  }\r\n\r\n                  return (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={fillColor}\r\n                      strokeWidth={1}\r\n                      stroke={theme.palette.background.paper}\r\n                      style={{\r\n                        outline: 'none',\r\n                        transition: 'opacity 0.3s'\r\n                      }}\r\n                    />\r\n                  );\r\n                })}\r\n              </Pie>\r\n              <Legend\r\n                verticalAlign=\"bottom\"\r\n                align=\"center\"\r\n                layout=\"horizontal\"\r\n                iconSize={12}\r\n                iconType=\"circle\"\r\n                wrapperStyle={{\r\n                  paddingTop: 15,\r\n                  fontSize: '0.85rem',\r\n                  fontWeight: 500\r\n                }}\r\n              />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n      </Box>\r\n      {/* Only show this message when we're displaying a chart */}\r\n      {!(comparisonTags.length > 0 && chartData.length === 0) && (\r\n        <Box sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          mt: 2,\r\n          pt: 1.5,\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          marginTop: 'auto'\r\n        }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontWeight: 500 }}>\r\n            {comparisonTags.length > 0\r\n              ? 'Showing distribution of selected tags'\r\n              : 'Showing win/loss distribution for all trades'}\r\n          </Typography>\r\n          {onPieClick && (\r\n            <Box sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 0.5,\r\n              mt: 0.5,\r\n              bgcolor: alpha(theme.palette.primary.main, 0.08),\r\n              px: 1.5,\r\n              py: 0.5,\r\n              borderRadius: 1\r\n            }}>\r\n              <Typography variant=\"caption\" color=\"primary\" sx={{ fontWeight: 500 }}>\r\n                Click on a segment to view trades\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default WinLossDistribution;\r\n","import React, { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell\n} from 'recharts';\nimport { Box, Paper, Typography, useTheme, Button, alpha, Tooltip as MuiTooltip } from '@mui/material';\nimport { InfoOutlined } from '@mui/icons-material';\nimport { format, isSameMonth } from 'date-fns';\nimport { Trade } from '../../types/trade';\nimport { formatValue } from '../../utils/formatters';\nimport TagFilterDialog from '../TagFilterDialog';\n\ninterface TagPerformanceAnalysisProps {\n  trades: Trade[];\n  selectedDate: Date;\n  timePeriod: 'month' | 'year' | 'all';\n  allTags: string[];\n  primaryTags: string[];\n  secondaryTags: string[];\n  setPrimaryTags: (tags: string[]) => void;\n  setSecondaryTags: (tags: string[]) => void;\n  filteredTagStats: any[];\n  setMultipleTradesDialog: (dialogState: any) => void;\n}\n\nconst TagPerformanceAnalysis: React.FC<TagPerformanceAnalysisProps> = ({\n  trades,\n  selectedDate,\n  timePeriod,\n  allTags,\n  primaryTags,\n  secondaryTags,\n  setPrimaryTags,\n  setSecondaryTags,\n  filteredTagStats,\n  setMultipleTradesDialog\n}) => {\n  const theme = useTheme();\n  const [primaryTagsDialogOpen, setPrimaryTagsDialogOpen] = useState(false);\n  const [secondaryTagsDialogOpen, setSecondaryTagsDialogOpen] = useState(false);\n\n  // Define colors\n  const COLORS = {\n    win: '#4caf50',\n    loss: '#f44336',\n    zero: '#9e9e9e',\n    breakEven: '#ff9800'\n  };\n\n  return (\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Typography variant=\"h6\">Tag Performance Analysis</Typography>\n          <MuiTooltip\n            title=\"Analyze how different tags perform. Select primary tags to filter, and optionally secondary tags to see how they perform in combination.\"\n            arrow\n            placement=\"top\"\n          >\n            <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n          </MuiTooltip>\n        </Box>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setPrimaryTagsDialogOpen(true)}\n            sx={{ textTransform: 'none' }}\n          >\n            {primaryTags.length > 0 ? `Primary: ${primaryTags.length} tags` : 'Select Primary Tags'}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setSecondaryTagsDialogOpen(true)}\n            sx={{ textTransform: 'none' }}\n          >\n            {secondaryTags.length > 0 ? `Secondary: ${secondaryTags.length} tags` : 'Select Secondary Tags'}\n          </Button>\n          <TagFilterDialog\n            open={primaryTagsDialogOpen}\n            onClose={() => setPrimaryTagsDialogOpen(false)}\n            title=\"Select Primary Tags\"\n            allTags={allTags}\n            selectedTags={primaryTags}\n            onTagsChange={(tags) => setPrimaryTags(tags)}\n            showApplyButton={true}\n            showClearButton={true}\n          />\n          <TagFilterDialog\n            open={secondaryTagsDialogOpen}\n            onClose={() => setSecondaryTagsDialogOpen(false)}\n            title=\"Select Secondary Tags\"\n            allTags={allTags}\n            selectedTags={secondaryTags}\n            onTagsChange={(tags) => setSecondaryTags(tags)}\n            showApplyButton={true}\n            showClearButton={true}\n          />\n        </Box>\n      </Box>\n      {primaryTags.length === 0 && secondaryTags.length === 0 ? (\n        <Box sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: 300,\n          bgcolor: alpha(theme.palette.background.paper, 0.4),\n          borderRadius: 2,\n          p: 3\n        }}>\n          <Typography variant=\"h6\" color=\"text.secondary\" sx={{ mb: 1 }}>\n            No Tags Selected\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            Please select primary or secondary tags to view performance analysis.\n          </Typography>\n        </Box>\n      ) : (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart\n            data={filteredTagStats}\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            maxBarSize={50}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            <XAxis\n              dataKey=\"tag\"\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            />\n            <Tooltip\n              content={({ active, payload, label }) => {\n                if (active && payload && payload.length) {\n                  const data = payload[0].payload;\n                  return (\n                    <Paper sx={{ p: 1.5, bgcolor: 'background.paper' }}>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                        {label}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.win }}>\n                        Wins: {data.wins}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.loss }}>\n                        Losses: {data.losses}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Win Rate: {data.winRate}%\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        sx={{\n                          color: data.totalPnL > 0 ? COLORS.win : COLORS.loss,\n                          fontWeight: 'bold',\n                          mt: 0.5\n                        }}\n                      >\n                        P&L: {formatValue(data.totalPnL)}\n                      </Typography>\n                    </Paper>\n                  );\n                }\n                return null;\n              }}\n            />\n            <Legend />\n            <Bar\n              dataKey=\"wins\"\n              name=\"Wins\"\n              stackId=\"trades\"\n              fill={COLORS.win}\n              radius={[4, 4, 0, 0]}\n              onClick={(data) => {\n               if (data && data.payload) {\n                 const tag = data.payload.tag;\n                 const filteredTrades = trades.filter(trade =>\n                   trade.tags?.includes(tag) &&\n                   trade.type === 'win' &&\n                   (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                    timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                    true)\n                 );\n                 if (filteredTrades.length > 0) {\n                   setMultipleTradesDialog({\n                     open: true,\n                     trades: filteredTrades,\n                     date: `Winning trades with tag: ${tag}`,\n                     expandedTradeId: filteredTrades.length === 1 ? filteredTrades[0].id : null\n                   });\n                 }\n               }\n             }}\n             style={{ cursor: 'pointer' }}\n            />\n            <Bar\n              dataKey=\"losses\"\n              name=\"Losses\"\n              stackId=\"trades\"\n              fill={COLORS.loss}\n              radius={[4, 4, 0, 0]}\n              onClick={(data) => {\n               if (data && data.payload) {\n                 const tag = data.payload.tag;\n                 const filteredTrades = trades.filter(trade =>\n                   trade.tags?.includes(tag) &&\n                   trade.type === 'loss' &&\n                   (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                    timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                    true)\n                 );\n                 if (filteredTrades.length > 0) {\n                   setMultipleTradesDialog({\n                     open: true,\n                     trades: filteredTrades,\n                     date: `Losing trades with tag: ${tag}`,\n                     expandedTradeId: filteredTrades.length === 1 ? filteredTrades[0].id : null\n                   });\n                 }\n               }\n             }}\n             style={{ cursor: 'pointer' }}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </Paper>\n  );\n};\n\nexport default TagPerformanceAnalysis;\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  useTheme,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Box,\n  Tooltip\n} from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport { InfoOutlined, TrendingUp, TrendingDown, TrendingFlat } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { Trade } from '../../types/trade';\nimport { formatValue } from '../../utils/formatters';\nimport { scrollbarStyles } from '../../styles/scrollbarStyles';\n\ninterface DailySummaryTableProps {\n  dailySummaryData: any[];\n  trades: Trade[];\n  setMultipleTradesDialog: (dialogState: any) => void;\n}\n\nconst DailySummaryTable: React.FC<DailySummaryTableProps> = ({\n  dailySummaryData,\n  trades,\n  setMultipleTradesDialog\n}) => {\n  const theme = useTheme();\n\n  // Calculate total PnL from dailySummaryData\n  const totalPnL = React.useMemo(() => {\n    if (!dailySummaryData || dailySummaryData.length === 0) return 0;\n    return dailySummaryData.reduce((sum, day) => sum + day.pnl, 0);\n  }, [dailySummaryData]);\n\n  return (\n    <Paper sx={{ p: 3, borderRadius: 2, height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Typography variant=\"h6\">Daily Summary</Typography>\n          <Tooltip\n            title=\"Daily trading summary showing trades, session, and P&L for each day\"\n            arrow\n            placement=\"top\"\n          >\n            <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n          </Tooltip>\n        </Box>\n        {dailySummaryData && dailySummaryData.length > 0 && (\n          <Box sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            bgcolor: alpha(\n              totalPnL > 0\n                ? theme.palette.success.main\n                : totalPnL < 0\n                ? theme.palette.error.main\n                : theme.palette.grey[500],\n              0.1\n            ),\n            px: 1.5,\n            py: 0.5,\n            borderRadius: 2,\n            border: `1px solid ${alpha(\n              totalPnL > 0\n                ? theme.palette.success.main\n                : totalPnL < 0\n                ? theme.palette.error.main\n                : theme.palette.grey[500],\n              0.2\n            )}`,\n          }}>\n          {totalPnL > 0 ? (\n            <TrendingUp sx={{ color: theme.palette.success.main }} />\n          ) : totalPnL < 0 ? (\n            <TrendingDown sx={{ color: theme.palette.error.main }} />\n          ) : (\n            <TrendingFlat sx={{ color: theme.palette.grey[500] }} />\n          )}\n          <Typography\n            variant=\"subtitle1\"\n            sx={{\n              fontWeight: 600,\n              color: totalPnL > 0\n                ? theme.palette.success.main\n                : totalPnL < 0\n                ? theme.palette.error.main\n                : 'text.secondary'\n            }}\n          >\n            Total P&L: {formatValue(totalPnL)}\n          </Typography>\n        </Box>\n        )}\n      </Box>\n      <TableContainer sx={{\n        flex: 1,\n        overflow: 'auto',\n        ...scrollbarStyles(theme)\n      }}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                DATE\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                TRADES\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                SESSION\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                P/L\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {dailySummaryData.map((row) => (\n              <TableRow\n                key={format(row.date, 'yyyy-MM-dd')}\n                onClick={() => {\n                  const dayTrades = trades.filter(trade =>\n                    format(new Date(trade.date), 'yyyy-MM-dd') === format(row.date, 'yyyy-MM-dd')\n                  );\n                  if (dayTrades.length > 0) {\n                    setMultipleTradesDialog({\n                      open: true,\n                      trades: dayTrades,\n                      date: format(row.date, 'dd/MM/yyyy'),\n                      expandedTradeId: dayTrades.length === 1 ? dayTrades[0].id : null\n                    });\n                  }\n                }}\n                sx={{\n                  '&:last-child td, &:last-child th': { border: 0 },\n                  '&:hover': {\n                    backgroundColor: alpha(theme.palette.primary.main, 0.04),\n                    cursor: 'pointer'\n                  },\n                  bgcolor: row.pnl > 0\n                    ? alpha(theme.palette.success.main, 0.05)\n                    : row.pnl < 0\n                    ? alpha(theme.palette.error.main, 0.05)\n                    : 'transparent'\n                }}\n              >\n                <TableCell\n                  sx={{\n                    fontWeight: 500,\n                    color: 'text.primary'\n                  }}\n                >\n                  {format(row.date, 'dd/MM/yyyy')}\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  sx={{\n                    fontWeight: 500,\n                    color: 'text.primary'\n                  }}\n                >\n                  {row.trades}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.session ? (\n                    <Typography\n                      sx={{\n                        color: 'text.primary',\n                        fontWeight: 500\n                      }}\n                    >\n                      {row.session}\n                    </Typography>\n                  ) : (\n                    <Typography\n                      sx={{\n                        color: 'text.secondary',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      —\n                    </Typography>\n                  )}\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  sx={{\n                    color: row.pnl > 0\n                      ? theme.palette.success.main\n                      : row.pnl < 0\n                      ? theme.palette.error.main\n                      : 'text.secondary',\n                    fontWeight: 600,\n                    fontSize: '0.875rem'\n                  }}\n                >\n                  {formatValue(row.pnl)}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default DailySummaryTable;\n","import React from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from 'recharts';\nimport { Box, Paper, Typography, useTheme, Stack, alpha } from '@mui/material';\nimport { format, isSameMonth } from 'date-fns';\nimport { Trade } from '../../types/trade';\nimport { formatValue } from '../../utils/formatters';\n\ninterface SessionPerformanceAnalysisProps {\n  sessionStats: any[];\n  trades: Trade[];\n  selectedDate: Date;\n  timePeriod: 'month' | 'year' | 'all';\n  setMultipleTradesDialog: (dialogState: any) => void;\n}\n\nconst SessionPerformanceAnalysis: React.FC<SessionPerformanceAnalysisProps> = ({\n  sessionStats,\n  trades,\n  selectedDate,\n  timePeriod,\n  setMultipleTradesDialog\n}) => {\n  const theme = useTheme();\n\n  // Define colors\n  const COLORS = {\n    win: '#4caf50',\n    loss: '#f44336',\n    zero: '#9e9e9e',\n    breakEven: '#ff9800'\n  };\n\n  return (\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Session Performance\n      </Typography>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n          {sessionStats.map(session => (\n            <Paper\n              key={session.session}\n              sx={{\n                p: 2,\n                border: `1px solid ${alpha(\n                  session.totalPnL > 0 ? theme.palette.success.main : theme.palette.error.main,\n                  0.1\n                )}`,\n                borderRadius: 2,\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.02)',\n                opacity: session.totalTrades === 0 ? 0.5 : 1,\n                cursor: session.totalTrades > 0 ? 'pointer' : 'default',\n                transition: 'all 0.2s',\n                '&:hover': {\n                  boxShadow: session.totalTrades > 0 ? theme.shadows[2] : 'none',\n                  bgcolor: session.totalTrades > 0 ? alpha(theme.palette.primary.main, 0.05) : theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.02)'\n                }\n              }}\n              onClick={() => {\n                if (session.totalTrades > 0) {\n                  const sessionTrades = trades.filter(trade =>\n                    trade.session === session.session &&\n                    (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                     timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                     true)\n                  );\n                  setMultipleTradesDialog({\n                    open: true,\n                    trades: sessionTrades,\n                    date: `${session.session} Session Trades`,\n                    expandedTradeId: sessionTrades.length === 1 ? sessionTrades[0].id : null\n                  });\n                }\n              }}\n            >\n              <Typography variant=\"subtitle2\" gutterBottom>\n                {session.session}\n              </Typography>\n\n              <Stack spacing={1}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total Trades\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    {session.totalTrades}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Win Rate\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: session.winRate >= 50 ? theme.palette.success.main : theme.palette.error.main\n                    }}\n                  >\n                    {session.winRate.toFixed(1)}%\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    P&L\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: session.totalPnL > 0 ? theme.palette.success.main : theme.palette.error.main,\n                      fontWeight: 500\n                    }}\n                  >\n                    {formatValue(session.totalPnL)}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    Avg P&L per Trade\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      ml: 1,\n                      color: session.averagePnL > 0 ? theme.palette.success.main : theme.palette.error.main\n                    }}\n                  >\n                    {formatValue(session.averagePnL)}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Account %\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: session.pnlPercentage > 0 ? theme.palette.success.main : theme.palette.error.main\n                    }}\n                  >\n                    {session.pnlPercentage.toFixed(2)}%\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\n                  <Box\n                    sx={{\n                      flex: session.winners,\n                      height: 6,\n                      bgcolor: COLORS.win,\n                      borderRadius: 1\n                    }}\n                  />\n                  <Box\n                    sx={{\n                      flex: session.losers,\n                      height: 6,\n                      bgcolor: COLORS.loss,\n                      borderRadius: 1\n                    }}\n                  />\n                </Box>\n              </Stack>\n            </Paper>\n          ))}\n        </Box>\n\n        {/* Session Performance Chart */}\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart\n            data={sessionStats}\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            maxBarSize={50}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            <XAxis\n              dataKey=\"session\"\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n              tickFormatter={(value) => `${value}%`}\n            />\n            <Tooltip\n              content={({ active, payload, label }) => {\n                if (active && payload && payload.length) {\n                  const data = payload[0].payload;\n                  return (\n                    <Paper sx={{ p: 1.5, bgcolor: 'background.paper' }}>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                        {label}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.win }}>\n                        Wins: {data.winners}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.loss }}>\n                        Losses: {data.losers}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Win Rate: {data.winRate.toFixed(1)}%\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        sx={{\n                          color: data.totalPnL > 0 ? COLORS.win : COLORS.loss,\n                          fontWeight: 'bold',\n                          mt: 0.5\n                        }}\n                      >\n                        P&L: {formatValue(data.totalPnL)}\n                      </Typography>\n                    </Paper>\n                  );\n                }\n                return null;\n              }}\n            />\n            <Bar\n              dataKey=\"winRate\"\n              name=\"Win Rate\"\n              fill={theme.palette.primary.main}\n              radius={[4, 4, 0, 0]}\n              onClick={(data) => {\n                if (data && data.payload) {\n                  const sessionName = data.payload.session;\n                  const sessionTrades = trades.filter(trade =>\n                    trade.session === sessionName &&\n                    (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                     timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                     true)\n                  );\n                  if (sessionTrades.length > 0) {\n                    setMultipleTradesDialog({\n                      open: true,\n                      trades: sessionTrades,\n                      date: `${sessionName} Session Trades`,\n                      expandedTradeId: sessionTrades.length === 1 ? sessionTrades[0].id : null\n                    });\n                  }\n                }\n              }}\n              style={{ cursor: 'pointer' }}\n            >\n              {sessionStats.map((entry, index) => (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={entry.winRate >= 50 ? COLORS.win : COLORS.loss}\n                  fillOpacity={0.8}\n                />\n              ))}\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default SessionPerformanceAnalysis;\n","import React from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n  Box,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n  ExpandMore as ExpandIcon,\r\n  ExpandLess as CollapseIcon,\r\n  Balance as RiskIcon\r\n} from '@mui/icons-material';\r\nimport { Trade } from '../../types/trade';\r\nimport TradeDetailExpanded from '../TradeDetailExpanded';\r\nimport { BaseDialog } from '../common';\r\n\r\ninterface TradesDialogProps {\r\n  open: boolean;\r\n  trades: Trade[];\r\n  date: string;\r\n  expandedTradeId: string | null;\r\n  onClose: () => void;\r\n  onTradeExpand: (tradeId: string) => void;\r\n  onZoomImage: (imageUrl: string) => void;\r\n}\r\n\r\nconst TradesListDialog: React.FC<TradesDialogProps> = ({\r\n  open,\r\n  trades,\r\n  date,\r\n  expandedTradeId,\r\n  onClose,\r\n  onTradeExpand,\r\n  onZoomImage\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const dialogTitle = (\r\n    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n      <Typography variant=\"h6\">\r\n        Trades for {date}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <BaseDialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      title={dialogTitle}\r\n    >\r\n        <List sx={{\r\n          '& .MuiListItem-root': {\r\n            borderRadius: 2,\r\n            mb: 1.5,\r\n            bgcolor: alpha(theme.palette.background.default, 0.6),\r\n            transition: 'all 0.2s ease',\r\n            border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n            '&:hover': {\r\n              bgcolor: alpha(theme.palette.primary.main, 0.05),\r\n              cursor: 'pointer',\r\n              borderColor: alpha(theme.palette.primary.main, 0.2)\r\n            }\r\n          }\r\n        }}>\r\n          {trades.map((trade) => (\r\n            <React.Fragment key={trade.id}>\r\n              <ListItem\r\n                onClick={() => onTradeExpand(trade.id)}\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'flex-start',\r\n                  p: 2,\r\n                  borderTopLeftRadius: 8,\r\n                  borderTopRightRadius: 8,\r\n                  borderBottomLeftRadius: expandedTradeId === trade.id ? 0 : 8,\r\n                  borderBottomRightRadius: expandedTradeId === trade.id ? 0 : 8,\r\n                  borderBottom: expandedTradeId === trade.id ? 'none' : `1px solid ${theme.palette.divider}`,\r\n                  boxShadow: expandedTradeId === trade.id ? `0 4px 8px ${alpha(theme.palette.primary.main, 0.1)}` : 'none'\r\n                }}\r\n              >\r\n                <Box sx={{\r\n                  width: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  mb: 1\r\n                }}>\r\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                    {trade.name && (\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\r\n                        📈 {trade.name}\r\n                      </Typography>\r\n                    )}\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <Typography\r\n                        variant=\"subtitle2\"\r\n                        sx={{\r\n                          color: trade.type === 'win'\r\n                            ? theme.palette.success.main\r\n                            : trade.type === 'loss'\r\n                              ? theme.palette.error.main\r\n                              : theme.palette.info.main,\r\n                          fontWeight: 600\r\n                        }}\r\n                      >\r\n                        {trade.type === 'win' ? 'Win' : trade.type === 'loss' ? 'Loss' : 'Breakeven'}\r\n                      </Typography>\r\n                      {trade.session && (\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          sx={{\r\n                            color: 'text.secondary',\r\n                            fontSize: '0.75rem',\r\n                            bgcolor: alpha(theme.palette.divider, 0.2),\r\n                            px: 0.75,\r\n                            py: 0.25,\r\n                            borderRadius: 1\r\n                          }}\r\n                        >\r\n                          {trade.session}\r\n                        </Typography>\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      sx={{\r\n                        color: trade.amount > 0\r\n                          ? theme.palette.success.main\r\n                          : theme.palette.error.main,\r\n                        fontWeight: 600\r\n                      }}\r\n                    >\r\n                      {trade.amount > 0 ? '+' : ''}{trade.amount.toFixed(2)}\r\n                    </Typography>\r\n                    {expandedTradeId === trade.id ?\r\n                      <CollapseIcon fontSize=\"small\" sx={{ color: 'text.secondary' }} /> :\r\n                      <ExpandIcon fontSize=\"small\" sx={{ color: 'text.secondary' }} />\r\n                    }\r\n                  </Box>\r\n                </Box>\r\n                <Box sx={{\r\n                  width: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-start',\r\n                  alignItems: 'center',\r\n                  gap: 1\r\n                }}>\r\n                  {trade.riskToReward && (\r\n                    <Box sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: 0.5,\r\n                      bgcolor: alpha(theme.palette.primary.main, 0.1),\r\n                      px: 1,\r\n                      py: 0.5,\r\n                      borderRadius: 1,\r\n                      border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`\r\n                    }}>\r\n                      <RiskIcon fontSize=\"small\" sx={{ color: alpha(theme.palette.primary.main, 0.8), fontSize: '0.875rem' }} />\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        sx={{\r\n                          color: theme.palette.primary.main,\r\n                          fontSize: '0.75rem',\r\n                          fontWeight: 500\r\n                        }}\r\n                      >\r\n                        {trade.riskToReward.toFixed(1)}\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </ListItem>\r\n\r\n              {/* Expanded Trade Details */}\r\n              <TradeDetailExpanded\r\n                trade={trade}\r\n                isExpanded={expandedTradeId === trade.id}\r\n                setZoomedImage={onZoomImage}\r\n              />\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n    </BaseDialog>\r\n  );\r\n};\r\n\r\nexport default TradesListDialog;\r\n","import React from 'react';\nimport {\n  AreaChart,\n  Area,\n  ResponsiveContainer\n} from 'recharts';\nimport { Box, Paper, Typography, useTheme, Tooltip } from '@mui/material';\nimport { InfoOutlined } from '@mui/icons-material';\n\ninterface RiskRewardChartProps {\n  riskRewardStats: {\n    average: number;\n    max: number;\n    data: Array<{\n      date: string;\n      rr: number;\n    }>;\n  };\n}\n\nconst RiskRewardChart: React.FC<RiskRewardChartProps> = ({ riskRewardStats }) => {\n  const theme = useTheme();\n\n  if (riskRewardStats.data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Paper\n      sx={{\n        p: 2,\n        mb: 2,\n        borderRadius: 2\n      }}\n    >\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n        <Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              Average RR\n            </Typography>\n            <Tooltip\n              title=\"Average Risk to reward ratio (RR) per trade. An RR of 2 means that for every 1$ you risk you will make 2$.\"\n              arrow\n              placement=\"top\"\n            >\n              <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n            </Tooltip>\n          </Box>\n          <Typography variant=\"h4\" sx={{ fontWeight: 500, color: 'text.primary' }}>\n            {riskRewardStats.average.toFixed(2)}\n          </Typography>\n        </Box>\n        <Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              Max RR\n            </Typography>\n            <Tooltip\n              title=\"Maximum Risk to reward Ratio between all your trades. You can use the small graph at the bottom of this card to see the RR of every one of your trades.\"\n              arrow\n              placement=\"top\"\n            >\n              <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n            </Tooltip>\n          </Box>\n          <Typography variant=\"h4\" sx={{ fontWeight: 500, color: 'text.primary' }}>\n            {riskRewardStats.max.toFixed(2)}\n          </Typography>\n        </Box>\n      </Box>\n\n      {/* RR Trend Line Graph */}\n      <Box sx={{ height: 60, mt: 2 }}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={riskRewardStats.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\n            <defs>\n              <linearGradient id=\"rrGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={theme.palette.primary.main} stopOpacity={0.3} />\n                <stop offset=\"95%\" stopColor={theme.palette.primary.main} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <Area\n              type=\"monotone\"\n              dataKey=\"rr\"\n              stroke={theme.palette.primary.main}\n              strokeWidth={2}\n              fill=\"url(#rrGradient)\"\n              dot={false}\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default RiskRewardChart;\n","import React, { useMemo, useState, useCallback } from 'react';\r\nimport { format, eachDayOfInterval, startOfMonth, endOfMonth, isSameMonth, parseISO } from 'date-fns';\r\nimport { Box, Typography, useTheme, Tabs, Tab } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Trade } from '../types/trade';\r\nimport ImageZoomDialog from './ImageZoomDialog';\r\nimport {\r\n  CumulativePnLChart,\r\n  DailyPnLChart,\r\n  WinLossDistribution,\r\n  TagPerformanceAnalysis,\r\n  DailySummaryTable,\r\n  SessionPerformanceAnalysis,\r\n  TradesListDialog,\r\n  RiskRewardChart\r\n} from './charts';\r\n\r\ninterface PerformanceChartsProps {\r\n  trades: Trade[];\r\n  selectedDate: Date;\r\n  monthlyTarget?: number;\r\n  accountBalance: number;\r\n  maxDailyDrawdown: number;\r\n  onTimePeriodChange?: (period: TimePeriod) => void;\r\n  onPrimaryTagsChange?: (tags: string[]) => void;\r\n  onSecondaryTagsChange?: (tags: string[]) => void;\r\n}\r\n\r\ntype TimePeriod = 'month' | 'year' | 'all';\r\n\r\nconst PerformanceCharts: React.FC<PerformanceChartsProps> = ({\r\n  trades,\r\n  selectedDate,\r\n  monthlyTarget,\r\n  accountBalance,\r\n  maxDailyDrawdown,\r\n  onTimePeriodChange,\r\n  onPrimaryTagsChange = () => {},\r\n  onSecondaryTagsChange = () => {}\r\n}) => {\r\n  const theme = useTheme();\r\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>('month');\r\n  const [primaryTags, setPrimaryTags] = useState<string[]>([]);\r\n  const [secondaryTags, setSecondaryTags] = useState<string[]>([]);\r\n  const [comparisonTags, setComparisonTags] = useState<string[]>([]);\r\n  const [multipleTradesDialog, setMultipleTradesDialog] = useState<{\r\n    open: boolean;\r\n    trades: Trade[];\r\n    date: string;\r\n    expandedTradeId: string | null;\r\n  }>({\r\n    open: false,\r\n    trades: [],\r\n    date: '',\r\n    expandedTradeId: null\r\n  });\r\n\r\n  const [zoomedImage, setZoomedImage] = useState<string | null>(null);\r\n\r\n  const handleTimePeriodChange = (newValue: TimePeriod) => {\r\n    setTimePeriod(newValue);\r\n    onTimePeriodChange?.(newValue);\r\n  };\r\n\r\n  // Function to filter trades based on selected time period\r\n  const getFilteredTrades = useCallback((trades: Trade[], selectedDate: Date, period: TimePeriod) => {\r\n    switch (period) {\r\n      case 'month':\r\n        return trades.filter(trade => isSameMonth(new Date(trade.date), selectedDate));\r\n      case 'year':\r\n        return trades.filter(trade => new Date(trade.date).getFullYear() === selectedDate.getFullYear());\r\n      case 'all':\r\n        return trades;\r\n      default:\r\n        return trades;\r\n    }\r\n  }, []);\r\n\r\n  // Calculate Risk to Reward statistics\r\n  const riskRewardStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod)\r\n      .filter(trade => trade.riskToReward !== undefined)\r\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\r\n\r\n    if (filteredTrades.length === 0) return { average: 0, max: 0, data: [] };\r\n\r\n    const riskRewardValues = filteredTrades.map(trade => trade.riskToReward!);\r\n    const average = riskRewardValues.reduce((sum, value) => sum + value, 0) / riskRewardValues.length;\r\n    const max = Math.max(...riskRewardValues);\r\n\r\n    // Create data points for the line graph\r\n    const data = filteredTrades.map(trade => ({\r\n      date: format(new Date(trade.date), timePeriod === 'month' ? 'MM/dd' : 'MM/dd/yyyy'),\r\n      rr: trade.riskToReward || 0\r\n    }));\r\n\r\n    return { average, max, data };\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate chart data for cumulative P&L\r\n  const chartData = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    // Get the date range for the selected period\r\n    let startDate, endDate;\r\n    if (timePeriod === 'month') {\r\n      startDate = startOfMonth(selectedDate);\r\n      endDate = endOfMonth(selectedDate);\r\n    } else if (timePeriod === 'year') {\r\n      startDate = new Date(selectedDate.getFullYear(), 0, 1);\r\n      endDate = new Date(selectedDate.getFullYear(), 11, 31);\r\n    } else {\r\n      // For 'all', use the first and last trade dates\r\n      if (filteredTrades.length === 0) {\r\n        startDate = new Date();\r\n        endDate = new Date();\r\n      } else {\r\n        const sortedTrades = [...filteredTrades].sort((a, b) =>\r\n          new Date(a.date).getTime() - new Date(b.date).getTime()\r\n        );\r\n        startDate = new Date(sortedTrades[0].date);\r\n        endDate = new Date(sortedTrades[sortedTrades.length - 1].date);\r\n      }\r\n    }\r\n\r\n    // Generate an array of all days in the period\r\n    const days = eachDayOfInterval({ start: startDate, end: endDate });\r\n\r\n    // Calculate cumulative P&L for each day\r\n    let cumulative = 0;\r\n    let prevCumulative = 0;\r\n\r\n    return days.map(day => {\r\n      // Find trades for this day\r\n      const dayTrades = filteredTrades.filter(trade =>\r\n        format(new Date(trade.date), 'yyyy-MM-dd') === format(day, 'yyyy-MM-dd')\r\n      );\r\n\r\n      // Calculate daily P&L\r\n      const dailyPnL = dayTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n\r\n      // Update cumulative P&L\r\n      prevCumulative = cumulative;\r\n      cumulative += dailyPnL;\r\n\r\n      return {\r\n        date: format(day, timePeriod === 'month' ? 'MM/dd' : 'MM/dd/yyyy'),\r\n        pnl: dailyPnL,\r\n        cumulativePnL: cumulative,\r\n        isIncreasing: cumulative > prevCumulative,\r\n        isDecreasing: cumulative < prevCumulative,\r\n        dailyChange: cumulative - prevCumulative,\r\n        isWin: dailyPnL > 0,\r\n        isLoss: dailyPnL < 0,\r\n        isBreakEven: dailyPnL === 0,\r\n        trades: dayTrades,\r\n        fullDate: new Date(day)\r\n      };\r\n    });\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate win/loss statistics\r\n  const winLossStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    const wins = filteredTrades.filter(trade => trade.type === 'win');\r\n    const losses = filteredTrades.filter(trade => trade.type === 'loss');\r\n\r\n    const totalWins = wins.length;\r\n    const totalLosses = losses.length;\r\n    const totalTrades = totalWins + totalLosses;\r\n\r\n    const winRate = totalTrades > 0 ? (totalWins / totalTrades) * 100 : 0;\r\n\r\n    const totalWinAmount = wins.reduce((sum, trade) => sum + trade.amount, 0);\r\n    const totalLossAmount = losses.reduce((sum, trade) => sum + trade.amount, 0);\r\n\r\n    const avgWin = totalWins > 0 ? totalWinAmount / totalWins : 0;\r\n    const avgLoss = totalLosses > 0 ? totalLossAmount / totalLosses : 0;\r\n\r\n    // Calculate consecutive wins and losses\r\n    let currentWinStreak = 0;\r\n    let maxWinStreak = 0;\r\n    let totalWinStreaks = 0;\r\n    let winStreakCount = 0;\r\n\r\n    let currentLossStreak = 0;\r\n    let maxLossStreak = 0;\r\n    let totalLossStreaks = 0;\r\n    let lossStreakCount = 0;\r\n\r\n    // Sort trades by date\r\n    const sortedTrades = [...filteredTrades].sort((a, b) =>\r\n      new Date(a.date).getTime() - new Date(b.date).getTime()\r\n    );\r\n\r\n    sortedTrades.forEach(trade => {\r\n      if (trade.type === 'win') {\r\n        currentWinStreak++;\r\n        currentLossStreak = 0;\r\n\r\n        if (currentWinStreak > maxWinStreak) {\r\n          maxWinStreak = currentWinStreak;\r\n        }\r\n      } else {\r\n        if (currentWinStreak > 0) {\r\n          totalWinStreaks += currentWinStreak;\r\n          winStreakCount++;\r\n        }\r\n        currentWinStreak = 0;\r\n        currentLossStreak++;\r\n\r\n        if (currentLossStreak > maxLossStreak) {\r\n          maxLossStreak = currentLossStreak;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Handle the last streak\r\n    if (currentWinStreak > 0) {\r\n      totalWinStreaks += currentWinStreak;\r\n      winStreakCount++;\r\n    } else if (currentLossStreak > 0) {\r\n      totalLossStreaks += currentLossStreak;\r\n      lossStreakCount++;\r\n    }\r\n\r\n    const avgWinStreak = winStreakCount > 0 ? totalWinStreaks / winStreakCount : 0;\r\n    const avgLossStreak = lossStreakCount > 0 ? totalLossStreaks / lossStreakCount : 0;\r\n\r\n    return {\r\n      totalTrades,\r\n      winRate,\r\n      winners: {\r\n        total: totalWins,\r\n        avgAmount: avgWin,\r\n        maxConsecutive: maxWinStreak,\r\n        avgConsecutive: avgWinStreak\r\n      },\r\n      losers: {\r\n        total: totalLosses,\r\n        avgAmount: avgLoss,\r\n        maxConsecutive: maxLossStreak,\r\n        avgConsecutive: avgLossStreak\r\n      }\r\n    };\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate win/loss distribution data for pie chart\r\n  const winLossData = useMemo(() => {\r\n    const { winners, losers } = winLossStats;\r\n\r\n    return [\r\n      { name: 'Wins', value: winners.total },\r\n      { name: 'Losses', value: losers.total }\r\n    ];\r\n  }, [winLossStats]);\r\n\r\n  // Calculate comparison win/loss data for selected tags\r\n  const comparisonWinLossData = useMemo(() => {\r\n    if (comparisonTags.length === 0) return null;\r\n\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod)\r\n      .filter(trade => {\r\n        if (!trade.tags) return false;\r\n        return comparisonTags.some(tag => trade.tags!.includes(tag));\r\n      });\r\n\r\n    const wins = filteredTrades.filter(trade => trade.type === 'win');\r\n    const losses = filteredTrades.filter(trade => trade.type === 'loss');\r\n\r\n    return [\r\n      { name: 'Wins', value: wins.length },\r\n      { name: 'Losses', value: losses.length }\r\n    ];\r\n  }, [trades, selectedDate, timePeriod, comparisonTags, getFilteredTrades]);\r\n\r\n  // Calculate daily summary data\r\n  const dailySummaryData = useMemo(() => {\r\n    // Get trades filtered by the selected time period\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    // Group trades by date\r\n    const tradesByDate = filteredTrades.reduce((acc, trade) => {\r\n        const dateKey = format(new Date(trade.date), 'yyyy-MM-dd');\r\n        if (!acc[dateKey]) {\r\n          acc[dateKey] = [];\r\n        }\r\n        acc[dateKey].push(trade);\r\n        return acc;\r\n      }, {} as { [key: string]: Trade[] });\r\n\r\n    // Calculate daily statistics\r\n    return Object.entries(tradesByDate)\r\n      .map(([date, dayTrades]) => {\r\n        const totalPnL = dayTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n\r\n        // Get the most common session for the day\r\n        const sessionCounts = dayTrades.reduce((acc, trade) => {\r\n          if (trade.session) {\r\n            acc[trade.session] = (acc[trade.session] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {} as { [key: string]: number });\r\n\r\n        // Find the session with the highest count\r\n        let mostCommonSession = '';\r\n        let highestCount = 0;\r\n\r\n        Object.entries(sessionCounts).forEach(([session, count]) => {\r\n          if (count > highestCount) {\r\n            mostCommonSession = session;\r\n            highestCount = count;\r\n          }\r\n        });\r\n\r\n        return {\r\n          date: parseISO(date),\r\n          trades: dayTrades.length,\r\n          session: mostCommonSession,\r\n          pnl: totalPnL\r\n        };\r\n      })\r\n      .sort((a, b) => b.date.getTime() - a.date.getTime()); // Sort by date descending\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Add new useMemo for tag statistics\r\n  const tagStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    // Create a map to store stats for each tag\r\n    const tagMap = new Map<string, { wins: number; losses: number; totalPnL: number }>();\r\n\r\n    filteredTrades.forEach(trade => {\r\n      if (trade.tags) {\r\n        trade.tags.forEach(tag => {\r\n          const stats = tagMap.get(tag) || { wins: 0, losses: 0, totalPnL: 0 };\r\n          if (trade.type === 'win') {\r\n            stats.wins++;\r\n          } else {\r\n            stats.losses++;\r\n          }\r\n          stats.totalPnL += trade.amount;\r\n          tagMap.set(tag, stats);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Convert map to array and calculate win rates\r\n    return Array.from(tagMap.entries()).map(([tag, stats]) => {\r\n      const totalTrades = stats.wins + stats.losses;\r\n      const winRate = totalTrades > 0 ? Math.round((stats.wins / totalTrades) * 100) : 0;\r\n\r\n      return {\r\n        tag,\r\n        wins: stats.wins,\r\n        losses: stats.losses,\r\n        totalTrades,\r\n        winRate,\r\n        totalPnL: stats.totalPnL\r\n      };\r\n    }).sort((a, b) => b.totalTrades - a.totalTrades); // Sort by total trades descending\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate session performance statistics\r\n  const sessionStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod).filter(trade => trade.session !== undefined);\r\n\r\n    const sessions = ['Asia', 'London', 'NY AM', 'NY PM'];\r\n\r\n    return sessions.map(sessionName => {\r\n      const sessionTrades = filteredTrades.filter(trade => trade.session === sessionName);\r\n      const totalTrades = sessionTrades.length;\r\n      const winners = sessionTrades.filter(trade => trade.type === 'win').length;\r\n      const losers = totalTrades - winners;\r\n      const winRate = totalTrades > 0 ? (winners / totalTrades) * 100 : 0;\r\n      const totalPnL = sessionTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n      const averagePnL = totalTrades > 0 ? totalPnL / totalTrades : 0;\r\n      const pnlPercentage = accountBalance > 0 ? (totalPnL / accountBalance) * 100 : 0;\r\n\r\n      return {\r\n        session: sessionName,\r\n        totalTrades,\r\n        winners,\r\n        losers,\r\n        winRate,\r\n        totalPnL,\r\n        averagePnL,\r\n        pnlPercentage\r\n      };\r\n    });\r\n  }, [trades, selectedDate, timePeriod, accountBalance, getFilteredTrades]);\r\n\r\n  // Get all unique tags\r\n  const allTags = useMemo(() => {\r\n    const tags = new Set<string>();\r\n    trades.forEach(trade => {\r\n      if (trade.tags) {\r\n        trade.tags.forEach(tag => tags.add(tag));\r\n      }\r\n    });\r\n    return Array.from(tags).sort();\r\n  }, [trades]);\r\n\r\n  // Filter tagStats based on both tag selections\r\n  const filteredTagStats = useMemo(() => {\r\n    // If no tags are selected for either primary or secondary, return an empty array to show empty chart\r\n    if (primaryTags.length === 0 && secondaryTags.length === 0) return [];\r\n\r\n    return tagStats.filter(stat => {\r\n      // If primary tags are selected, the tag must be in primaryTags\r\n      if (primaryTags.length > 0 && !primaryTags.includes(stat.tag)) {\r\n        return false;\r\n      }\r\n\r\n      // If secondary tags are selected, check if trades with this tag also have the required secondary tags\r\n      if (secondaryTags.length > 0) {\r\n        // Get all trades for this tag that have tags\r\n        const tradesWithTag = trades.filter(trade => trade.tags?.includes(stat.tag) ?? false);\r\n\r\n        // Check if any of these trades also have all the secondary tags\r\n        const hasSecondaryTags = tradesWithTag.some(trade =>\r\n          secondaryTags.every(secondaryTag => trade.tags?.includes(secondaryTag) ?? false)\r\n        );\r\n\r\n        if (!hasSecondaryTags) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }, [tagStats, primaryTags, secondaryTags, trades]);\r\n\r\n  // Calculate target value for monthly target\r\n  const targetValue = useMemo(() => {\r\n    if (monthlyTarget === undefined || accountBalance <= 0) return null;\r\n    return (monthlyTarget / 100) * accountBalance;\r\n  }, [monthlyTarget, accountBalance]);\r\n\r\n  // Calculate drawdown violation value\r\n  const drawdownViolationValue = useMemo(() => {\r\n    return -(maxDailyDrawdown / 100) * accountBalance;\r\n  }, [maxDailyDrawdown, accountBalance]);\r\n\r\n  // These handlers are now used directly in the chart overlays\r\n\r\n  const handleTradeExpand = (tradeId: string) => {\r\n    setMultipleTradesDialog(prev => ({\r\n      ...prev,\r\n      expandedTradeId: prev.expandedTradeId === tradeId ? null : tradeId\r\n    }));\r\n  };\r\n\r\n  const handleZoomImage = (imageUrl: string) => {\r\n    setZoomedImage(imageUrl);\r\n  };\r\n\r\n  // Handle pie chart click to show trades\r\n  const handlePieClick = (category: string) => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n    let categoryTrades: Trade[] = [];\r\n    let dialogTitle = '';\r\n\r\n    // Check if we're clicking on a win/loss category or a tag\r\n    if (category === 'Wins' || category === 'Losses') {\r\n      // Filter trades based on the clicked category (Wins or Losses)\r\n      categoryTrades = filteredTrades.filter(trade =>\r\n        (category === 'Wins' && trade.type === 'win') ||\r\n        (category === 'Losses' && trade.type === 'loss')\r\n      );\r\n\r\n      // Format the date range for the dialog title\r\n      let dateText;\r\n      if (timePeriod === 'month') {\r\n        dateText = format(selectedDate, 'MMMM yyyy');\r\n      } else if (timePeriod === 'year') {\r\n        dateText = format(selectedDate, 'yyyy');\r\n      } else {\r\n        dateText = 'All Time';\r\n      }\r\n\r\n      dialogTitle = `${category} for ${dateText}`;\r\n    } else {\r\n      // We're clicking on a tag in the tag distribution chart\r\n      // Filter trades that have this tag\r\n      categoryTrades = filteredTrades.filter(trade =>\r\n        trade.tags?.includes(category)\r\n      );\r\n\r\n      dialogTitle = `Trades with tag: ${category}`;\r\n    }\r\n\r\n    if (categoryTrades.length > 0) {\r\n      // Open the dialog with the filtered trades\r\n      setMultipleTradesDialog({\r\n        open: true,\r\n        trades: categoryTrades,\r\n        date: dialogTitle,\r\n        expandedTradeId: categoryTrades.length === 1 ? categoryTrades[0].id : null\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      {/* Image Zoom Dialog */}\r\n      <ImageZoomDialog\r\n        open={!!zoomedImage}\r\n        onClose={() => setZoomedImage(null)}\r\n        imageUrl={zoomedImage}\r\n      />\r\n\r\n      {/* Trades Dialog */}\r\n      <TradesListDialog\r\n        open={multipleTradesDialog.open}\r\n        trades={multipleTradesDialog.trades}\r\n        date={multipleTradesDialog.date}\r\n        expandedTradeId={multipleTradesDialog.expandedTradeId}\r\n        onClose={() => setMultipleTradesDialog(prev => ({ ...prev, open: false }))}\r\n        onTradeExpand={handleTradeExpand}\r\n        onZoomImage={handleZoomImage}\r\n      />\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\">\r\n          Performance Charts for {timePeriod === 'month'\r\n            ? format(selectedDate, 'MMMM yyyy')\r\n            : timePeriod === 'year'\r\n            ? format(selectedDate, 'yyyy')\r\n            : 'All Time'\r\n          }\r\n        </Typography>\r\n        <Tabs\r\n          value={timePeriod}\r\n          onChange={(_, newValue: TimePeriod) => handleTimePeriodChange(newValue)}\r\n          sx={{\r\n            minHeight: 40,\r\n            backgroundColor: alpha(theme.palette.background.paper, 0.4),\r\n            borderRadius: '20px',\r\n            padding: '4px',\r\n            '& .MuiTabs-flexContainer': {\r\n              gap: '4px'\r\n            },\r\n            '& .MuiTabs-indicator': {\r\n              display: 'none'\r\n            }\r\n          }}\r\n        >\r\n          <Tab\r\n            label=\"Month\"\r\n            value=\"month\"\r\n            sx={{\r\n              minHeight: 32,\r\n              my: 0.2,\r\n              textTransform: 'none',\r\n              fontSize: '0.875rem',\r\n              fontWeight: 500,\r\n              color: 'text.secondary',\r\n              borderRadius: '16px',\r\n              padding: '6px 18px',\r\n              '&.Mui-selected': {\r\n                color: 'primary.main',\r\n                backgroundColor: 'background.paper',\r\n                boxShadow: theme.shadows[1]\r\n              },\r\n              '&:hover:not(.Mui-selected)': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                color: 'primary.main'\r\n              }\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"Year\"\r\n            value=\"year\"\r\n            sx={{\r\n              minHeight: 32,\r\n              my: 0.2,\r\n              textTransform: 'none',\r\n              fontSize: '0.875rem',\r\n              fontWeight: 500,\r\n              color: 'text.secondary',\r\n              borderRadius: '16px',\r\n              padding: '6px 18px',\r\n              '&.Mui-selected': {\r\n                color: 'primary.main',\r\n                backgroundColor: 'background.paper',\r\n                boxShadow: theme.shadows[1]\r\n              },\r\n              '&:hover:not(.Mui-selected)': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                color: 'primary.main'\r\n              }\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"All Time\"\r\n            value=\"all\"\r\n            sx={{\r\n              minHeight: 32,\r\n              my: 0.2,\r\n              textTransform: 'none',\r\n              fontSize: '0.875rem',\r\n              fontWeight: 500,\r\n              color: 'text.secondary',\r\n              borderRadius: '16px',\r\n              padding: '6px 18px',\r\n              '&.Mui-selected': {\r\n                color: 'primary.main',\r\n                backgroundColor: 'background.paper',\r\n                boxShadow: theme.shadows[1]\r\n              },\r\n              '&:hover:not(.Mui-selected)': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                color: 'primary.main'\r\n              }\r\n            }}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Main content */}\r\n      {chartData.some(data => data.pnl !== 0) || winLossData.some(data => data.value > 0) ? (\r\n        <>\r\n          {/* Risk to Reward Statistics Card */}\r\n          <RiskRewardChart riskRewardStats={riskRewardStats} />\r\n          {/* Cumulative P&L Chart */}\r\n          <CumulativePnLChart\r\n            chartData={chartData}\r\n            targetValue={targetValue}\r\n            monthlyTarget={monthlyTarget}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n            timePeriod={timePeriod}\r\n          />\r\n\r\n          {/* Daily P&L Chart */}\r\n          <DailyPnLChart\r\n            chartData={chartData}\r\n            drawdownViolationValue={drawdownViolationValue}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n            timePeriod={timePeriod}\r\n          />\r\n\r\n          {/* Win/Loss Distribution and Daily Summary side by side */}\r\n          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 3, mb: 3, height: '500px' }}>\r\n            <Box sx={{ flex: 1, width: { xs: '100%', md: '50%' } }}>\r\n              {/* Win/Loss Distribution */}\r\n              <WinLossDistribution\r\n                winLossData={winLossData}\r\n                comparisonWinLossData={comparisonWinLossData}\r\n                allTags={allTags}\r\n                comparisonTags={comparisonTags}\r\n                setComparisonTags={setComparisonTags}\r\n                onPieClick={handlePieClick}\r\n                tagStats={tagStats}\r\n              />\r\n            </Box>\r\n            <Box sx={{ flex: 1, width: { xs: '100%', md: '50%' } }}>\r\n              {/* Daily Summary Table */}\r\n              <DailySummaryTable\r\n                dailySummaryData={dailySummaryData}\r\n                trades={trades}\r\n                setMultipleTradesDialog={setMultipleTradesDialog}\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Tag Performance Analysis */}\r\n          <TagPerformanceAnalysis\r\n            trades={trades}\r\n            selectedDate={selectedDate}\r\n            timePeriod={timePeriod}\r\n            allTags={allTags}\r\n            primaryTags={primaryTags}\r\n            secondaryTags={secondaryTags}\r\n            setPrimaryTags={(tags) => {\r\n              setPrimaryTags(tags);\r\n              onPrimaryTagsChange(tags);\r\n            }}\r\n            setSecondaryTags={(tags) => {\r\n              setSecondaryTags(tags);\r\n              onSecondaryTagsChange(tags);\r\n            }}\r\n            filteredTagStats={filteredTagStats}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n          />\r\n\r\n          {/* Session Performance Analysis */}\r\n          <SessionPerformanceAnalysis\r\n            sessionStats={sessionStats}\r\n            trades={trades}\r\n            selectedDate={selectedDate}\r\n            timePeriod={timePeriod}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            height: 300,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.02)',\r\n            borderRadius: 2,\r\n            border: `1px solid ${theme.palette.divider}`\r\n          }}\r\n        >\r\n          <Typography color=\"text.secondary\">\r\n            No trading data available for {timePeriod === 'month'\r\n              ? format(selectedDate, 'MMMM yyyy')\r\n              : timePeriod === 'year'\r\n              ? format(selectedDate, 'yyyy')\r\n              : 'All Time'\r\n            }\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PerformanceCharts;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  Box,\r\n  Paper,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  TrendingUp,\r\n  EmojiEvents,\r\n  CalendarMonth,\r\n  CalendarToday\r\n} from '@mui/icons-material';\r\nimport { addYears, subYears } from 'date-fns';\r\nimport { Trade } from '../types/trade';\r\nimport TargetBadge from '../components/TargetBadge';\r\nimport { BaseDialog } from './common';\r\n\r\ninterface SelectDateDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onDateSelect: (date: Date) => void;\r\n  initialDate?: Date;\r\n  trades: Trade[];\r\n  accountBalance: number;\r\n  monthlyTarget?: number;\r\n  yearlyTarget?: number;\r\n}\r\n\r\nconst SelectDateDialog: React.FC<SelectDateDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  onDateSelect,\r\n  initialDate,\r\n  trades,\r\n  accountBalance,\r\n  monthlyTarget,\r\n  yearlyTarget\r\n}) => {\r\n  const theme = useTheme();\r\n  const [currentDate, setCurrentDate] = React.useState(initialDate || new Date());\r\n  const currentYear = currentDate.getFullYear();\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    if (initialDate) {\r\n      setCurrentDate(initialDate);\r\n    }\r\n  }, [initialDate]);\r\n\r\n  const handlePrevYear = () => setCurrentDate(prev => subYears(prev, 1));\r\n  const handleNextYear = () => setCurrentDate(prev => addYears(prev, 1));\r\n  const handleToday = () => setCurrentDate(new Date());\r\n\r\n  const handleMonthSelect = (monthIndex: number) => {\r\n    const newDate = new Date(currentYear, monthIndex, 1);\r\n    onDateSelect(newDate);\r\n    onClose();\r\n  };\r\n\r\n  const currentMonth = currentDate.getMonth();\r\n\r\n  // Calculate yearly statistics\r\n  const yearTrades = trades.filter(trade => new Date(trade.date).getFullYear() === currentYear);\r\n  const yearlyPnL = yearTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n  const yearlyWinCount = yearTrades.filter(trade => trade.type === 'win').length;\r\n  const yearlyLossCount = yearTrades.filter(trade => trade.type === 'loss').length;\r\n  const yearlyWinRate = yearTrades.length > 0 ? (yearlyWinCount / yearTrades.length * 100).toFixed(1) : '0';\r\n  const yearlyGrowthPercentage = accountBalance > 0 ? (yearlyPnL / accountBalance * 100).toFixed(2) : '0';\r\n\r\n  // Calculate monthly PnL for each month\r\n  const getMonthPnL = (monthIndex: number) => {\r\n    const monthTrades = trades.filter(trade =>\r\n      new Date(trade.date).getFullYear() === currentYear &&\r\n      new Date(trade.date).getMonth() === monthIndex\r\n    );\r\n    return monthTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n  };\r\n\r\n  // Find the best month\r\n  const getBestMonth = () => {\r\n    let bestMonthIndex = -1;\r\n    let bestMonthPnL = 0;\r\n\r\n    for (let i = 0; i < 12; i++) {\r\n      const monthPnL = getMonthPnL(i);\r\n      if (monthPnL > bestMonthPnL) {\r\n        bestMonthPnL = monthPnL;\r\n        bestMonthIndex = i;\r\n      }\r\n    }\r\n\r\n    return {\r\n      name: bestMonthIndex >= 0 ? months[bestMonthIndex] : 'None',\r\n      pnl: bestMonthPnL\r\n    };\r\n  };\r\n\r\n  const bestMonth = getBestMonth();\r\n\r\n  // Calculate monthly target progress\r\n  const getMonthTargetProgress = (monthIndex: number) => {\r\n    if (!monthlyTarget || monthlyTarget <= 0) return null;\r\n    const monthPnL = getMonthPnL(monthIndex);\r\n    const targetAmount = (monthlyTarget / 100) * accountBalance;\r\n    const progress = (monthPnL / targetAmount) * 100;\r\n    return {\r\n      progress: Math.min(Math.max(progress, 0), 100),\r\n      isMet: monthPnL >= targetAmount,\r\n      rawProgress: progress\r\n    };\r\n  };\r\n\r\n  // Calculate monthly growth percentage\r\n  const getMonthGrowthPercentage = (monthIndex: number) => {\r\n    if (accountBalance <= 0) return '0';\r\n    const monthPnL = getMonthPnL(monthIndex);\r\n    return (monthPnL / accountBalance * 100).toFixed(2);\r\n  };\r\n\r\n  // Calculate yearly target progress\r\n  const getYearlyTargetProgress = () => {\r\n    if (!yearlyTarget || yearlyTarget <= 0) return null;\r\n    const targetAmount = (yearlyTarget / 100) * accountBalance;\r\n    const progress = (yearlyPnL / targetAmount) * 100;\r\n    return {\r\n      progress: Math.min(Math.max(progress, 0), 100),\r\n      isMet: yearlyPnL >= targetAmount,\r\n      rawProgress: progress\r\n    };\r\n  };\r\n\r\n  const yearlyTargetProgress = getYearlyTargetProgress();\r\n\r\n  const dialogTitle = (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n      <CalendarToday sx={{\r\n        fontSize: '1.75rem',\r\n        color: theme.palette.primary.main\r\n      }} />\r\n      <Typography variant=\"h5\" sx={{ fontWeight: 700, flex: 1, color: 'text.primary', fontSize: '1.5rem', ml: 1.5 }}>\r\n        Select Month\r\n      </Typography>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        {currentYear !== new Date().getFullYear() && (\r\n          <Button\r\n            onClick={handleToday}\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            startIcon={<CalendarToday sx={{ fontSize: '1.1rem' }} />}\r\n            sx={{\r\n              ml: 1,\r\n              textTransform: 'none',\r\n              fontWeight: 600,\r\n              borderRadius: 1.5,\r\n              px: 2\r\n            }}\r\n          >\r\n            Today\r\n          </Button>\r\n        )}\r\n        <IconButton onClick={handlePrevYear} sx={{ color: 'text.primary', bgcolor: alpha(theme.palette.primary.main, 0.05) }}>\r\n          <ChevronLeft />\r\n        </IconButton>\r\n        <Typography variant=\"h5\" sx={{ fontWeight: 800, color: 'text.primary', minWidth: '80px', textAlign: 'center', letterSpacing: '-0.5px' }}>\r\n          {currentYear}\r\n        </Typography>\r\n        <IconButton onClick={handleNextYear} sx={{ color: 'text.primary', bgcolor: alpha(theme.palette.primary.main, 0.05) }}>\r\n          <ChevronRight />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  const dialogActions = (\r\n    <Button\r\n      onClick={onClose}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      sx={{\r\n        textTransform: 'none',\r\n        fontWeight: 600,\r\n        borderRadius: 1.5,\r\n        px: 3\r\n      }}\r\n    >\r\n      Cancel\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <BaseDialog\r\n      open={open}\r\n      onClose={onClose}\r\n      title={dialogTitle}\r\n      actions={dialogActions}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <Box sx={{\r\n        pt: '24px',\r\n        pb: '24px',\r\n        '&::-webkit-scrollbar': {\r\n          width: '8px',\r\n          height: '8px',\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n          background: 'transparent'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n          background: alpha(theme.palette.primary.main, 0.2),\r\n          borderRadius: '4px',\r\n        },\r\n        '&::-webkit-scrollbar-thumb:hover': {\r\n          background: alpha(theme.palette.primary.main, 0.3),\r\n        }\r\n      }}>\r\n         <Paper elevation={0} sx={{\r\n        px: 3,\r\n        py: 2,\r\n        mb: 2,\r\n        borderRadius: 2,\r\n        bgcolor: theme => alpha(theme.palette.background.default, 0.5),\r\n        border: '1px solid',\r\n        borderColor: theme => theme.palette.divider,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n      }}>\r\n        <Box sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          mb: 2.5,\r\n          pl: 1\r\n        }}>\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', gap: 0.5 }}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{\r\n              color: 'text.primary',\r\n              fontSize: '1.1rem',\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            Yearly Statistics\r\n          </Typography>\r\n          {yearlyTargetProgress && (\r\n              <TargetBadge\r\n              progress={yearlyTargetProgress.rawProgress}\r\n              isMet={yearlyTargetProgress.isMet}\r\n              tooltipText={`${yearlyTargetProgress.isMet ? 'Yearly target achieved' : 'Progress towards yearly target'}: ${yearlyTargetProgress.rawProgress.toFixed(0)}%`}\r\n            />\r\n            )}\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n            <Box sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              gap: 1,\r\n              bgcolor: theme => alpha(theme.palette.success.light, 0.1),\r\n              py: 0.75,\r\n              px: 1.5,\r\n              borderRadius: 1,\r\n              border: '1px solid',\r\n              borderColor: 'success.light'\r\n            }}>\r\n              <Typography variant=\"body2\" sx={{\r\n                fontSize: '0.85rem',\r\n                fontWeight: 500,\r\n                color: 'text.secondary'\r\n              }}>\r\n                Best Month:\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{\r\n                fontSize: '0.85rem',\r\n                fontWeight: 700,\r\n                color: 'success.main'\r\n              }}>\r\n                {bestMonth.name} (${bestMonth.pnl.toLocaleString()})\r\n              </Typography>\r\n            </Box>\r\n\r\n\r\n          </Box>\r\n\r\n        </Box>\r\n\r\n        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr 1fr' }, gap: 4, width: '100%' }}>\r\n          <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 1 }}>\r\n              <Box sx={{\r\n                p: 0.8,\r\n                borderRadius: 1,\r\n                bgcolor: theme => alpha(theme.palette.primary.main, 0.1),\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                mb: 1\r\n              }}>\r\n                <TrendingUp sx={{\r\n                  fontSize: '1.2rem',\r\n                  color: 'primary.main'\r\n                }} />\r\n              </Box>\r\n              <Typography variant=\"body1\" sx={{\r\n                fontSize: '1rem',\r\n                fontWeight: 600,\r\n                color: 'text.primary',\r\n                textAlign: 'center'\r\n              }}>\r\n                Yearly P&L\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0.5 }}>\r\n              <Typography\r\n                variant=\"h5\"\r\n                sx={{\r\n                  fontWeight: 700,\r\n                  fontSize: '1.5rem',\r\n                  color: theme => {\r\n                    if (yearlyPnL > 0) return theme.palette.success.main;\r\n                    if (yearlyPnL < 0) return theme.palette.error.main;\r\n                    return theme.palette.mode === 'dark' ? 'grey.300' : 'text.primary';\r\n                  },\r\n                  textAlign: 'center'\r\n                }}\r\n              >\r\n                ${Math.abs(yearlyPnL).toLocaleString()}\r\n              </Typography>\r\n              <Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                gap: 0.5,\r\n              }}>\r\n                <Typography variant=\"body2\" sx={{\r\n                  fontWeight: 500,\r\n                  color: 'text.secondary',\r\n                  fontSize: '0.9rem',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  Growth\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{\r\n                  fontWeight: 700,\r\n                  color: theme => {\r\n                    if (yearlyPnL > 0) return theme.palette.success.main;\r\n                    if (yearlyPnL < 0) return theme.palette.error.main;\r\n                    return theme.palette.mode === 'dark' ? 'grey.300' : 'text.primary';\r\n                  },\r\n                  fontSize: '1rem',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  {yearlyGrowthPercentage}%\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 1 }}>\r\n              <Box sx={{\r\n                p: 0.8,\r\n                borderRadius: 1,\r\n                bgcolor: theme => alpha(theme.palette.success.main, 0.1),\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                mb: 1\r\n              }}>\r\n                <EmojiEvents sx={{\r\n                  fontSize: '1.2rem',\r\n                  color: 'success.main'\r\n                }} />\r\n              </Box>\r\n              <Typography variant=\"body1\" sx={{\r\n                fontSize: '1rem',\r\n                fontWeight: 600,\r\n                color: 'text.primary',\r\n                textAlign: 'center'\r\n              }}>\r\n                Win Rate\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"h5\" sx={{\r\n              fontWeight: 700,\r\n              fontSize: '1.5rem',\r\n              color: parseFloat(yearlyWinRate) > 50 ? 'success.main' : 'text.primary',\r\n              textAlign: 'center'\r\n            }}>\r\n              {yearlyWinRate}%\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{\r\n              fontWeight: 500,\r\n              fontSize: '1rem',\r\n              color: 'text.secondary',\r\n              mt: 0.5,\r\n              textAlign: 'center'\r\n            }}>\r\n              {yearlyWinCount} Ws / {yearlyLossCount} Ls\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 1 }}>\r\n              <Box sx={{\r\n                p: 0.8,\r\n                borderRadius: 1,\r\n                bgcolor: theme => alpha(theme.palette.info.main, 0.1),\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                mb: 1\r\n              }}>\r\n                <CalendarMonth sx={{\r\n                  fontSize: '1.2rem',\r\n                  color: 'info.main'\r\n                }} />\r\n              </Box>\r\n              <Typography variant=\"body1\" sx={{\r\n                fontSize: '1rem',\r\n                fontWeight: 600,\r\n                color: 'text.primary',\r\n                textAlign: 'center'\r\n              }}>\r\n                Total Trades\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"h5\" sx={{\r\n              fontWeight: 700,\r\n              fontSize: '1.5rem',\r\n              color: 'text.primary',\r\n              textAlign: 'center'\r\n            }}>\r\n              {yearTrades.length}\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{\r\n              fontWeight: 500,\r\n              fontSize: '1rem',\r\n              color: 'text.secondary',\r\n              mt: 0.5,\r\n              textAlign: 'center'\r\n            }}>\r\n              Trades this year\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            color: 'text.primary',\r\n            mb: 2,\r\n            fontSize: '1.1rem',\r\n            fontWeight: 600,\r\n            pl: 1\r\n          }}\r\n        >\r\n          Select a Month\r\n        </Typography>\r\n        <Box sx={{\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(3, 1fr)',\r\n          gap: 1.5\r\n        }}>\r\n          {months.map((month, index) => {\r\n            const monthPnL = getMonthPnL(index);\r\n            const hasEntries = monthPnL !== 0;\r\n            const targetProgress = getMonthTargetProgress(index);\r\n            const growthPercentage = getMonthGrowthPercentage(index);\r\n\r\n            return (\r\n              <Paper\r\n                key={month}\r\n                onClick={() => handleMonthSelect(index)}\r\n                elevation={0}\r\n                sx={{\r\n                  p: 2.5,\r\n                  cursor: 'pointer',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 1,\r\n                  height: '100%',\r\n                  bgcolor: theme => {\r\n                    if (hasEntries) {\r\n                      return theme.palette.mode === 'dark'\r\n                        ? alpha('#fff', 0.08)\r\n                        : alpha(theme.palette.primary.main, 0.04);\r\n                    }\r\n                    return theme.palette.mode === 'dark' ? 'transparent' : '#f5f5f5';\r\n                  },\r\n                  border: '1px solid',\r\n                  borderColor: theme =>\r\n                    currentMonth === index && currentYear === initialDate?.getFullYear()\r\n                      ? theme.palette.primary.main\r\n                      : theme.palette.mode === 'dark' ? alpha('#fff', 0.12) : theme.palette.grey[200],\r\n                  borderRadius: 2,\r\n                  transition: 'all 0.2s',\r\n                  position: 'relative',\r\n                  overflow: 'hidden',\r\n                  ...(currentMonth === index && currentYear === initialDate?.getFullYear() && {\r\n                    '&::before': {\r\n                      content: '\"\"',\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: '4px',\r\n                      backgroundColor: 'primary.main',\r\n                    }\r\n                  }),\r\n                  '&:hover': {\r\n                    bgcolor: theme => theme.palette.mode === 'dark'\r\n                      ? alpha('#fff', 0.12)\r\n                      : alpha(theme.palette.primary.main, 0.08),\r\n                    borderColor: 'primary.main',\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: theme => `0 4px 12px ${alpha(theme.palette.primary.main, 0.2)}`\r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 0.5 }}>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{\r\n                      color: theme =>\r\n                        currentMonth === index && currentYear === initialDate?.getFullYear()\r\n                          ? theme.palette.primary.main\r\n                          : theme.palette.text.primary,\r\n                      fontWeight: 700,\r\n                      fontSize: '1.1rem'\r\n                    }}\r\n                  >\r\n                    {month}\r\n                  </Typography>\r\n\r\n                  {targetProgress && hasEntries && (\r\n                    <Box sx={{ ml: 1 }}>\r\n                      <TargetBadge\r\n                        progress={targetProgress.rawProgress}\r\n                        isMet={targetProgress.isMet}\r\n                        tooltipText={`${targetProgress.isMet ? 'Monthly target achieved' : 'Progress towards monthly target'}: ${targetProgress.rawProgress.toFixed(0)}%`}\r\n                      />\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                {hasEntries && (\r\n                  <>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        sx={{\r\n                          color: monthPnL > 0 ? 'success.main' : 'error.main',\r\n                          fontSize: '1.2rem',\r\n                          fontWeight: 700,\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          gap: 0.5\r\n                        }}\r\n                      >\r\n                        ${Math.abs(monthPnL).toLocaleString()}\r\n                        <Box component=\"span\" sx={{ fontSize: '0.9rem', fontWeight: 600 }}>\r\n                          {monthPnL > 0 ? '↑' : '↓'}\r\n                        </Box>\r\n                      </Typography>\r\n\r\n                      <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 0.5,\r\n                      }}>\r\n                        <Typography variant=\"caption\" sx={{ fontWeight: 500, color: 'text.secondary', fontSize: '0.75rem' }}>\r\n                          Growth\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" sx={{\r\n                          fontWeight: 600,\r\n                          color: monthPnL > 0 ? 'success.main' : 'error.main',\r\n                          fontSize: '0.75rem'\r\n                        }}>\r\n                          {growthPercentage}%\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n\r\n                  </>\r\n                )}\r\n              </Paper>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Box>\r\n    </BaseDialog>\r\n  );\r\n};\r\n\r\nexport default SelectDateDialog;","import { Theme } from '@mui/material/styles';\r\n\r\n/**\r\n * Creates consistent scrollbar styles for use throughout the application\r\n * @param theme The current MUI theme\r\n * @returns An object containing scrollbar styles that can be spread into sx props\r\n */\r\nexport const scrollbarStyles = (theme: Theme) => ({\r\n  '&::-webkit-scrollbar': {\r\n    width: '8px',\r\n    height: '8px'\r\n  },\r\n  '&::-webkit-scrollbar-track': {\r\n    background: 'transparent'\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    background: theme.palette.mode === 'dark'\r\n      ? 'rgba(255, 255, 255, 0.2)'\r\n      : 'rgba(0, 0, 0, 0.2)',\r\n    borderRadius: '4px',\r\n    '&:hover': {\r\n      background: theme.palette.mode === 'dark'\r\n        ? 'rgba(255, 255, 255, 0.3)'\r\n        : 'rgba(0, 0, 0, 0.3)'\r\n    }\r\n  }\r\n});","import { styled, alpha } from '@mui/material/styles';\r\nimport { Paper, Box, Typography, Button, IconButton, Chip, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\n\r\nexport type DayStatus = 'win' | 'loss' | 'neutral';\r\n\r\n// Calendar day styled component\r\nexport const StyledCalendarDay = styled(Box)<{\r\n  $isCurrentMonth: boolean;\r\n  $dayStatus: DayStatus;\r\n}>(({ theme, $isCurrentMonth, $dayStatus }) => ({\r\n  padding: theme.spacing(1),\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  borderRadius: theme.shape.borderRadius,\r\n  transition: 'all 0.1s ease-in-out',\r\n  opacity: $isCurrentMonth ? 1 : 0.5,\r\n  backgroundColor: $dayStatus === 'win'\r\n    ? alpha(theme.palette.success.main, 0.1)\r\n    : $dayStatus === 'loss'\r\n      ? alpha(theme.palette.error.main, 0.1)\r\n      : theme.palette.background.paper\r\n}));\r\n\r\nexport const CalendarCell = styled(Box)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: 'hidden',\r\n  backgroundColor: alpha(theme.palette.background.paper, 0.05),\r\n  border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n}));\r\n\r\nexport const WeekdayHeader = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  backgroundColor: alpha(theme.palette.background.paper, 0.05),\r\n  borderRadius: theme.shape.borderRadius,\r\n}));\r\n\r\n// Day number styled component\r\nexport const DayNumber = styled(Typography)<{ $isCurrentMonth: boolean }>(({ theme, $isCurrentMonth }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  color: $isCurrentMonth ? theme.palette.text.primary : theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(0.5)\r\n}));\r\n\r\n// Trade amount styled component\r\nexport const TradeAmount = styled(Typography)<{ $dayStatus: 'win' | 'loss' | 'neutral' }>(({ theme, $dayStatus }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 600,\r\n  color: $dayStatus === 'win'\r\n    ? theme.palette.success.main\r\n    : $dayStatus === 'loss'\r\n      ? theme.palette.error.main\r\n      : theme.palette.text.primary\r\n}));\r\n\r\n// Trade count styled component\r\nexport const TradeCount = styled(Typography)(({ theme }) => ({\r\n  fontSize: '0.75rem',\r\n  color: theme.palette.text.secondary,\r\n  fontWeight: 500\r\n}));\r\n\r\n// Action button styled component\r\nexport const ActionButton = styled(IconButton)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.common.white, 0.1)\r\n    : alpha(theme.palette.common.black, 0.05),\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.mode === 'dark'\r\n      ? alpha(theme.palette.common.white, 0.2)\r\n      : alpha(theme.palette.common.black, 0.1),\r\n  },\r\n  width: 32,\r\n  height: 32,\r\n}));\r\n\r\n// Status chip styled component\r\nexport const StatusChip = styled(Chip)(({ theme }) => ({\r\n  fontWeight: 600,\r\n  borderRadius: 16,\r\n  '&.win': {\r\n    backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n    color: theme.palette.success.main,\r\n    border: `1px solid ${alpha(theme.palette.success.main, 0.3)}`,\r\n  },\r\n  '&.loss': {\r\n    backgroundColor: alpha(theme.palette.error.main, 0.1),\r\n    color: theme.palette.error.main,\r\n    border: `1px solid ${alpha(theme.palette.error.main, 0.3)}`,\r\n  },\r\n}));\r\n\r\n// Card container styled component\r\nexport const CardContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[2],\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.7)\r\n    : theme.palette.background.paper,\r\n  transition: 'all 0.3s ease-in-out',\r\n  '&:hover': {\r\n    boxShadow: theme.shadows[4],\r\n  },\r\n}));\r\n\r\n// Stats container styled component\r\nexport const StatsContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: theme.spacing(2),\r\n  padding: theme.spacing(2),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.5)\r\n    : alpha(theme.palette.background.default, 0.7),\r\n  border: `1px solid ${theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.common.white, 0.1)\r\n    : alpha(theme.palette.common.black, 0.1)}`,\r\n}));\r\n\r\n// Stat item styled component\r\nexport const StatItem = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(1),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.7)\r\n    : theme.palette.background.paper,\r\n  boxShadow: theme.shadows[1],\r\n}));\r\n\r\n// Stat label styled component\r\nexport const StatLabel = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// Stat value styled component\r\nexport const StatValue = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 700,\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\n// Primary button styled component\r\nexport const PrimaryButton = styled(Button)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(1, 2),\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  boxShadow: 'none',\r\n  '&:hover': {\r\n    boxShadow: theme.shadows[2],\r\n  },\r\n}));\r\n\r\n// Secondary button styled component\r\nexport const SecondaryButton = styled(Button)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(1, 2),\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderWidth: 2,\r\n  },\r\n}));\r\n\r\n// Dialog title styled component\r\nexport const DialogTitleStyled = styled(DialogTitle)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(2),\r\n  borderBottom: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// Dialog content styled component\r\nexport const DialogContentStyled = styled(DialogContent)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: theme.spacing(2)\r\n}));\r\n\r\n// Dialog actions styled component\r\nexport const DialogActionsStyled = styled(DialogActions)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// Form field styled component\r\nexport const FormField = styled(Box)(({ theme }) => ({\r\n  marginBottom: theme.spacing(2)\r\n}));\r\n\r\n// Trade list item styled component\r\nexport const TradeListItem = styled(Box)<{ $type?: 'win' | 'loss' | 'breakeven' }>(({ theme, $type }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(1.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: $type === 'win'\r\n    ? alpha(theme.palette.success.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n    : $type === 'loss'\r\n      ? alpha(theme.palette.error.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n      : $type === 'breakeven'\r\n        ? alpha(theme.palette.info.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n        : theme.palette.background.paper,\r\n  border: '1px solid',\r\n  borderColor: $type === 'win'\r\n    ? alpha(theme.palette.success.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n    : $type === 'loss'\r\n      ? alpha(theme.palette.error.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n      : $type === 'breakeven'\r\n        ? alpha(theme.palette.info.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n        : theme.palette.divider,\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-1px)',\r\n    boxShadow: `0 2px 8px ${alpha(\r\n      $type === 'win'\r\n        ? theme.palette.success.main\r\n        : $type === 'loss'\r\n          ? theme.palette.error.main\r\n          : theme.palette.primary.main,\r\n      0.15\r\n    )}`,\r\n    borderColor: $type === 'win'\r\n      ? theme.palette.success.main\r\n      : $type === 'loss'\r\n        ? theme.palette.error.main\r\n        : theme.palette.primary.main\r\n  }\r\n}));\r\n\r\n// Trade info styled component\r\nexport const TradeInfo = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(2)\r\n}));\r\n\r\n// Trade actions styled component\r\nexport const TradeActions = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  gap: theme.spacing(1)\r\n}));\r\n\r\n// Calendar header styled component\r\nexport const CalendarHeader = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(2),\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\n// Calendar grid styled component\r\nexport const CalendarGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(7, 1fr)',\r\n  gap: theme.spacing(1),\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\n// Calendar weekday header styled component\r\nexport const CalendarWeekdayHeader = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(7, 1fr)',\r\n  gap: theme.spacing(1),\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// Calendar weekday styled component\r\nexport const CalendarWeekday = styled(Typography)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// Account balance card styled component\r\nexport const AccountBalanceCard = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  marginBottom: theme.spacing(2),\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.8)\r\n    : theme.palette.background.paper,\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[2],\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: theme.shadows[4],\r\n  },\r\n}));\r\n\r\n// Account balance title styled component\r\nexport const AccountBalanceTitle = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// Account balance amount styled component\r\nexport const AccountBalanceAmount = styled(Typography)(({ theme }) => ({\r\n  fontSize: '2rem',\r\n  fontWeight: 700,\r\n  color: theme.palette.text.primary,\r\n  textAlign: 'center',\r\n  marginBottom: theme.spacing(0.5),\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '1.5rem',\r\n  },\r\n}));\r\n\r\n// Account balance change styled component\r\nexport const AccountBalanceChange = styled(Typography)(({ theme }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: 500,\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '0.875rem',\r\n  },\r\n}));\r\n\r\n// Monthly stats card styled component\r\nexport const MonthlyStatsCard = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  background: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.8)\r\n    : theme.palette.background.paper,\r\n  backdropFilter: 'blur(10px)',\r\n  borderRadius: theme.shape.borderRadius * 2,\r\n  boxShadow: theme.shadows[4],\r\n}));\r\n\r\n// Monthly stats title styled component\r\nexport const MonthlyStatsTitle = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\n// Monthly stats grid styled component\r\nexport const MonthlyStatsGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\r\n  gap: theme.spacing(2),\r\n}));\r\n\r\n// Monthly stat item styled component\r\nexport const MonthlyStatItem = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1.5),\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.6)\r\n    : theme.palette.background.paper,\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[1],\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: theme.shadows[3],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// Monthly stat label styled component\r\nexport const MonthlyStatLabel = styled(Typography)(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(0.5),\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '0.75rem',\r\n  },\r\n}));\r\n\r\n// Monthly stat value styled component\r\nexport const MonthlyStatValue = styled(Typography)(({ theme }) => ({\r\n  fontSize: '1.25rem',\r\n  fontWeight: 600,\r\n  color: theme.palette.text.primary,\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '1rem',\r\n  },\r\n}));\r\n\r\n// Journal link styled component\r\nexport const JournalLink = styled('a')(({ theme }) => ({\r\n  color: theme.palette.primary.main,\r\n  textDecoration: 'none',\r\n  fontSize: '0.875rem',\r\n  '&:hover': {\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\n// Animated pulse styled component\r\nexport const AnimatedPulse = styled(Box)(({ theme }) => ({\r\n  animation: `pulse 2s ${theme.transitions.easing.easeInOut} infinite`\r\n}));","import { SxProps, Theme } from '@mui/material';\r\n\r\nexport const dialogProps = {\r\n  PaperProps: {\r\n    sx: {\r\n      bgcolor: 'background.paper',\r\n      borderRadius: 2,\r\n      boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.15)'\r\n    }\r\n  },\r\n  sx: {\r\n    '& .MuiBackdrop-root': {\r\n      backdropFilter: 'blur(4px)',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n    }\r\n  }\r\n} as const;\r\n\r\n// Helper function to merge additional styles with default dialog styles\r\nexport const mergeDialogStyles = (additionalSx?: SxProps<Theme>) => ({\r\n  ...dialogProps,\r\n  sx: {\r\n    ...dialogProps.sx,\r\n    ...(additionalSx || {})\r\n  }\r\n}); ","/**\n * Utility functions for generating consistent colors for tags\n * Supports grouped tags in format \"Group:Tag\" (e.g., \"Strategy:Volume\")\n */\n\nimport { alpha } from '@mui/material/styles';\nimport { Theme } from '@mui/material';\n\n// Predefined color palette for better visual consistency\nconst TAG_COLORS = [\n  '#1565C0', // Dark Blue\n  '#2E7D32', // Dark Green\n  '#EF6C00', // Dark Orange\n  '#6A1B9A', // Dark Purple\n  '#AD1457', // Dark Pink\n  '#00838F', // Dark Cyan\n  '#FFA000', // Dark Amber\n  '#4E342E', // Dark Brown\n  '#455A64', // Dark Blue Grey\n  '#558B2F', // Dark Light Green\n  '#D84315', // Dark Deep Orange\n  '#4527A0', // Dark Deep Purple\n  '#283593', // Dark Indigo\n  '#00695C', // Dark Teal\n  '#9E9D24', // Dark Lime\n  '#F9A825', // Dark Yellow\n];\n\n/**\n * Generates a consistent color hash from a string\n * @param str The string to generate a color for\n * @returns A number between 0 and TAG_COLORS.length\n */\nconst hashString = (str: string): number => {\n  // Simple but effective string hash function\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  // Make sure we get a positive number and map it directly to our color array length\n  return Math.abs(hash) % TAG_COLORS.length;\n};\n\n/**\n * Checks if a tag is a grouped tag (contains a colon)\n * @param tag The tag to check\n * @returns True if the tag is grouped\n */\nexport const isGroupedTag = (tag: string): boolean => {\n  return tag.includes(':');\n};\n\n/**\n * Gets the group name from a grouped tag\n * @param tag The grouped tag (e.g., \"Strategy:Volume\")\n * @returns The group name (e.g., \"Strategy\")\n */\nexport const getTagGroup = (tag: string): string => {\n  if (!isGroupedTag(tag)) return '';\n  return tag.split(':')[0];\n};\n\n/**\n * Gets the tag name without the group prefix\n * @param tag The grouped tag (e.g., \"Strategy:Volume\")\n * @returns The tag name without group (e.g., \"Volume\")\n */\nexport const getTagName = (tag: string): string => {\n  if (!isGroupedTag(tag)) return tag;\n  const parts = tag.split(':');\n  return parts.length > 1 ? parts[1] : parts[0];\n};\n\n/**\n * Gets a consistent color for a tag\n * For grouped tags, the color is based on the group name\n * @param tag The tag name\n * @returns A hex color code\n */\nexport const getTagColor = (tag: string): string => {\n  // For grouped tags, use the group name for color consistency within groups\n  const colorKey = isGroupedTag(tag) ? getTagGroup(tag) : tag;\n  // Get the index directly from the hash function\n  const index = hashString(colorKey);\n  return TAG_COLORS[index];\n};\n\n/**\n * Gets tag chip styles for consistent appearance across the app\n * @param tag The tag name\n * @param theme The current theme\n * @returns Style object for the tag chip\n */\nexport const getTagChipStyles = (tag: string, theme: Theme) => {\n  const color = getTagColor(tag);\n  return {\n    backgroundColor: alpha(color, 0.8),\n    color: alpha(\"#ffffff\", 0.8),\n    fontWeight: 500,\n    '& .MuiChip-deleteIcon': {\n      color: '#ffffff',\n      '&:hover': {\n        color: alpha('#ffffff', 0.8)\n      }\n    }\n  };\n};\n\n/**\n * Filters tags by group name\n * @param tags Array of tags to filter\n * @param group Group name to filter by\n * @returns Array of tags that belong to the specified group\n */\nexport const filterTagsByGroup = (tags: string[], group: string): string[] => {\n  return tags.filter(tag => isGroupedTag(tag) && getTagGroup(tag) === group);\n};\n\n/**\n * Gets all unique group names from an array of tags\n * @param tags Array of tags to extract groups from\n * @returns Array of unique group names\n */\nexport const getUniqueTagGroups = (tags: string[]): string[] => {\n  const groups = new Set<string>();\n\n  tags.forEach(tag => {\n    if (isGroupedTag(tag)) {\n      groups.add(getTagGroup(tag));\n    }\n  });\n\n  return Array.from(groups).sort();\n};\n\n/**\n * Formats a tag for display, optionally hiding the group prefix\n * @param tag The tag to format\n * @param hideGroup Whether to hide the group prefix\n * @returns Formatted tag for display\n */\nexport const formatTagForDisplay = (tag: string, hideGroup: boolean = false): string => {\n  if (!isGroupedTag(tag) || !hideGroup) return tag;\n  return getTagName(tag);\n};\n"],"names":["_ref","open","onClose","title","actions","children","maxWidth","fullWidth","hideCloseButton","hideFooterCancelButton","cancelButtonText","cancelButtonAction","primaryButtonText","primaryButtonAction","isSubmitting","contentSx","rest","theme","useTheme","_jsxs","Dialog","dialogProps","slotProps","paper","sx","borderRadius","boxShadow","border","palette","divider","maxHeight","overflow","scrollbarStyles","DialogTitleStyled","_jsx","Box","display","alignItems","justifyContent","width","Typography","variant","IconButton","onClick","size","CloseIcon","DialogContentStyled","DialogActionsStyled","gap","Button","color","disabled","minWidth","position","CircularProgress","tags","onTagClick","onTagDelete","showGroups","chipSize","filteredTags","filter","tag","startsWith","organizedTags","useMemo","length","groups","ungroupedTags","getUniqueTagGroups","forEach","group","filterTagsByGroup","isGroupedTag","push","flexDirection","overflowY","Object","keys","_Fragment","entries","map","_ref2","groupTags","fontWeight","flexWrap","Chip","label","getTagName","undefined","onDelete","getTagChipStyles","formatTagForDisplay","message","confirmText","cancelText","onConfirm","onCancel","confirmColor","DialogTitle","DialogContent","DialogActions","SelectInput","options","helperText","FormControl","InputLabel","Select","option","MenuItem","value","fadeIn","keyframes","slideUp","slideDown","slideLeft","slideRight","scaleUp","shake","bounce","rotate","AnimatedDropdown","styled","animation","Paper","from","opacity","transform","to","_ref3","_ref4","_ref5","_ref6","transformOrigin","_ref7","_ref8","animationDelay","_ref9","_ref10","_ref11","shimmer","isPendingImage","image","pending","isImageLoading","loadingState","id","trade","isExpanded","setZoomedImage","onUpdateTradeProperty","isToggling","setIsToggling","useState","loadingImages","setLoadingImages","useEffect","images","initialLoadingState","p","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","borderLeft","borderRight","borderBottom","borderTop","backgroundColor","alpha","background","mb","Stack","spacing","name","fontSize","gridTemplateColumns","xs","sm","entry","exit","elevation","info","main","gridColumn","amount","success","error","grey","MoneyIcon","toFixed","type","async","currentTrade","Math","abs","console","left","primary","CalendarIcon","format","date","riskToReward","warning","RiskIcon","session","SessionIcon","Divider","my","pl","TagsDisplay","notes","NoteIcon","whiteSpace","lineHeight","ImageIcon","imagesByRow","row","sort","a","b","Number","_","rowImages","rowIndex","column","colIndex","columnWidth","height","paddingTop","top","zIndex","cursor","baseColor","mode","backgroundSize","willChange","src","url","alt","caption","style","objectFit","transition","onLoad","prev","className","right","bottom","ZoomInIcon","allTags","selectedTags","onTagsChange","showClearButton","showApplyButton","selectedTagGroup","setSelectedTagGroup","tagGroups","dialogTitle","dialogActions","handleClearTags","BaseDialog","mt","onChange","e","target","Autocomplete","multiple","newValue","renderInput","params","TextField","placeholder","renderTags","getTagProps","index","getTagGroup","renderOption","props","progress","isMet","tooltipText","badgeContent","bgcolor","ml","px","CheckCircle","mr","Flag","max","Tooltip","arrow","placement","formatValue","formatCurrency","toLocaleString","minimumFractionDigits","maximumFractionDigits","imageUrl","scale","setScale","setPosition","x","y","isDragging","setIsDragging","dragStart","setDragStart","imageRef","useRef","containerRef","resetZoom","handleGlobalMouseUp","document","addEventListener","removeEventListener","PaperProps","ref","onWheel","preventDefault","newScale","deltaY","min","onMouseDown","clientX","clientY","onMouseMove","newX","newY","current","getBoundingClientRect","imageRect","maxX","maxY","boundedX","boundedY","onMouseUp","onMouseLeave","userSelect","pointerEvents","RestartAltIcon","CustomYAxisTick","payload","formattedValue","dy","textAnchor","fill","CustomTooltip","active","data","shadows","dailyChange","cumulativePnL","trades","chartData","targetValue","monthlyTarget","setMultipleTradesDialog","timePeriod","COLORS","py","ResponsiveContainer","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","vertical","XAxis","dataKey","axisLine","tickLine","tick","text","secondary","YAxis","content","ReferenceLine","stroke","strokeWidth","Area","fillOpacity","baseValue","activeDot","cx","cy","r","log","dataPoint","formattedDate","fullDate","expandedTradeId","dot","CustomDailyPnLYAxisTick","isWin","isLoss","pnl","drawdownViolationValue","BarChart","Bar","radius","Cell","winLossData","comparisonWinLossData","comparisonTags","setComparisonTags","onPieClick","tagStats","comparisonTagsDialogOpen","setComparisonTagsDialogOpen","React","createElement","innerHTML","head","appendChild","removeChild","win","loss","zero","breakEven","chartStyle","generateTagDistributionData","some","d","tagCounts","Map","filteredTagStats","stat","includes","set","totalTrades","split","reduce","acc","char","charCodeAt","Array","count","pb","textTransform","TagFilterDialog","flex","minHeight","PieChart","outline","tabIndex","margin","getTagColor","sum","item","Pie","labelLine","outerRadius","innerRadius","percent","paddingAngle","cornerRadius","fillColor","Legend","verticalAlign","align","layout","iconSize","iconType","wrapperStyle","pt","marginTop","selectedDate","primaryTags","secondaryTags","setPrimaryTags","setSecondaryTags","primaryTagsDialogOpen","setPrimaryTagsDialogOpen","secondaryTagsDialogOpen","setSecondaryTagsDialogOpen","MuiTooltip","InfoOutlined","maxBarSize","wins","losses","winRate","totalPnL","stackId","filteredTrades","_trade$tags","isSameMonth","Date","getFullYear","_trade$tags2","dailySummaryData","day","TrendingUp","TrendingDown","TrendingFlat","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","dayTrades","fontStyle","sessionStats","sessionTrades","gutterBottom","averagePnL","pnlPercentage","winners","losers","tickFormatter","sessionName","onTradeExpand","onZoomImage","List","default","borderColor","ListItem","CollapseIcon","ExpandIcon","TradeDetailExpanded","riskRewardStats","average","accountBalance","maxDailyDrawdown","onTimePeriodChange","onPrimaryTagsChange","onSecondaryTagsChange","setTimePeriod","multipleTradesDialog","zoomedImage","getFilteredTrades","useCallback","period","getTime","riskRewardValues","rr","startDate","endDate","startOfMonth","endOfMonth","sortedTrades","days","eachDayOfInterval","start","end","cumulative","prevCumulative","dailyPnL","isIncreasing","isDecreasing","isBreakEven","winLossStats","totalWins","totalLosses","totalWinAmount","totalLossAmount","avgWin","avgLoss","currentWinStreak","maxWinStreak","totalWinStreaks","winStreakCount","currentLossStreak","maxLossStreak","totalLossStreaks","lossStreakCount","total","avgAmount","maxConsecutive","avgConsecutive","tradesByDate","dateKey","sessionCounts","mostCommonSession","highestCount","parseISO","tagMap","stats","get","round","Set","add","_trade$tags$includes","every","secondaryTag","_trade$tags$includes2","ImageZoomDialog","TradesListDialog","tradeId","Tabs","handleTimePeriodChange","padding","Tab","RiskRewardChart","CumulativePnLChart","DailyPnLChart","md","WinLossDistribution","category","categoryTrades","dateText","_trade$tags3","DailySummaryTable","TagPerformanceAnalysis","SessionPerformanceAnalysis","onDateSelect","initialDate","yearlyTarget","currentDate","setCurrentDate","currentYear","months","currentMonth","getMonth","yearTrades","yearlyPnL","yearlyWinCount","yearlyLossCount","yearlyWinRate","yearlyGrowthPercentage","getMonthPnL","monthIndex","bestMonth","getBestMonth","bestMonthIndex","bestMonthPnL","i","monthPnL","yearlyTargetProgress","getYearlyTargetProgress","targetAmount","rawProgress","CalendarToday","handleToday","startIcon","handlePrevYear","subYears","ChevronLeft","textAlign","letterSpacing","handleNextYear","addYears","ChevronRight","TargetBadge","light","EmojiEvents","parseFloat","CalendarMonth","month","hasEntries","targetProgress","getMonthTargetProgress","growthPercentage","newDate","handleMonthSelect","component","StyledCalendarDay","$isCurrentMonth","$dayStatus","shape","DayNumber","marginBottom","TradeAmount","TradeCount","common","white","black","_ref12","_ref13","_ref14","_ref15","borderWidth","_ref16","_ref17","_ref18","FormField","_ref19","TradeListItem","_ref20","$type","TradeInfo","_ref21","TradeActions","_ref22","AnimatedPulse","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","breakpoints","down","_ref30","_ref31","backdropFilter","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","textDecoration","_ref38","transitions","easing","easeInOut","TAG_COLORS","parts","str","hash","hashString","hideGroup","arguments"],"sourceRoot":""}