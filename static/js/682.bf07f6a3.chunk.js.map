{"version":3,"file":"static/js/682.bf07f6a3.chunk.js","mappings":"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","sources":["components/common/BaseDialog.tsx","components/common/TagsDisplay.tsx","components/common/ConfirmationDialog.tsx","components/common/FormField.tsx","components/Animations.tsx","components/TradeDetailExpanded.tsx","components/TagFilterDialog.tsx","components/TargetBadge.tsx","utils/formatters.ts","components/ImageZoomDialog.tsx","components/charts/CumulativePnLChart.tsx","components/charts/DailyPnLChart.tsx","components/charts/WinLossDistribution.tsx","components/charts/TagPerformanceAnalysis.tsx","components/charts/DailySummaryTable.tsx","components/charts/SessionPerformanceAnalysis.tsx","components/charts/TradesListDialog.tsx","components/charts/RiskRewardChart.tsx","components/PerformanceCharts.tsx","components/SelectDateDialog.tsx","styles/scrollbarStyles.ts","components/StyledComponents.tsx","styles/dialogStyles.ts","utils/tagColors.ts"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogProps,\r\n  IconButton,\r\n  Typography,\r\n  Box,\r\n  useTheme,\r\n  Button,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { Close as CloseIcon } from '@mui/icons-material';\r\nimport { dialogProps } from '../../styles/dialogStyles';\r\nimport { scrollbarStyles } from '../../styles/scrollbarStyles';\r\nimport {\r\n  DialogTitleStyled,\r\n  DialogContentStyled,\r\n  DialogActionsStyled\r\n} from '../StyledComponents';\r\n\r\nexport interface BaseDialogProps extends Omit<DialogProps, 'title'> {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: ReactNode;\r\n  actions?: ReactNode;\r\n  children: ReactNode;\r\n  maxWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n  fullWidth?: boolean;\r\n  hideCloseButton?: boolean;\r\n  hideFooterCancelButton?: boolean;\r\n  cancelButtonText?: string;\r\n  cancelButtonAction?: () => void;\r\n  primaryButtonText?: string;\r\n  primaryButtonAction?: (e?: React.FormEvent) => void;\r\n  isSubmitting?: boolean;\r\n  contentSx?: any;\r\n}\r\n\r\nconst BaseDialog: React.FC<BaseDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  title,\r\n  actions,\r\n  children,\r\n  maxWidth = 'sm',\r\n  fullWidth = true,\r\n  hideCloseButton = false,\r\n  hideFooterCancelButton = false,\r\n  cancelButtonText = 'Cancel',\r\n  cancelButtonAction,\r\n  primaryButtonText = 'Save',\r\n  primaryButtonAction,\r\n  isSubmitting = false,\r\n  contentSx = {},\r\n  ...rest\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      fullWidth={fullWidth}\r\n      {...dialogProps}\r\n      slotProps={{\r\n        paper: {\r\n          sx: {\r\n            borderRadius: 2,\r\n            boxShadow: 'none',\r\n            border: `1px solid ${theme.palette.divider}`,\r\n            maxHeight: '90vh',\r\n            overflow: 'hidden',\r\n            '& .MuiDialogContent-root': {\r\n              ...scrollbarStyles(theme)\r\n            }\r\n          }\r\n        }\r\n      }}\r\n      {...rest}\r\n    >\r\n      <DialogTitleStyled>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\r\n          {typeof title === 'string' ? (\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n          ) : (\r\n            title\r\n          )}\r\n        </Box>\r\n        {!hideCloseButton && (\r\n          <IconButton onClick={onClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitleStyled>\r\n\r\n      <DialogContentStyled sx={contentSx}>\r\n        {children}\r\n      </DialogContentStyled>\r\n\r\n      {(actions || !hideFooterCancelButton || primaryButtonAction) && (\r\n        <DialogActionsStyled>\r\n          {actions}\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n\r\n            {(!hideFooterCancelButton || cancelButtonAction) && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={cancelButtonAction || onClose}\r\n              >\r\n                {cancelButtonText}\r\n              </Button>\r\n            )}\r\n\r\n            {primaryButtonAction && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={primaryButtonAction}\r\n                disabled={isSubmitting}\r\n                sx={{\r\n                  minWidth: '100px',\r\n                  position: 'relative',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  gap: 1\r\n                }}\r\n              >\r\n                {primaryButtonText}\r\n                {isSubmitting && (\r\n                  <CircularProgress\r\n                    size={16}\r\n                    sx={{\r\n                      position: 'static'\r\n                    }}\r\n                  />\r\n                )}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </DialogActionsStyled>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BaseDialog;\r\n","import React, { useMemo } from 'react';\r\nimport { Box, Chip, Typography, useTheme } from '@mui/material';\r\nimport { Label as TagIcon } from '@mui/icons-material';\r\nimport {\r\n  getTagChipStyles,\r\n  formatTagForDisplay,\r\n  isGroupedTag,\r\n  getTagGroup,\r\n  getUniqueTagGroups,\r\n  filterTagsByGroup,\r\n  getTagName\r\n} from '../../utils/tagColors';\r\n\r\ninterface TagsDisplayProps {\r\n  tags: string[];\r\n  onTagClick?: (tag: string) => void;\r\n  onTagDelete?: (tag: string) => void;\r\n  showGroups?: boolean;\r\n  chipSize?: 'small' | 'medium';\r\n  maxHeight?: string | number;\r\n}\r\n\r\nconst TagsDisplay: React.FC<TagsDisplayProps> = ({\r\n  tags,\r\n  onTagClick,\r\n  onTagDelete,\r\n  showGroups = true,\r\n  chipSize = 'small',\r\n  maxHeight\r\n}) => {\r\n  // Filter out Partials tags\r\n  const filteredTags = tags.filter(tag => !tag.startsWith('Partials:'));\r\n  const theme = useTheme();\r\n\r\n  // Organize tags by category\r\n  const organizedTags = useMemo(() => {\r\n    if (!filteredTags || filteredTags.length === 0) return { groups: {}, ungroupedTags: [] };\r\n\r\n    const groups: Record<string, string[]> = {};\r\n    const ungroupedTags: string[] = [];\r\n\r\n    // Get all unique groups\r\n    const uniqueGroups = getUniqueTagGroups(filteredTags);\r\n\r\n    // Initialize groups\r\n    uniqueGroups.forEach(group => {\r\n      groups[group] = filterTagsByGroup(filteredTags || [], group);\r\n    });\r\n\r\n    // Get ungrouped tags\r\n    filteredTags.forEach(tag => {\r\n      if (!isGroupedTag(tag)) {\r\n        ungroupedTags.push(tag);\r\n      }\r\n    });\r\n\r\n    return { groups, ungroupedTags };\r\n  }, [filteredTags]);\r\n\r\n  if (!filteredTags || filteredTags.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      gap: 1,\r\n      maxHeight: maxHeight,\r\n      overflowY: maxHeight ? 'auto' : 'visible'\r\n    }}>\r\n      {showGroups && Object.keys(organizedTags.groups).length > 0 && (\r\n        <>\r\n          {Object.entries(organizedTags.groups).map(([group, groupTags]) => (\r\n            <Box key={group} sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\r\n                {group}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                {groupTags.map(tag => (\r\n                  <Chip\r\n                    key={tag}\r\n                    label={getTagName(tag)}\r\n                    size={chipSize}\r\n                    onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n                    onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n                    sx={getTagChipStyles(tag, theme)}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      {organizedTags.ungroupedTags.length > 0 && (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n          {showGroups && Object.keys(organizedTags.groups).length > 0 && (\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\r\n              Tags\r\n            </Typography>\r\n          )}\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n            {organizedTags.ungroupedTags.map(tag => (\r\n              <Chip\r\n                key={tag}\r\n                label={formatTagForDisplay(tag)}\r\n                size={chipSize}\r\n                onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n                onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n                sx={getTagChipStyles(tag, theme)}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {!showGroups && (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {filteredTags.map(tag => (\r\n            <Chip\r\n              key={tag}\r\n              label={formatTagForDisplay(tag)}\r\n              size={chipSize}\r\n              onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n              onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n              sx={getTagChipStyles(tag, theme)}\r\n            />\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TagsDisplay;\r\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  CircularProgress\n} from '@mui/material';\n\ninterface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n  isSubmitting?: boolean;\n  confirmColor?: 'primary' | 'error' | 'warning' | 'success' | 'info';\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  open,\n  title,\n  message,\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  onConfirm,\n  onCancel,\n  isSubmitting = false,\n  confirmColor = 'primary'\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onCancel}\n      maxWidth=\"xs\"\n      fullWidth\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <Typography>{message}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={onCancel}\n          disabled={isSubmitting}\n        >\n          {cancelText}\n        </Button>\n        <Button\n          onClick={onConfirm}\n          color={confirmColor}\n          variant=\"contained\"\n          disabled={isSubmitting}\n          sx={{\n            minWidth: '100px',\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 1\n          }}\n        >\n          {confirmText}\n          {isSubmitting && (\n            <CircularProgress\n              size={20}\n              sx={{\n                position: 'static'\n              }}\n            />\n          )}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React, { JSX, ReactNode } from 'react';\r\nimport { \r\n  TextField, \r\n  TextFieldProps, \r\n  FormControl, \r\n  InputLabel, \r\n  Select, \r\n  MenuItem, \r\n  SelectProps,\r\n  Autocomplete,\r\n  AutocompleteProps,\r\n  Box,\r\n  Typography\r\n} from '@mui/material';\r\n\r\n// Text Field\r\ninterface TextInputProps extends Omit<TextFieldProps, 'label'> {\r\n  label: string;\r\n  helperText?: string;\r\n}\r\n\r\nexport const TextInput: React.FC<TextInputProps> = ({ \r\n  label, \r\n  helperText,\r\n  ...rest \r\n}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <TextField\r\n        label={label}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        size=\"small\"\r\n        {...rest}\r\n      />\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Select Field\r\ninterface SelectInputProps extends Omit<SelectProps, 'label'> {\r\n  label: string;\r\n  options: Array<{ value: string | number; label: string }>;\r\n  helperText?: string;\r\n}\r\n\r\nexport const SelectInput: React.FC<SelectInputProps> = ({ \r\n  label, \r\n  options, \r\n  helperText,\r\n  ...rest \r\n}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <FormControl fullWidth size=\"small\">\r\n        <InputLabel>{label}</InputLabel>\r\n        <Select\r\n          label={label}\r\n          {...rest}\r\n        >\r\n          {options.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Autocomplete Field\r\ninterface AutocompleteInputProps<T> extends Omit<AutocompleteProps<T, boolean, boolean, boolean>, 'renderInput'> {\r\n  label: string;\r\n  helperText?: string;\r\n  textFieldProps?: Partial<TextFieldProps>;\r\n}\r\n\r\nexport function AutocompleteInput<T>({ \r\n  label, \r\n  helperText,\r\n  textFieldProps,\r\n  ...rest \r\n}: AutocompleteInputProps<T>): JSX.Element {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <Autocomplete\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={label}\r\n            size=\"small\"\r\n            {...textFieldProps}\r\n          />\r\n        )}\r\n        {...rest}\r\n      />\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Form Section\r\ninterface FormSectionProps {\r\n  title?: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const FormSection: React.FC<FormSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n      {title && (\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Form Row (for horizontal layout)\r\ninterface FormRowProps {\r\n  children: ReactNode;\r\n  spacing?: number;\r\n}\r\n\r\nexport const FormRow: React.FC<FormRowProps> = ({ children, spacing = 2 }) => {\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: { xs: 'column', sm: 'row' }, \r\n      gap: spacing,\r\n      '& > *': { flex: 1 }\r\n    }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Form Actions\r\ninterface FormActionsProps {\r\n  children: ReactNode;\r\n  align?: 'left' | 'center' | 'right';\r\n  spacing?: number;\r\n}\r\n\r\nexport const FormActions: React.FC<FormActionsProps> = ({ \r\n  children, \r\n  align = 'right',\r\n  spacing = 1 \r\n}) => {\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      justifyContent: align === 'left' ? 'flex-start' : align === 'center' ? 'center' : 'flex-end',\r\n      gap: spacing,\r\n      mt: 2\r\n    }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n","import { keyframes } from '@mui/system';\nimport { styled } from '@mui/material/styles';\nimport { Box, Paper } from '@mui/material';\n\n// Fade in animation\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\n// Slide up animation\nexport const slideUp = keyframes`\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// Slide down animation\nexport const slideDown = keyframes`\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// Slide left animation\nexport const slideLeft = keyframes`\n  from {\n    transform: translateX(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\n// Slide right animation\nexport const slideRight = keyframes`\n  from {\n    transform: translateX(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\n// Scale up animation\nexport const scaleUp = keyframes`\n  from {\n    transform: scale(0.9);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n`;\n\n// Pulse animation\nexport const pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\n// Shake animation\nexport const shake = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-5px);\n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(5px);\n  }\n`;\n\n// Bounce animation\nexport const bounce = keyframes`\n  0%, 20%, 50%, 80%, 100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-10px);\n  }\n  60% {\n    transform: translateY(-5px);\n  }\n`;\n\n// Rotate animation\nexport const rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\n// Animated container component\nexport const AnimatedContainer = styled(Box)(({ theme }) => ({\n  animation: `${fadeIn} 0.5s ease-out`,\n}));\n\n// Animated paper component\nexport const AnimatedPaper = styled(Paper)(({ theme }) => ({\n  animation: `${scaleUp} 0.3s ease-out`,\n}));\n\n// Animated slide up component\nexport const AnimatedSlideUp = styled(Box)({\n  animation: 'slideUp 0.3s ease-out',\n  '@keyframes slideUp': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    }\n  }\n});\n\n// Animated slide down component\nexport const AnimatedSlideDown = styled(Box)({\n  animation: 'slideDown 0.3s ease-out',\n  '@keyframes slideDown': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(-20px)'\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    }\n  }\n});\n\n// Animated slide left component\nexport const AnimatedSlideLeft = styled(Box)(({ theme }) => ({\n  animation: `${slideLeft} 0.5s ease-out`,\n}));\n\n// Animated slide right component\nexport const AnimatedSlideRight = styled(Box)(({ theme }) => ({\n  animation: `${slideRight} 0.5s ease-out`,\n}));\n\n// Animated pulse component\nexport const AnimatedPulse = styled(Box)({\n  animation: 'pulse 2s infinite',\n  '@keyframes pulse': {\n    '0%': {\n      transform: 'scale(1)'\n    },\n    '50%': {\n      transform: 'scale(1.05)'\n    },\n    '100%': {\n      transform: 'scale(1)'\n    }\n  }\n});\n\n// Animated shake component\nexport const AnimatedShake = styled(Box)(({ theme }) => ({\n  animation: `${shake} 0.5s ease-in-out`,\n}));\n\n// Animated bounce component\nexport const AnimatedBounce = styled(Box)(({ theme }) => ({\n  animation: `${bounce} 2s infinite`,\n}));\n\n// Animated dropdown component\nexport const AnimatedDropdown = styled(Box)({\n  animation: 'dropdown 0.3s ease-out',\n  transformOrigin: 'top',\n  overflow: 'hidden',\n  '@keyframes dropdown': {\n    from: {\n      opacity: 0,\n      maxHeight: '0px',\n      transform: 'scaleY(0)'\n    },\n    to: {\n      opacity: 1,\n      maxHeight: '1000px',\n      transform: 'scaleY(1)'\n    }\n  }\n});\n\n// Animated rotate component\nexport const AnimatedRotate = styled(Box)(({ theme }) => ({\n  animation: `${rotate} 2s linear infinite`,\n}));\n\n// Staggered animation container\nexport const StaggeredContainer = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${fadeIn} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered slide up container\nexport const StaggeredSlideUp = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${slideUp} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered slide down container\nexport const StaggeredSlideDown = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${slideDown} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered scale up container\nexport const StaggeredScaleUp = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${scaleUp} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Stack,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Button\r\n} from '@mui/material';\r\nimport { alpha, useTheme, keyframes } from '@mui/material/styles';\r\nimport { format } from 'date-fns';\r\nimport { Trade } from '../types/trade';\r\nimport {\r\n  ZoomIn as ZoomInIcon,\r\n  AttachMoney as MoneyIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Balance as RiskIcon,\r\n  Schedule as SessionIcon,\r\n  Note as NoteIcon,\r\n  Image as ImageIcon\r\n} from '@mui/icons-material';\r\nimport { AnimatedDropdown } from './Animations';\r\nimport { TagsDisplay } from './common';\r\nimport { TradeImage } from './trades/TradeForm';\r\n\r\ninterface TradeDetailExpandedProps {\r\n  trade: Trade;\r\n  isExpanded: boolean;\r\n  setZoomedImage: (url: string) => void;\r\n  onUpdateTradeProperty?: (tradeId: string, updateCallback: (trade: Trade) => Trade) => Promise<Trade | undefined>;\r\n}\r\n\r\n// Define shimmer animation\r\nconst shimmer = keyframes`\r\n  0% {\r\n    background-position: -200% 0;\r\n  }\r\n  100% {\r\n    background-position: 200% 0;\r\n  }\r\n`;\r\n\r\n// Helper function to check if an image is pending\r\nconst isPendingImage = (image: TradeImage): boolean => {\r\n  return image.pending || false\r\n};\r\n\r\nconst TradeDetailExpanded: React.FC<TradeDetailExpandedProps> = ({\r\n  trade,\r\n  isExpanded,\r\n  setZoomedImage,\r\n  onUpdateTradeProperty\r\n}) => {\r\n  const theme = useTheme();\r\n  const [isToggling, setIsToggling] = useState(false);\r\n\r\n  // No need to organize tags here as TagsDisplay will handle it\r\n\r\n  // Function to toggle trade type between 'win' and 'loss'\r\n  const handleToggleTradeType = async () => {\r\n    if (!onUpdateTradeProperty || isToggling) return;\r\n\r\n    try {\r\n      setIsToggling(true);\r\n      await onUpdateTradeProperty(trade.id, (currentTrade) => ({\r\n        ...currentTrade,\r\n        type: currentTrade.type === 'win' ? 'loss' : 'win',\r\n        // Flip the amount sign\r\n        amount: currentTrade.type === 'win' ? -Math.abs(currentTrade.amount) : Math.abs(currentTrade.amount)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error toggling trade type:', error);\r\n    } finally {\r\n      setIsToggling(false);\r\n    }\r\n  };\r\n\r\n  if (!isExpanded) return null;\r\n\r\n  return (\r\n    <AnimatedDropdown>\r\n      <Box sx={{\r\n        p: 2,\r\n        borderBottomLeftRadius: 8,\r\n        borderBottomRightRadius: 8,\r\n        borderTopRightRadius: 0,\r\n        borderTopLeftRadius: 0,\r\n        borderLeft: `1px solid ${theme.palette.divider}`,\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n\r\n        backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n        mb: 1,\r\n        width: '100%'\r\n      }}>\r\n        <Stack spacing={3}>\r\n          {/* Properties Section */}\r\n          <Box sx={{ width: '100%' }}>\r\n            {trade.name && (\r\n              <Typography variant=\"h6\" color=\"text.primary\" sx={{ mb: 2, display: 'block', fontWeight: 700 }}>\r\n                📈 {trade.name}\r\n              </Typography>\r\n            )}\r\n            <Typography variant=\"subtitle2\" color=\"text.primary\" sx={{ mb: 1.5, display: 'block', fontWeight: 700, fontSize: '0.9rem' }}>\r\n              Properties\r\n            </Typography>\r\n\r\n            <Stack spacing={2} sx={{ width: '100%' }}>\r\n              {/* Key Properties Grid */}\r\n              <Box sx={{\r\n                display: 'grid',\r\n                gridTemplateColumns: { xs: '1fr', sm: 'repeat(2, 1fr)' },\r\n                gap: 2,\r\n                width: '100%'\r\n              }}>\r\n                {/* Entry/Exit Prices */}\r\n                {(trade.entry || trade.exit) && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.info.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.info.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5,\r\n                    gridColumn: { xs: '1', sm: 'span 2' }\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\r\n                      {trade.entry && (\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                          <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                            Entry Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                            {trade.entry}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                      {trade.exit && (\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                          <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                            Exit Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                            {trade.exit}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n                {/* PnL */}\r\n                <Paper elevation={0} sx={{\r\n                  p: 1.5,\r\n                  borderRadius: 2,\r\n                  backgroundColor: alpha(\r\n                    trade.amount > 0 ? theme.palette.success.main :\r\n                    trade.amount < 0 ? theme.palette.error.main :\r\n                    theme.palette.grey[500],\r\n                    0.1\r\n                  ),\r\n                  border: `1px solid ${alpha(\r\n                    trade.amount > 0 ? theme.palette.success.main :\r\n                    trade.amount < 0 ? theme.palette.error.main :\r\n                    theme.palette.grey[500],\r\n                    0.2\r\n                  )}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 0.5\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                    <MoneyIcon sx={{\r\n                      fontSize: 18,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.secondary'\r\n                    }} />\r\n                    <Typography variant=\"caption\" sx={{\r\n                      fontWeight: 600,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.secondary'\r\n                    }}>\r\n                      PnL\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Typography variant=\"h6\" sx={{\r\n                      fontWeight: 700,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.primary',\r\n                      fontSize: '1.1rem'\r\n                    }}>\r\n                      {trade.amount > 0 ? '+' : ''}{trade.amount.toFixed(2)}\r\n                    </Typography>\r\n\r\n                    {onUpdateTradeProperty && (\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        color={trade.type === 'win' ? 'success' : 'error'}\r\n                        onClick={handleToggleTradeType}\r\n                        disabled={isToggling}\r\n                        sx={{\r\n                          minWidth: '80px',\r\n                          fontSize: '0.7rem',\r\n                          position: 'relative'\r\n                        }}\r\n                      >\r\n                        {isToggling ? (\r\n                          <>\r\n                            <CircularProgress\r\n                              size={16}\r\n                              color=\"inherit\"\r\n                              sx={{\r\n                                position: 'absolute',\r\n                                left: '8px'\r\n                              }}\r\n                            />\r\n                            Processing...\r\n                          </>\r\n                        ) : (\r\n                          <>Toggle {trade.type === 'win' ? 'Win' : 'Loss'}</>\r\n                        )}\r\n                      </Button>\r\n                    )}\r\n                  </Box>\r\n                </Paper>\r\n\r\n                {/* Date */}\r\n                <Paper elevation={0} sx={{\r\n                  p: 1.5,\r\n                  borderRadius: 2,\r\n                  backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                  border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 0.5\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                    <CalendarIcon sx={{ fontSize: 18, color: 'primary.main' }} />\r\n                    <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'primary.main' }}>\r\n                      Date\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                    {format(trade.date, 'MMMM d, yyyy')}\r\n                  </Typography>\r\n                </Paper>\r\n\r\n                {/* Risk to Reward */}\r\n                {trade.riskToReward && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.warning.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.warning.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <RiskIcon sx={{ fontSize: 18, color: 'warning.main' }} />\r\n                      <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'warning.main' }}>\r\n                        Risk to Reward\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                      {trade.riskToReward}\r\n                    </Typography>\r\n                  </Paper>\r\n                )}\r\n\r\n                {/* Session */}\r\n                {trade.session && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.info.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.info.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <SessionIcon sx={{ fontSize: 18, color: 'info.main' }} />\r\n                      <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                        Session\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                      {trade.session}\r\n                    </Typography>\r\n                  </Paper>\r\n                )}\r\n              </Box>\r\n\r\n              <Divider sx={{ my: 1.5 }} />\r\n\r\n              {/* Tags Section */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 1 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: '0.9rem' }}>\r\n                    Tags\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box sx={{ pl: 1 }}>\r\n                  <TagsDisplay\r\n                    tags={trade.tags || []}\r\n                    showGroups={true}\r\n                    chipSize=\"medium\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n\r\n          {/* Notes */}\r\n          {trade.notes && (\r\n            <Box>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\r\n                <NoteIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600, display: 'block' }}>\r\n                  Notes\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{\r\n                p: 1.5,\r\n                borderRadius: 1,\r\n                backgroundColor: alpha(theme.palette.background.paper, 0.7),\r\n                \r\n                maxHeight: 'none', // Ensure no max height constraint\r\n                overflow: 'visible' // Prevent scrollbars\r\n              }}>\r\n                <Typography variant=\"body2\" sx={{\r\n                  whiteSpace: 'pre-line',\r\n                  overflow: 'visible', // Prevent scrollbars\r\n                  lineHeight: 1.5 // Slightly increased line height for better readability\r\n                }}>\r\n                  {trade.notes}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n\r\n          {/* Images */}\r\n          {trade.images && trade.images.length > 0 && (\r\n            <Box>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\r\n                <ImageIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600, display: 'block' }}>\r\n                  Images\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{\r\n                width: '100%'\r\n              }}>\r\n                {/* Organize images into rows based on their saved layout */}\r\n                {(() => {\r\n                  // Group images by row\r\n                  const imagesByRow: { [key: number]: TradeImage[] } = {};\r\n\r\n                  // Organize images by row\r\n                  trade.images.forEach(image => {\r\n                    const row = image.row !== undefined ? image.row : 0;\r\n                    if (!imagesByRow[row]) {\r\n                      imagesByRow[row] = [];\r\n                    }\r\n                    imagesByRow[row].push(image);\r\n                  });\r\n\r\n                  const sortedRows = Object.entries(imagesByRow)\r\n                    .sort(([a], [b]) => Number(a) - Number(b))\r\n                    .map(([_, images]) => images);\r\n\r\n                  return sortedRows.map((rowImages, rowIndex) => (\r\n                    <Box\r\n                      key={`row-${rowIndex}`}\r\n                      sx={{\r\n                        display: 'flex',\r\n                        width: '100%',\r\n                        mb: 2,\r\n                        gap: 1 // Add small gap between columns\r\n                      }}\r\n                    >\r\n                      {/* Sort images in the row by column */}\r\n                      {rowImages\r\n                        .sort((a, b) => (a.column || 0) - (b.column || 0))\r\n                        .map((image, colIndex) => (\r\n                          <Box\r\n                            key={`image-${image.id}-${rowIndex}-${colIndex}`}\r\n                            sx={{\r\n                              width: `${image.columnWidth || 100}%`,\r\n                              borderRadius: 1,\r\n                              overflow: 'hidden',\r\n                              position: 'relative'\r\n                            }}\r\n                          >\r\n                            <Box\r\n                              sx={{\r\n                                position: 'relative',\r\n                                '&:hover .overlay': {\r\n                                  opacity: 1\r\n                                },\r\n                                ...(image.width && image.height ? {\r\n                                  paddingTop: `${(image.height / image.width) * 100}%`,\r\n                                  maxHeight: rowImages.length > 1 ? '300px' : 'none',\r\n                                  overflow: 'hidden',\r\n                                  width: '100%',\r\n                                  height: 'auto'\r\n                                } : {})\r\n                              }}\r\n                            >\r\n                              {/* Loading placeholder */}\r\n                              {image.width && image.height && isPendingImage(image) && (\r\n                                <Box\r\n                                  sx={{\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                    backgroundColor: theme => alpha(theme.palette.divider, 0.2),\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    zIndex: 1\r\n                                  }}\r\n                                >\r\n                                  {!isPendingImage(image) && <CircularProgress size={24} color=\"primary\" sx={{ opacity: 0.8 }} />}\r\n                                  \r\n                                </Box>\r\n                              )}\r\n\r\n                              {/* Image container */}\r\n                              <Box\r\n                                sx={{\r\n                                  position: 'absolute',\r\n                                  top: 0,\r\n                                  left: 0,\r\n                                  width: '100%',\r\n                                  height: '100%',\r\n                                  zIndex: 2,\r\n                                  cursor: isPendingImage(image) ? 'default' : 'pointer',\r\n                                  ...(isPendingImage(image) && {\r\n                                    background: (theme) => {\r\n                                      const baseColor = theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.04)';\r\n                                      const shimmerColor = theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.1)';\r\n                                      return `linear-gradient(90deg, ${baseColor} 25%, ${shimmerColor} 50%, ${baseColor} 75%)`;\r\n                                    },\r\n                                    backgroundSize: '200% 100%',\r\n                                    animation: `${shimmer} 1.5s infinite linear`,\r\n                                    willChange: 'background-position',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center'\r\n                                  })\r\n                                }}\r\n                              >\r\n                                {isPendingImage(image) ? (\r\n                                  <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>\r\n                                    <CircularProgress size={24} color=\"primary\" />\r\n                                    <Typography variant=\"caption\" sx={{ color: 'text.secondary', fontWeight: 500 }}>\r\n                                      Uploading...\r\n                                    </Typography>\r\n                                  </Box>\r\n                                ) : (\r\n                                  <img\r\n                                    src={image.url}\r\n                                    alt={image.caption || `Trade Image`}\r\n                                    style={{\r\n                                      width: '100%',\r\n                                      maxHeight: rowImages.length > 1 ? '300px' : 'none',\r\n                                      objectFit: 'contain',\r\n                                      position: image.width && image.height ? 'absolute' : 'relative',\r\n                                      top: 0,\r\n                                      left: 0,\r\n                                      height: image.width && image.height ? '100%' : 'auto'\r\n                                    }}\r\n                                    onLoad={(e) => {\r\n                                      const target = e.target as HTMLImageElement;\r\n                                      target.style.opacity = '1';\r\n\r\n                                      const parent = target.parentElement?.parentElement;\r\n                                      if (parent) {\r\n                                        const placeholders = parent.querySelectorAll('[role=\"progressbar\"]');\r\n                                        placeholders.forEach(placeholder => {\r\n                                          (placeholder as HTMLElement).style.display = 'none';\r\n                                        });\r\n                                      }\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                              </Box>\r\n\r\n                              {/* Zoom overlay */}\r\n                              {!isPendingImage(image) && (\r\n                                <Box\r\n                                  className=\"overlay\"\r\n                                  sx={{\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    right: 0,\r\n                                    bottom: 0,\r\n                                    backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    opacity: 0,\r\n                                    transition: 'opacity 0.2s ease-in-out',\r\n                                    cursor: 'pointer',\r\n                                    zIndex: 3\r\n                                  }}\r\n                                  onClick={() => setZoomedImage(image.url)}\r\n                                >\r\n                                  <ZoomInIcon sx={{ color: 'white', fontSize: 32 }} />\r\n                                </Box>\r\n                              )}\r\n                            </Box>\r\n                            {image.caption && (\r\n                              <Box sx={{\r\n                                p: 1,\r\n                                borderTop: `1px solid ${theme.palette.divider}`,\r\n                                backgroundColor: alpha(theme.palette.background.paper, 0.7),\r\n                                maxHeight: 'none', // Ensure no max height constraint\r\n                                overflow: 'visible' // Prevent scrollbars\r\n                              }}>\r\n                                <Typography variant=\"caption\" sx={{\r\n                                  color: 'text.secondary',\r\n                                  display: 'block',\r\n                                  whiteSpace: 'pre-line',\r\n                                  fontSize: '0.7rem', // Even smaller font size for captions in view mode\r\n                                  lineHeight: 1.3, // Tighter line height for better readability\r\n                                  overflow: 'visible' // Prevent scrollbars\r\n                                }}>\r\n                                  {image.caption}\r\n                                </Typography>\r\n                              </Box>\r\n                            )}\r\n                          </Box>\r\n                        ))\r\n                      }\r\n                    </Box>\r\n                  ));\r\n                })()\r\n                }\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Stack>\r\n      </Box>\r\n    </AnimatedDropdown>\r\n  );\r\n};\r\n\r\nexport default TradeDetailExpanded;\r\n","import React, { useMemo, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  useTheme,\r\n  TextField,\r\n  Autocomplete,\r\n  Chip\r\n} from '@mui/material';\r\nimport {\r\n  getTagChipStyles,\r\n  formatTagForDisplay,\r\n  isGroupedTag,\r\n  getTagGroup,\r\n  getUniqueTagGroups,\r\n  filterTagsByGroup\r\n} from '../utils/tagColors';\r\nimport { BaseDialog, SelectInput } from './common';\r\n\r\ninterface TagFilterDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n  allTags: string[];\r\n  selectedTags: string[];\r\n  onTagsChange: (tags: string[]) => void;\r\n  showClearButton?: boolean;\r\n  showApplyButton?: boolean;\r\n}\r\n\r\nconst TagFilterDialog: React.FC<TagFilterDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  title = 'Filter by Tags',\r\n  allTags,\r\n  selectedTags,\r\n  onTagsChange,\r\n  showClearButton = true,\r\n  showApplyButton = true\r\n}) => {\r\n  const theme = useTheme();\r\n  const [selectedTagGroup, setSelectedTagGroup] = useState<string>('');\r\n\r\n  // Get all unique tag groups\r\n  const tagGroups = useMemo(() => {\r\n    return getUniqueTagGroups(allTags);\r\n  }, [allTags]);\r\n\r\n  // Filter tags by selected group\r\n  const filteredTags = useMemo(() => {\r\n    if (!selectedTagGroup) return allTags;\r\n    return filterTagsByGroup(allTags, selectedTagGroup);\r\n  }, [allTags, selectedTagGroup]);\r\n\r\n  const handleClearTags = () => {\r\n    onTagsChange([]);\r\n  };\r\n\r\n  const dialogTitle = (\r\n    <Typography variant=\"h6\">{title}</Typography>\r\n  );\r\n\r\n  const dialogActions = (showClearButton || showApplyButton) ? (\r\n    <Box>\r\n      {showClearButton && (\r\n        <Button onClick={handleClearTags} color=\"inherit\">\r\n          Clear All\r\n        </Button>\r\n      )}\r\n      {showApplyButton && (\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Apply\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  ) : undefined;\r\n\r\n  return (\r\n    <BaseDialog\r\n      open={open}\r\n      onClose={onClose}\r\n      title={dialogTitle}\r\n      actions={dialogActions}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n        {tagGroups.length > 0 && (\r\n          <SelectInput\r\n            label=\"Filter by Tag Group\"\r\n            value={selectedTagGroup}\r\n            onChange={(e) => setSelectedTagGroup(e.target.value as string)}\r\n            options={[\r\n              { value: \"\", label: \"All Tags\" },\r\n              ...tagGroups.map(group => ({ value: group, label: group }))\r\n            ]}\r\n            size=\"small\"\r\n          />\r\n        )}\r\n\r\n        <Autocomplete\r\n          multiple\r\n          options={filteredTags}\r\n          value={selectedTags}\r\n          onChange={(_, newValue) => onTagsChange(newValue)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Select Tags\"\r\n              placeholder=\"Choose tags to filter\"\r\n              fullWidth\r\n            />\r\n          )}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                label={formatTagForDisplay(option, true)}\r\n                {...getTagProps({ index })}\r\n                sx={getTagChipStyles(option, theme)}\r\n                title={isGroupedTag(option) ? `Group: ${getTagGroup(option)}` : undefined}\r\n              />\r\n            ))\r\n          }\r\n          renderOption={(props, option) => (\r\n            <li {...props}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                {isGroupedTag(option) && (\r\n                  <Chip\r\n                    label={getTagGroup(option)}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      ...getTagChipStyles(option, theme),\r\n                      height: '18px',\r\n                      fontSize: '0.7rem'\r\n                    }}\r\n                  />\r\n                )}\r\n                {formatTagForDisplay(option, true)}\r\n              </Box>\r\n            </li>\r\n          )}\r\n        />\r\n      </Box>\r\n\r\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n        {selectedTags.length > 0\r\n          ? `Selected ${selectedTags.length} tag${selectedTags.length > 1 ? 's' : ''}`\r\n          : 'Select tags to filter. When no tags are selected, all items will be shown.'}\r\n      </Typography>\r\n    </BaseDialog>\r\n  );\r\n};\r\n\r\nexport default TagFilterDialog;\r\n","import React from 'react';\r\nimport { Box, Typography, useTheme, Tooltip } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { CheckCircle, Flag } from '@mui/icons-material';\r\n\r\ninterface TargetBadgeProps {\r\n  progress: number;\r\n  isMet: boolean;\r\n  tooltipText?: string;\r\n}\r\n\r\nconst TargetBadge: React.FC<TargetBadgeProps> = ({\r\n  progress,\r\n  isMet,\r\n  tooltipText = 'Shows progress towards your target goal'\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const badgeContent = (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      bgcolor:  isMet ? alpha(theme.palette.success.main, 0.9) : alpha(theme.palette.primary.main, 0.1),\r\n      color:  isMet ? 'white' : 'primary.main',\r\n      borderRadius: '12px',\r\n      width: 'auto',\r\n      height: 22,\r\n      ml: 1,\r\n      px: 0.8,\r\n      border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`\r\n    }}>\r\n      {isMet ? (\r\n        <CheckCircle sx={{ fontSize: '0.875rem', mr: 0.3 }} />\r\n      ) : (\r\n        <Flag sx={{ fontSize: '0.875rem', mr: 0.3 }} />\r\n      )}\r\n      <Typography variant=\"caption\" sx={{ fontWeight: 600, fontSize: isMet ? '0.5rem' : '0.7rem' }}>\r\n        {Math.max(progress, 0).toFixed(0)}%\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Tooltip title={tooltipText} arrow placement=\"top\">\r\n      {badgeContent}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default TargetBadge;\r\n","/**\r\n * Format a numeric value as currency\r\n * @param amount The amount to format\r\n * @returns Formatted currency string\r\n */\r\nexport const formatValue = (amount: number): string => {\r\n  const absAmount = Math.abs(amount);\r\n  if (absAmount >= 1000) {\r\n    return `$${(amount / 1000).toFixed(1)}k`;\r\n  }\r\n  return `$${amount.toFixed(2)}`;\r\n};\r\n\r\n/**\r\n * Format a numeric value as currency with full precision\r\n * @param amount The amount to format\r\n * @returns Formatted currency string\r\n */\r\nexport const formatCurrency = (amount: number): string => {\r\n  return `$${amount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\r\n};\r\n\r\n/**\r\n * Format a percentage value\r\n * @param value The percentage value to format\r\n * @param decimals Number of decimal places\r\n * @returns Formatted percentage string\r\n */\r\nexport const formatPercentage = (value: number, decimals: number = 1): string => {\r\n  return `${value.toFixed(decimals)}%`;\r\n};\r\n\r\n/**\r\n * Format a date in a consistent way\r\n * @param date The date to format\r\n * @param format The format to use (short, medium, long)\r\n * @returns Formatted date string\r\n */\r\nexport const formatDate = (date: Date, format: 'short' | 'medium' | 'long' = 'medium'): string => {\r\n  switch (format) {\r\n    case 'short':\r\n      return date.toLocaleDateString(undefined, { month: 'numeric', day: 'numeric' });\r\n    case 'medium':\r\n      return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' });\r\n    case 'long':\r\n      return date.toLocaleDateString(undefined, { month: 'long', day: 'numeric', year: 'numeric' });\r\n    default:\r\n      return date.toLocaleDateString();\r\n  }\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  Box,\r\n  IconButton,\r\n  useTheme\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  ZoomIn as ZoomInIcon,\r\n  RestartAlt as RestartAltIcon\r\n} from '@mui/icons-material';\r\n\r\ninterface ImageZoomDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  imageUrl: string | null;\r\n}\r\n\r\nconst ImageZoomDialog: React.FC<ImageZoomDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  imageUrl\r\n}) => {\r\n  const theme = useTheme();\r\n  const [scale, setScale] = useState(1);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const imageRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleWheel = (e: React.WheelEvent) => {\r\n    e.preventDefault();\r\n    const delta = e.deltaY;\r\n    const newScale = delta > 0\r\n      ? Math.max(1, scale - 0.1)\r\n      : Math.min(3, scale + 0.1);\r\n\r\n    setScale(newScale);\r\n  };\r\n\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    if (scale > 1) {\r\n      e.preventDefault();\r\n      setIsDragging(true);\r\n      setDragStart({\r\n        x: e.clientX - position.x,\r\n        y: e.clientY - position.y\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging || scale <= 1) return;\r\n\r\n    e.preventDefault();\r\n    const newX = e.clientX - dragStart.x;\r\n    const newY = e.clientY - dragStart.y;\r\n\r\n    if (imageRef.current && containerRef.current) {\r\n      const containerRect = containerRef.current.getBoundingClientRect();\r\n      const imageRect = imageRef.current.getBoundingClientRect();\r\n\r\n      const maxX = (imageRect.width * (scale - 1)) / 2;\r\n      const maxY = (imageRect.height * (scale - 1)) / 2;\r\n\r\n      const boundedX = Math.min(Math.max(-maxX, newX), maxX);\r\n      const boundedY = Math.min(Math.max(-maxY, newY), maxY);\r\n\r\n      setPosition({\r\n        x: boundedX,\r\n        y: boundedY\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    setScale(1);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  // Reset zoom when image changes\r\n  useEffect(() => {\r\n    if (open) {\r\n      resetZoom();\r\n    }\r\n  }, [open, imageUrl]);\r\n\r\n  // Add event listeners for mouse up on document level\r\n  useEffect(() => {\r\n    const handleGlobalMouseUp = () => {\r\n      setIsDragging(false);\r\n    };\r\n\r\n    document.addEventListener('mouseup', handleGlobalMouseUp);\r\n    return () => {\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          boxShadow: 'none',\r\n          backgroundColor: 'transparent',\r\n          overflow: 'hidden',\r\n          maxWidth: '80%',\r\n          '& .MuiDialogContent-root': {\r\n            '&::-webkit-scrollbar': {\r\n              width: '8px',\r\n              height: '8px'\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              background: 'transparent'\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              background: theme.palette.mode === 'dark'\r\n                ? 'rgba(255, 255, 255, 0.2)'\r\n                : 'rgba(0, 0, 0, 0.2)',\r\n              borderRadius: '4px',\r\n              '&:hover': {\r\n                background: theme.palette.mode === 'dark'\r\n                  ? 'rgba(255, 255, 255, 0.3)'\r\n                  : 'rgba(0, 0, 0, 0.3)'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {imageUrl && (\r\n        <Box\r\n          ref={containerRef}\r\n          sx={{\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '80vh',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            overflow: 'hidden',\r\n            cursor: scale > 1 ? 'grab' : 'default',\r\n            '&:active': {\r\n              cursor: scale > 1 ? 'grabbing' : 'default'\r\n            }\r\n          }}\r\n          onWheel={handleWheel}\r\n          onMouseDown={handleMouseDown}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: 'relative',\r\n              transform: `scale(${scale}) translate(${position.x}px, ${position.y}px)`,\r\n              transition: isDragging ? 'none' : 'transform 0.1s ease-out'\r\n            }}\r\n          >\r\n            <img\r\n              ref={imageRef}\r\n              src={imageUrl}\r\n              alt=\"Trade\"\r\n              style={{\r\n                maxWidth: '100%',\r\n                maxHeight: '100%',\r\n                objectFit: 'contain',\r\n                userSelect: 'none',\r\n                pointerEvents: 'none'\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 16,\r\n              right: 16,\r\n              display: 'flex',\r\n              gap: 1,\r\n              backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n              borderRadius: 1,\r\n              p: 0.5\r\n            }}\r\n          >\r\n            <IconButton\r\n              onClick={() => setScale(Math.max(1, scale - 0.1))}\r\n              disabled={scale <= 1}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <ZoomInIcon sx={{ transform: 'rotate(45deg)' }} />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => setScale(Math.min(3, scale + 0.1))}\r\n              disabled={scale >= 3}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <ZoomInIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={resetZoom}\r\n              disabled={scale === 1}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <RestartAltIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={onClose}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ImageZoomDialog;\r\n","import React from 'react';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  ReferenceLine\r\n} from 'recharts';\r\nimport { Box, Paper, Typography, useTheme } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { format } from 'date-fns';\r\nimport { Trade } from '../../types/trade';\r\nimport { formatValue } from '../../utils/formatters';\r\n\r\ninterface CumulativePnLChartProps {\r\n  chartData: any[];\r\n  targetValue: number | null;\r\n  monthlyTarget?: number;\r\n  setMultipleTradesDialog: (dialogState: any) => void;\r\n  timePeriod: 'month' | 'year' | 'all';\r\n}\r\n\r\n// Custom Y-axis tick component\r\nconst CustomYAxisTick = (props: any) => {\r\n  const { x, y, payload } = props;\r\n  const value = payload.value;\r\n  const formattedValue = formatValue(value);\r\n  \r\n  return (\r\n    <g transform={`translate(${x},${y})`}>\r\n      <text x={0} y={0} dy={5} textAnchor=\"end\" fill=\"#666\" fontSize={12}>\r\n        {formattedValue}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\n// Custom tooltip component\r\nconst CustomTooltip = ({ active, payload, label, type }: any) => {\r\n  const theme = useTheme();\r\n  \r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    \r\n    return (\r\n      <Paper sx={{ p: 1.5, boxShadow: theme.shadows[3] }}>\r\n        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n          {label}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: data.dailyChange > 0 ? '#4caf50' : data.dailyChange < 0 ? '#f44336' : 'text.secondary',\r\n            fontWeight: 'bold'\r\n          }}\r\n        >\r\n          {formatValue(data.dailyChange)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Cumulative P&L: {formatValue(data.cumulativePnL)}\r\n        </Typography>\r\n        {data.trades && data.trades.length > 0 && (\r\n          <Typography variant=\"body2\" sx={{ color: theme.palette.primary.main, fontSize: '0.75rem', mt: 0.5 }}>\r\n            Click to view {data.trades.length} trade{data.trades.length > 1 ? 's' : ''}\r\n          </Typography>\r\n        )}\r\n      </Paper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst CumulativePnLChart: React.FC<CumulativePnLChartProps> = ({\r\n  chartData,\r\n  targetValue,\r\n  monthlyTarget,\r\n  setMultipleTradesDialog,\r\n  timePeriod\r\n}) => {\r\n  const theme = useTheme();\r\n  \r\n  // Define colors\r\n  const COLORS = {\r\n    win: '#4caf50',\r\n    loss: '#f44336',\r\n    zero: '#9e9e9e',\r\n    breakEven: '#ff9800'\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\">Cumulative P&L</Typography>\r\n        {monthlyTarget && targetValue !== null && (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              bgcolor: alpha(theme.palette.primary.main, 0.1),\r\n              px: 1.5,\r\n              py: 0.5,\r\n              borderRadius: 1,\r\n              fontSize: '0.875rem'\r\n            }}\r\n          >\r\n            Target: {monthlyTarget}% (${targetValue?.toFixed(2)})\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <AreaChart data={chartData}>\r\n          <defs>\r\n            <linearGradient id=\"colorPnLWin\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor={COLORS.win} stopOpacity={0.2} />\r\n              <stop offset=\"95%\" stopColor={COLORS.win} stopOpacity={0} />\r\n            </linearGradient>\r\n            <linearGradient id=\"colorPnLLoss\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor={COLORS.loss} stopOpacity={0.2} />\r\n              <stop offset=\"95%\" stopColor={COLORS.loss} stopOpacity={0} />\r\n            </linearGradient>\r\n          </defs>\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={{\r\n              fill: theme.palette.text.secondary,\r\n              fontSize: timePeriod === 'year' ? 8 : 12\r\n            }}\r\n          />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={<CustomYAxisTick />}\r\n          />\r\n          <Tooltip content={(props) => <CustomTooltip {...props} type=\"cumulative\" />} />\r\n          {targetValue !== null && (\r\n            <>\r\n              <ReferenceLine\r\n                y={targetValue}\r\n                stroke={theme.palette.primary.main}\r\n                strokeDasharray=\"4 4\"\r\n                strokeWidth={2}\r\n              />\r\n              {/* Add a semi-transparent area above the target line */}\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"cumulativePnL\"\r\n                stroke=\"none\"\r\n                fill={theme.palette.primary.main}\r\n                fillOpacity={0.05}\r\n                baseValue={targetValue}\r\n              />\r\n            </>\r\n          )}\r\n          <ReferenceLine y={0} stroke={COLORS.zero} strokeDasharray=\"3 3\" />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"cumulativePnL\"\r\n            stroke={COLORS.win}\r\n            fill=\"url(#colorPnLWin)\"\r\n            strokeWidth={2}\r\n            name=\"Cumulative P&L\"\r\n            style={{ cursor: 'pointer' }}\r\n            activeDot={(props) => {\r\n              const { cx, cy, index } = props;\r\n              return (\r\n                <circle\r\n                  cx={cx}\r\n                  cy={cy}\r\n                  r={6}\r\n                  stroke={theme.palette.background.paper}\r\n                  strokeWidth={2}\r\n                  fill={theme.palette.primary.main}\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    console.log('Dot clicked, Index:', index);\r\n                    const dataPoint = chartData[index];\r\n                    if (dataPoint && dataPoint.trades && dataPoint.trades.length > 0) {\r\n                      const formattedDate = format(dataPoint.fullDate, 'MMMM d, yyyy');\r\n                      setMultipleTradesDialog({\r\n                        open: true,\r\n                        trades: dataPoint.trades,\r\n                        date: formattedDate,\r\n                        expandedTradeId: dataPoint.trades.length === 1 ? dataPoint.trades[0].id : null\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            dot={{\r\n              r: 3,\r\n              fill: COLORS.win,\r\n              stroke: theme.palette.background.paper,\r\n              strokeWidth: 1\r\n            }}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CumulativePnLChart;\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n  Cell\r\n} from 'recharts';\r\nimport { Paper, Typography, useTheme } from '@mui/material';\r\nimport { format } from 'date-fns'; \r\n import { formatValue } from '../../utils/formatters';\r\n\r\ninterface DailyPnLChartProps {\r\n  chartData: any[];\r\n  drawdownViolationValue: number;\r\n  setMultipleTradesDialog: (dialogState: any) => void;\r\n  timePeriod: 'month' | 'year' | 'all';\r\n}\r\n\r\n// Custom Y-axis tick component for daily P&L\r\nconst CustomDailyPnLYAxisTick = (props: any) => {\r\n  const { x, y, payload } = props;\r\n  const value = payload.value;\r\n  const formattedValue = formatValue(value);\r\n  \r\n  return (\r\n    <g transform={`translate(${x},${y})`}>\r\n      <text x={0} y={0} dy={5} textAnchor=\"end\" fill=\"#666\" fontSize={12}>\r\n        {formattedValue}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\n// Custom tooltip component\r\nconst CustomTooltip = ({ active, payload, label, type }: any) => {\r\n  const theme = useTheme();\r\n  \r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    \r\n    return (\r\n      <Paper sx={{ p: 1.5, boxShadow: theme.shadows[3] }}>\r\n        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n          {label}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: data.isWin ? '#4caf50' : data.isLoss ? '#f44336' : 'text.secondary',\r\n            fontWeight: 'bold'\r\n          }}\r\n        >\r\n          {formatValue(data.pnl)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {data.isWin ? 'Win' : data.isLoss ? 'Loss' : 'Break Even'}\r\n        </Typography>\r\n        {data.trades && data.trades.length > 0 && (\r\n          <Typography variant=\"body2\" sx={{ color: theme.palette.primary.main, fontSize: '0.75rem', mt: 0.5 }}>\r\n            Click to view {data.trades.length} trade{data.trades.length > 1 ? 's' : ''}\r\n          </Typography>\r\n        )}\r\n      </Paper>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst DailyPnLChart: React.FC<DailyPnLChartProps> = ({\r\n  chartData,\r\n  drawdownViolationValue,\r\n  setMultipleTradesDialog,\r\n  timePeriod\r\n}) => {\r\n  const theme = useTheme();\r\n  \r\n  // Define colors\r\n  const COLORS = {\r\n    win: '#4caf50',\r\n    loss: '#f44336',\r\n    zero: '#9e9e9e',\r\n    breakEven: '#ff9800'\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\r\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n        Daily P&L\r\n      </Typography>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={{\r\n              fill: theme.palette.text.secondary,\r\n              fontSize: timePeriod === 'year' ? 8 : 12\r\n            }}\r\n          />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={<CustomDailyPnLYAxisTick />}\r\n          />\r\n          <Tooltip content={(props) => <CustomTooltip {...props} type=\"daily\" />} />\r\n          <ReferenceLine y={0} stroke={COLORS.zero} strokeDasharray=\"3 3\" />\r\n          <ReferenceLine\r\n            y={drawdownViolationValue}\r\n            stroke={theme.palette.error.main}\r\n            strokeDasharray=\"3 3\"\r\n            strokeWidth={2}\r\n            label={{\r\n              position: 'right',\r\n              value: `Max Drawdown: ${formatValue(drawdownViolationValue)}`,\r\n              fill: theme.palette.error.main,\r\n              fontSize: 12,\r\n              fontWeight: 'bold'\r\n            }}\r\n          />\r\n          <Bar\r\n            dataKey=\"pnl\"\r\n            name=\"Daily P&L\"\r\n            radius={[4, 4, 0, 0]}\r\n            onClick={(data: any) => {\r\n              console.log('Bar clicked:', data);\r\n              if (data && data.payload) {\r\n                const payload = data.payload;\r\n                if (payload.trades && payload.trades.length > 0) {\r\n                  const formattedDate = format(payload.fullDate, 'MMMM d, yyyy');\r\n                  setMultipleTradesDialog({\r\n                    open: true,\r\n                    trades: payload.trades,\r\n                    date: formattedDate,\r\n                    expandedTradeId: payload.trades.length === 1 ? payload.trades[0].id : null\r\n                  });\r\n                }\r\n              }\r\n            }}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {chartData.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={entry.isWin ? COLORS.win : entry.isLoss ? COLORS.loss : COLORS.breakEven}\r\n                fillOpacity={0.8}\r\n              />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DailyPnLChart;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  Tooltip\r\n} from 'recharts';\r\nimport { Box, Paper, Typography, useTheme, Button } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { PieChart as PieChartIcon, DonutLarge as DonutLargeIcon } from '@mui/icons-material';\r\nimport { getTagColor } from '../../utils/tagColors';\r\n\r\nimport TagFilterDialog from '../TagFilterDialog';\r\n\r\ninterface WinLossDistributionProps {\r\n  winLossData: any[];\r\n  comparisonWinLossData?: any[] | null;\r\n  allTags: string[];\r\n  comparisonTags: string[];\r\n  setComparisonTags: (tags: string[]) => void;\r\n  onPieClick?: (category: string) => void;\r\n  tagStats?: { tag: string; totalTrades: number }[];\r\n}\r\n\r\nconst WinLossDistribution: React.FC<WinLossDistributionProps> = ({\r\n  winLossData,\r\n  comparisonWinLossData,\r\n  allTags,\r\n  comparisonTags,\r\n  setComparisonTags,\r\n  onPieClick,\r\n  tagStats = []\r\n}) => {\r\n  const theme = useTheme();\r\n  const [comparisonTagsDialogOpen, setComparisonTagsDialogOpen] = useState(false);\r\n\r\n  // Add a style element to remove focus outlines from SVG elements\r\n  React.useEffect(() => {\r\n    // Create a style element\r\n    const style = document.createElement('style');\r\n    // Add CSS to remove focus outlines from SVG elements\r\n    style.innerHTML = `\r\n      .recharts-sector:focus,\r\n      .recharts-sector:focus-visible,\r\n      .recharts-pie:focus,\r\n      .recharts-pie:focus-visible,\r\n      .recharts-pie-sector:focus,\r\n      .recharts-pie-sector:focus-visible,\r\n      .recharts-layer:focus,\r\n      .recharts-layer:focus-visible,\r\n      .recharts-surface:focus,\r\n      .recharts-surface:focus-visible {\r\n        outline: none !important;\r\n        stroke: none !important;\r\n        stroke-width: 0 !important;\r\n        box-shadow: none !important;\r\n      }\r\n\r\n      /* Target all SVG elements in the chart */\r\n      .recharts-wrapper svg *:focus,\r\n      .recharts-wrapper svg *:focus-visible,\r\n      .win-loss-chart-container svg *:focus,\r\n      .win-loss-chart-container svg *:focus-visible {\r\n        outline: none !important;\r\n        stroke-width: 0 !important;\r\n      }\r\n    `;\r\n    // Append the style element to the document head\r\n    document.head.appendChild(style);\r\n\r\n    // Clean up the style element when the component unmounts\r\n    return () => {\r\n      document.head.removeChild(style);\r\n    };\r\n  }, []);\r\n\r\n  // Define colors with enhanced visual appeal\r\n  const COLORS = {\r\n    win: theme.palette.mode === 'dark' ? '#66bb6a' : '#4caf50', // Slightly lighter green in dark mode\r\n    loss: theme.palette.mode === 'dark' ? '#ef5350' : '#f44336', // Slightly lighter red in dark mode\r\n    zero: theme.palette.mode === 'dark' ? '#bdbdbd' : '#9e9e9e', // Lighter gray in dark mode\r\n    breakEven: theme.palette.mode === 'dark' ? '#ffb74d' : '#ff9800' // Lighter orange in dark mode\r\n  };\r\n\r\n  // Define chart styling\r\n  const chartStyle = {\r\n    outerRadius: 100,\r\n    innerRadius: 60,\r\n    paddingAngle: 3,\r\n    cornerRadius: 4,\r\n    activeFillOpacity: 0.9,\r\n    hoverShadowColor: theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)',\r\n    labelFontSize: '0.85rem',\r\n    labelFontWeight: 500\r\n  };\r\n\r\n  // Generate tag distribution data when in tag distribution mode\r\n  const generateTagDistributionData = () => {\r\n    if (!comparisonTags || comparisonTags.length === 0) return [];\r\n\r\n    // If we don't have any win/loss data, we can't generate tag distribution\r\n    if (!comparisonWinLossData || !comparisonWinLossData.some(d => d.value > 0)) {\r\n      return [];\r\n    }\r\n\r\n    // Create a map to store the count for each tag\r\n    const tagCounts = new Map<string, number>();\r\n\r\n    // Use the tagStats from the parent component if available\r\n    if (tagStats && tagStats.length > 0) {\r\n      // Filter to only include the selected comparison tags\r\n      const filteredTagStats = tagStats.filter(stat => comparisonTags.includes(stat.tag));\r\n\r\n      // If we have stats for the selected tags, use them\r\n      if (filteredTagStats.length > 0) {\r\n        filteredTagStats.forEach(stat => {\r\n          tagCounts.set(stat.tag, stat.totalTrades);\r\n        });\r\n      } else {\r\n        // Fallback if we don't have stats for the selected tags\r\n        comparisonTags.forEach(tag => {\r\n          // Use a hash of the tag name to generate a consistent value\r\n          const hash = tag.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\r\n          // Generate a value between 1 and 10 based on the hash\r\n          const value = (hash % 10) + 1;\r\n          tagCounts.set(tag, value);\r\n        });\r\n      }\r\n    } else {\r\n      // Fallback if we don't have any tag stats\r\n      comparisonTags.forEach(tag => {\r\n        // Use a hash of the tag name to generate a consistent value\r\n        const hash = tag.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\r\n        // Generate a value between 1 and 10 based on the hash\r\n        const value = (hash % 10) + 1;\r\n        tagCounts.set(tag, value);\r\n      });\r\n    }\r\n\r\n    // Convert to the format needed for the pie chart\r\n    return Array.from(tagCounts.entries())\r\n      .map(([tag, count]) => ({\r\n        name: tag,\r\n        value: count\r\n      }));\r\n  };\r\n\r\n  // Get the appropriate data based on whether tags are selected\r\n  const chartData = comparisonTags.length > 0\r\n    ? generateTagDistributionData()\r\n    : winLossData;\r\n\r\n  return (\r\n    <Paper\r\n      elevation={theme.palette.mode === 'dark' ? 2 : 1}\r\n      sx={{\r\n        p: 3,\r\n        borderRadius: 2,\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        bgcolor: theme.palette.background.paper,\r\n      }}>\r\n      <Box sx={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        mb: 3,\r\n        pb: 1.5,\r\n      }}>\r\n        <Typography variant=\"h6\" sx={{\r\n           \r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 1\r\n        }}>\r\n          {comparisonTags.length > 0 ? (\r\n            <>\r\n              \r\n              Tag Distribution\r\n            </>\r\n          ) : (\r\n            <>\r\n             \r\n              Win/Loss Distribution\r\n            </>\r\n          )}\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          onClick={() => setComparisonTagsDialogOpen(true)}\r\n          sx={{ textTransform: 'none' }}\r\n        >\r\n          {comparisonTags.length > 0 ? `Compare: ${comparisonTags.length} tags` : 'Compare Tags'}\r\n        </Button>\r\n        <TagFilterDialog\r\n          open={comparisonTagsDialogOpen}\r\n          onClose={() => setComparisonTagsDialogOpen(false)}\r\n          title=\"Select Tags to Compare\"\r\n          allTags={allTags}\r\n          selectedTags={comparisonTags}\r\n          onTagsChange={(tags) => setComparisonTags(tags)}\r\n          showApplyButton={true}\r\n          showClearButton={true}\r\n        />\r\n      </Box>\r\n      <Box sx={{ flex: 1, minHeight: 300 }} className=\"win-loss-chart-container\">\r\n        {/* Show message when no data is available */}\r\n        {comparisonTags.length > 0 && chartData.length === 0 ? (\r\n          <Box sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '100%',\r\n            flexDirection: 'column',\r\n            gap: 2\r\n          }}>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              No trades found with the selected tags\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              Try selecting different tags for comparison\r\n            </Typography>\r\n          </Box>\r\n        ) : (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart\r\n              style={{ outline: 'none' }}\r\n              tabIndex={-1}\r\n              margin={{ top: 5, right: 5, bottom: 5, left: 5 }}\r\n            >\r\n              <Tooltip\r\n                content={({ active, payload }) => {\r\n                  if (active && payload && payload.length) {\r\n                    const data = payload[0].payload;\r\n                    return (\r\n                      <Paper sx={{ p: 1.5, boxShadow: theme.shadows[3] }}>\r\n                        <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n                          {data.name}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          sx={{\r\n                            color: comparisonTags.length > 0\r\n                              ? getTagColor(data.name)\r\n                              : data.name === 'Wins'\r\n                                ? COLORS.win\r\n                                : data.name === 'Losses'\r\n                                  ? COLORS.loss\r\n                                  : COLORS.breakEven,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        >\r\n                          {data.value} trade{data.value !== 1 ? 's' : ''}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          {(data.value / chartData.reduce((sum, item) => sum + item.value, 0) * 100).toFixed(1)}% of total\r\n                        </Typography>\r\n                        {onPieClick && (\r\n                          <Typography variant=\"body2\" sx={{ color: theme.palette.primary.main, fontSize: '0.75rem', mt: 0.5 }}>\r\n                            Click to view trades\r\n                          </Typography>\r\n                        )}\r\n                      </Paper>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n              <Pie\r\n                data={chartData}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                outerRadius={chartStyle.outerRadius}\r\n                strokeWidth={0}\r\n                innerRadius={chartStyle.innerRadius}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                label={({ name, percent }) => {\r\n                  // Only show labels for segments with significant percentage\r\n                  if (percent < 0.05) return null;\r\n                  return `${name} ${(percent * 100).toFixed(0)}%`;\r\n                }}\r\n                paddingAngle={chartStyle.paddingAngle}\r\n                cornerRadius={chartStyle.cornerRadius}\r\n                onClick={(data) => {\r\n                  if (onPieClick) {\r\n                    onPieClick(data.name);\r\n                  }\r\n                }}\r\n                cursor={'pointer'}\r\n                style={{\r\n                  outline: 'none',\r\n                  filter: 'drop-shadow(0px 2px 5px rgba(0,0,0,0.1))'\r\n                }}\r\n                tabIndex={-1}\r\n              >\r\n                {chartData.map((entry, index) => {\r\n                  // Determine the fill color based on whether we're showing tags or win/loss\r\n                  let fillColor;\r\n                  if (comparisonTags.length > 0) {\r\n                    // For tag distribution, use the tag's color from the tagColors utility\r\n                    fillColor = getTagColor(entry.name);\r\n                  } else {\r\n                    // For win/loss distribution, use the predefined colors\r\n                    fillColor = entry.name === 'Wins' ? COLORS.win :\r\n                               entry.name === 'Losses' ? COLORS.loss :\r\n                               COLORS.breakEven;\r\n                  }\r\n\r\n                  return (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={fillColor}\r\n                      strokeWidth={1}\r\n                      stroke={theme.palette.background.paper}\r\n                      style={{\r\n                        outline: 'none',\r\n                        transition: 'opacity 0.3s'\r\n                      }}\r\n                    />\r\n                  );\r\n                })}\r\n              </Pie>\r\n              <Legend\r\n                verticalAlign=\"bottom\"\r\n                align=\"center\"\r\n                layout=\"horizontal\"\r\n                iconSize={12}\r\n                iconType=\"circle\"\r\n                wrapperStyle={{\r\n                  paddingTop: 15,\r\n                  fontSize: '0.85rem',\r\n                  fontWeight: 500\r\n                }}\r\n              />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n      </Box>\r\n      {/* Only show this message when we're displaying a chart */}\r\n      {!(comparisonTags.length > 0 && chartData.length === 0) && (\r\n        <Box sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          mt: 2,\r\n          pt: 1.5,\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          marginTop: 'auto'\r\n        }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontWeight: 500 }}>\r\n            {comparisonTags.length > 0\r\n              ? 'Showing distribution of selected tags'\r\n              : 'Showing win/loss distribution for all trades'}\r\n          </Typography>\r\n          {onPieClick && (\r\n            <Box sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: 0.5,\r\n              mt: 0.5,\r\n              bgcolor: alpha(theme.palette.primary.main, 0.08),\r\n              px: 1.5,\r\n              py: 0.5,\r\n              borderRadius: 1\r\n            }}>\r\n              <Typography variant=\"caption\" color=\"primary\" sx={{ fontWeight: 500 }}>\r\n                Click on a segment to view trades\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default WinLossDistribution;\r\n","import React, { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell\n} from 'recharts';\nimport { Box, Paper, Typography, useTheme, Button, alpha, Tooltip as MuiTooltip } from '@mui/material';\nimport { InfoOutlined } from '@mui/icons-material';\nimport { format, isSameMonth } from 'date-fns';\nimport { Trade } from '../../types/trade';\nimport { formatValue } from '../../utils/formatters';\nimport TagFilterDialog from '../TagFilterDialog';\n\ninterface TagPerformanceAnalysisProps {\n  trades: Trade[];\n  selectedDate: Date;\n  timePeriod: 'month' | 'year' | 'all';\n  allTags: string[];\n  primaryTags: string[];\n  secondaryTags: string[];\n  setPrimaryTags: (tags: string[]) => void;\n  setSecondaryTags: (tags: string[]) => void;\n  filteredTagStats: any[];\n  setMultipleTradesDialog: (dialogState: any) => void;\n}\n\nconst TagPerformanceAnalysis: React.FC<TagPerformanceAnalysisProps> = ({\n  trades,\n  selectedDate,\n  timePeriod,\n  allTags,\n  primaryTags,\n  secondaryTags,\n  setPrimaryTags,\n  setSecondaryTags,\n  filteredTagStats,\n  setMultipleTradesDialog\n}) => {\n  const theme = useTheme();\n  const [primaryTagsDialogOpen, setPrimaryTagsDialogOpen] = useState(false);\n  const [secondaryTagsDialogOpen, setSecondaryTagsDialogOpen] = useState(false);\n\n  // Define colors\n  const COLORS = {\n    win: '#4caf50',\n    loss: '#f44336',\n    zero: '#9e9e9e',\n    breakEven: '#ff9800'\n  };\n\n  return (\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Typography variant=\"h6\">Tag Performance Analysis</Typography>\n          <MuiTooltip\n            title=\"Analyze how different tags perform. Select primary tags to filter, and optionally secondary tags to see how they perform in combination.\"\n            arrow\n            placement=\"top\"\n          >\n            <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n          </MuiTooltip>\n        </Box>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setPrimaryTagsDialogOpen(true)}\n            sx={{ textTransform: 'none' }}\n          >\n            {primaryTags.length > 0 ? `Primary: ${primaryTags.length} tags` : 'Select Primary Tags'}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setSecondaryTagsDialogOpen(true)}\n            sx={{ textTransform: 'none' }}\n          >\n            {secondaryTags.length > 0 ? `Secondary: ${secondaryTags.length} tags` : 'Select Secondary Tags'}\n          </Button>\n          <TagFilterDialog\n            open={primaryTagsDialogOpen}\n            onClose={() => setPrimaryTagsDialogOpen(false)}\n            title=\"Select Primary Tags\"\n            allTags={allTags}\n            selectedTags={primaryTags}\n            onTagsChange={(tags) => setPrimaryTags(tags)}\n            showApplyButton={true}\n            showClearButton={true}\n          />\n          <TagFilterDialog\n            open={secondaryTagsDialogOpen}\n            onClose={() => setSecondaryTagsDialogOpen(false)}\n            title=\"Select Secondary Tags\"\n            allTags={allTags}\n            selectedTags={secondaryTags}\n            onTagsChange={(tags) => setSecondaryTags(tags)}\n            showApplyButton={true}\n            showClearButton={true}\n          />\n        </Box>\n      </Box>\n      {primaryTags.length === 0 && secondaryTags.length === 0 ? (\n        <Box sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: 300,\n          bgcolor: alpha(theme.palette.background.paper, 0.4),\n          borderRadius: 2,\n          p: 3\n        }}>\n          <Typography variant=\"h6\" color=\"text.secondary\" sx={{ mb: 1 }}>\n            No Tags Selected\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            Please select primary or secondary tags to view performance analysis.\n          </Typography>\n        </Box>\n      ) : (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart\n            data={filteredTagStats}\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            maxBarSize={50}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            <XAxis\n              dataKey=\"tag\"\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            />\n            <Tooltip\n              content={({ active, payload, label }) => {\n                if (active && payload && payload.length) {\n                  const data = payload[0].payload;\n                  return (\n                    <Paper sx={{ p: 1.5, bgcolor: 'background.paper' }}>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                        {label}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.win }}>\n                        Wins: {data.wins}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.loss }}>\n                        Losses: {data.losses}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Win Rate: {data.winRate}%\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        sx={{\n                          color: data.totalPnL > 0 ? COLORS.win : COLORS.loss,\n                          fontWeight: 'bold',\n                          mt: 0.5\n                        }}\n                      >\n                        P&L: {formatValue(data.totalPnL)}\n                      </Typography>\n                    </Paper>\n                  );\n                }\n                return null;\n              }}\n            />\n            <Legend />\n            <Bar\n              dataKey=\"wins\"\n              name=\"Wins\"\n              stackId=\"trades\"\n              fill={COLORS.win}\n              radius={[4, 4, 0, 0]}\n              onClick={(data) => {\n               if (data && data.payload) {\n                 const tag = data.payload.tag;\n                 const filteredTrades = trades.filter(trade =>\n                   trade.tags?.includes(tag) &&\n                   trade.type === 'win' &&\n                   (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                    timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                    true)\n                 );\n                 if (filteredTrades.length > 0) {\n                   setMultipleTradesDialog({\n                     open: true,\n                     trades: filteredTrades,\n                     date: `Winning trades with tag: ${tag}`,\n                     expandedTradeId: filteredTrades.length === 1 ? filteredTrades[0].id : null\n                   });\n                 }\n               }\n             }}\n             style={{ cursor: 'pointer' }}\n            />\n            <Bar\n              dataKey=\"losses\"\n              name=\"Losses\"\n              stackId=\"trades\"\n              fill={COLORS.loss}\n              radius={[4, 4, 0, 0]}\n              onClick={(data) => {\n               if (data && data.payload) {\n                 const tag = data.payload.tag;\n                 const filteredTrades = trades.filter(trade =>\n                   trade.tags?.includes(tag) &&\n                   trade.type === 'loss' &&\n                   (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                    timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                    true)\n                 );\n                 if (filteredTrades.length > 0) {\n                   setMultipleTradesDialog({\n                     open: true,\n                     trades: filteredTrades,\n                     date: `Losing trades with tag: ${tag}`,\n                     expandedTradeId: filteredTrades.length === 1 ? filteredTrades[0].id : null\n                   });\n                 }\n               }\n             }}\n             style={{ cursor: 'pointer' }}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </Paper>\n  );\n};\n\nexport default TagPerformanceAnalysis;\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  useTheme,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Box,\n  Tooltip\n} from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport { InfoOutlined, TrendingUp, TrendingDown, TrendingFlat } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { Trade } from '../../types/trade';\nimport { formatValue } from '../../utils/formatters';\nimport { scrollbarStyles } from '../../styles/scrollbarStyles';\n\ninterface DailySummaryTableProps {\n  dailySummaryData: any[];\n  trades: Trade[];\n  setMultipleTradesDialog: (dialogState: any) => void;\n}\n\nconst DailySummaryTable: React.FC<DailySummaryTableProps> = ({\n  dailySummaryData,\n  trades,\n  setMultipleTradesDialog\n}) => {\n  const theme = useTheme();\n\n  // Calculate total PnL from dailySummaryData\n  const totalPnL = React.useMemo(() => {\n    if (!dailySummaryData || dailySummaryData.length === 0) return 0;\n    return dailySummaryData.reduce((sum, day) => sum + day.pnl, 0);\n  }, [dailySummaryData]);\n\n  return (\n    <Paper sx={{ p: 3, borderRadius: 2, height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Typography variant=\"h6\">Daily Summary</Typography>\n          <Tooltip\n            title=\"Daily trading summary showing trades, session, and P&L for each day\"\n            arrow\n            placement=\"top\"\n          >\n            <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n          </Tooltip>\n        </Box>\n        {dailySummaryData && dailySummaryData.length > 0 && (\n          <Box sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            bgcolor: alpha(\n              totalPnL > 0\n                ? theme.palette.success.main\n                : totalPnL < 0\n                ? theme.palette.error.main\n                : theme.palette.grey[500],\n              0.1\n            ),\n            px: 1.5,\n            py: 0.5,\n            borderRadius: 2,\n            border: `1px solid ${alpha(\n              totalPnL > 0\n                ? theme.palette.success.main\n                : totalPnL < 0\n                ? theme.palette.error.main\n                : theme.palette.grey[500],\n              0.2\n            )}`,\n          }}>\n          {totalPnL > 0 ? (\n            <TrendingUp sx={{ color: theme.palette.success.main }} />\n          ) : totalPnL < 0 ? (\n            <TrendingDown sx={{ color: theme.palette.error.main }} />\n          ) : (\n            <TrendingFlat sx={{ color: theme.palette.grey[500] }} />\n          )}\n          <Typography\n            variant=\"subtitle1\"\n            sx={{\n              fontWeight: 600,\n              color: totalPnL > 0\n                ? theme.palette.success.main\n                : totalPnL < 0\n                ? theme.palette.error.main\n                : 'text.secondary'\n            }}\n          >\n            Total P&L: {formatValue(totalPnL)}\n          </Typography>\n        </Box>\n        )}\n      </Box>\n      <TableContainer sx={{\n        flex: 1,\n        overflow: 'auto',\n        ...scrollbarStyles(theme)\n      }}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                DATE\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                TRADES\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                SESSION\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                sx={{\n                  fontWeight: 600,\n                  backgroundColor: theme.palette.background.paper,\n                  borderBottom: `2px solid ${theme.palette.divider}`,\n                  color: 'text.secondary'\n                }}\n              >\n                P/L\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {dailySummaryData.map((row) => (\n              <TableRow\n                key={format(row.date, 'yyyy-MM-dd')}\n                onClick={() => {\n                  const dayTrades = trades.filter(trade =>\n                    format(new Date(trade.date), 'yyyy-MM-dd') === format(row.date, 'yyyy-MM-dd')\n                  );\n                  if (dayTrades.length > 0) {\n                    setMultipleTradesDialog({\n                      open: true,\n                      trades: dayTrades,\n                      date: format(row.date, 'dd/MM/yyyy'),\n                      expandedTradeId: dayTrades.length === 1 ? dayTrades[0].id : null\n                    });\n                  }\n                }}\n                sx={{\n                  '&:last-child td, &:last-child th': { border: 0 },\n                  '&:hover': {\n                    backgroundColor: alpha(theme.palette.primary.main, 0.04),\n                    cursor: 'pointer'\n                  },\n                  bgcolor: row.pnl > 0\n                    ? alpha(theme.palette.success.main, 0.05)\n                    : row.pnl < 0\n                    ? alpha(theme.palette.error.main, 0.05)\n                    : 'transparent'\n                }}\n              >\n                <TableCell\n                  sx={{\n                    fontWeight: 500,\n                    color: 'text.primary'\n                  }}\n                >\n                  {format(row.date, 'dd/MM/yyyy')}\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  sx={{\n                    fontWeight: 500,\n                    color: 'text.primary'\n                  }}\n                >\n                  {row.trades}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {row.session ? (\n                    <Typography\n                      sx={{\n                        color: 'text.primary',\n                        fontWeight: 500\n                      }}\n                    >\n                      {row.session}\n                    </Typography>\n                  ) : (\n                    <Typography\n                      sx={{\n                        color: 'text.secondary',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      —\n                    </Typography>\n                  )}\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  sx={{\n                    color: row.pnl > 0\n                      ? theme.palette.success.main\n                      : row.pnl < 0\n                      ? theme.palette.error.main\n                      : 'text.secondary',\n                    fontWeight: 600,\n                    fontSize: '0.875rem'\n                  }}\n                >\n                  {formatValue(row.pnl)}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default DailySummaryTable;\n","import React from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from 'recharts';\nimport { Box, Paper, Typography, useTheme, Stack, alpha } from '@mui/material';\nimport { format, isSameMonth } from 'date-fns';\nimport { Trade } from '../../types/trade';\nimport { formatValue } from '../../utils/formatters';\n\ninterface SessionPerformanceAnalysisProps {\n  sessionStats: any[];\n  trades: Trade[];\n  selectedDate: Date;\n  timePeriod: 'month' | 'year' | 'all';\n  setMultipleTradesDialog: (dialogState: any) => void;\n}\n\nconst SessionPerformanceAnalysis: React.FC<SessionPerformanceAnalysisProps> = ({\n  sessionStats,\n  trades,\n  selectedDate,\n  timePeriod,\n  setMultipleTradesDialog\n}) => {\n  const theme = useTheme();\n\n  // Define colors\n  const COLORS = {\n    win: '#4caf50',\n    loss: '#f44336',\n    zero: '#9e9e9e',\n    breakEven: '#ff9800'\n  };\n\n  return (\n    <Paper sx={{ p: 3, mb: 3, borderRadius: 2 }}>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Session Performance\n      </Typography>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n          {sessionStats.map(session => (\n            <Paper\n              key={session.session}\n              sx={{\n                p: 2,\n                border: `1px solid ${alpha(\n                  session.totalPnL > 0 ? theme.palette.success.main : theme.palette.error.main,\n                  0.1\n                )}`,\n                borderRadius: 2,\n                bgcolor: theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.02)',\n                opacity: session.totalTrades === 0 ? 0.5 : 1,\n                cursor: session.totalTrades > 0 ? 'pointer' : 'default',\n                transition: 'all 0.2s',\n                '&:hover': {\n                  boxShadow: session.totalTrades > 0 ? theme.shadows[2] : 'none',\n                  bgcolor: session.totalTrades > 0 ? alpha(theme.palette.primary.main, 0.05) : theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.02)'\n                }\n              }}\n              onClick={() => {\n                if (session.totalTrades > 0) {\n                  const sessionTrades = trades.filter(trade =>\n                    trade.session === session.session &&\n                    (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                     timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                     true)\n                  );\n                  setMultipleTradesDialog({\n                    open: true,\n                    trades: sessionTrades,\n                    date: `${session.session} Session Trades`,\n                    expandedTradeId: sessionTrades.length === 1 ? sessionTrades[0].id : null\n                  });\n                }\n              }}\n            >\n              <Typography variant=\"subtitle2\" gutterBottom>\n                {session.session}\n              </Typography>\n\n              <Stack spacing={1}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total Trades\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    {session.totalTrades}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Win Rate\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: session.winRate >= 50 ? theme.palette.success.main : theme.palette.error.main\n                    }}\n                  >\n                    {session.winRate.toFixed(1)}%\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    P&L\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: session.totalPnL > 0 ? theme.palette.success.main : theme.palette.error.main,\n                      fontWeight: 500\n                    }}\n                  >\n                    {formatValue(session.totalPnL)}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    Avg P&L per Trade\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      ml: 1,\n                      color: session.averagePnL > 0 ? theme.palette.success.main : theme.palette.error.main\n                    }}\n                  >\n                    {formatValue(session.averagePnL)}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Account %\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      color: session.pnlPercentage > 0 ? theme.palette.success.main : theme.palette.error.main\n                    }}\n                  >\n                    {session.pnlPercentage.toFixed(2)}%\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\n                  <Box\n                    sx={{\n                      flex: session.winners,\n                      height: 6,\n                      bgcolor: COLORS.win,\n                      borderRadius: 1\n                    }}\n                  />\n                  <Box\n                    sx={{\n                      flex: session.losers,\n                      height: 6,\n                      bgcolor: COLORS.loss,\n                      borderRadius: 1\n                    }}\n                  />\n                </Box>\n              </Stack>\n            </Paper>\n          ))}\n        </Box>\n\n        {/* Session Performance Chart */}\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart\n            data={sessionStats}\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            maxBarSize={50}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            <XAxis\n              dataKey=\"session\"\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n              tickFormatter={(value) => `${value}%`}\n            />\n            <Tooltip\n              content={({ active, payload, label }) => {\n                if (active && payload && payload.length) {\n                  const data = payload[0].payload;\n                  return (\n                    <Paper sx={{ p: 1.5, bgcolor: 'background.paper' }}>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                        {label}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.win }}>\n                        Wins: {data.winners}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: COLORS.loss }}>\n                        Losses: {data.losers}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Win Rate: {data.winRate.toFixed(1)}%\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        sx={{\n                          color: data.totalPnL > 0 ? COLORS.win : COLORS.loss,\n                          fontWeight: 'bold',\n                          mt: 0.5\n                        }}\n                      >\n                        P&L: {formatValue(data.totalPnL)}\n                      </Typography>\n                    </Paper>\n                  );\n                }\n                return null;\n              }}\n            />\n            <Bar\n              dataKey=\"winRate\"\n              name=\"Win Rate\"\n              fill={theme.palette.primary.main}\n              radius={[4, 4, 0, 0]}\n              onClick={(data) => {\n                if (data && data.payload) {\n                  const sessionName = data.payload.session;\n                  const sessionTrades = trades.filter(trade =>\n                    trade.session === sessionName &&\n                    (timePeriod === 'month' ? isSameMonth(new Date(trade.date), selectedDate) :\n                     timePeriod === 'year' ? new Date(trade.date).getFullYear() === selectedDate.getFullYear() :\n                     true)\n                  );\n                  if (sessionTrades.length > 0) {\n                    setMultipleTradesDialog({\n                      open: true,\n                      trades: sessionTrades,\n                      date: `${sessionName} Session Trades`,\n                      expandedTradeId: sessionTrades.length === 1 ? sessionTrades[0].id : null\n                    });\n                  }\n                }\n              }}\n              style={{ cursor: 'pointer' }}\n            >\n              {sessionStats.map((entry, index) => (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={entry.winRate >= 50 ? COLORS.win : COLORS.loss}\n                  fillOpacity={0.8}\n                />\n              ))}\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default SessionPerformanceAnalysis;\n","import React from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n  Box,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n  ExpandMore as ExpandIcon,\r\n  ExpandLess as CollapseIcon,\r\n  Balance as RiskIcon\r\n} from '@mui/icons-material';\r\nimport { Trade } from '../../types/trade';\r\nimport TradeDetailExpanded from '../TradeDetailExpanded';\r\nimport { BaseDialog } from '../common';\r\n\r\ninterface TradesDialogProps {\r\n  open: boolean;\r\n  trades: Trade[];\r\n  date: string;\r\n  expandedTradeId: string | null;\r\n  onClose: () => void;\r\n  onTradeExpand: (tradeId: string) => void;\r\n  onZoomImage: (imageUrl: string) => void;\r\n}\r\n\r\nconst TradesListDialog: React.FC<TradesDialogProps> = ({\r\n  open,\r\n  trades,\r\n  date,\r\n  expandedTradeId,\r\n  onClose,\r\n  onTradeExpand,\r\n  onZoomImage\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const dialogTitle = (\r\n    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n      <Typography variant=\"h6\">\r\n        Trades for {date}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <BaseDialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      title={dialogTitle}\r\n    >\r\n        <List sx={{\r\n          '& .MuiListItem-root': {\r\n            borderRadius: 2,\r\n            mb: 1.5,\r\n            bgcolor: alpha(theme.palette.background.default, 0.6),\r\n            transition: 'all 0.2s ease',\r\n            border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n            '&:hover': {\r\n              bgcolor: alpha(theme.palette.primary.main, 0.05),\r\n              cursor: 'pointer',\r\n              borderColor: alpha(theme.palette.primary.main, 0.2)\r\n            }\r\n          }\r\n        }}>\r\n          {trades.map((trade) => (\r\n            <React.Fragment key={trade.id}>\r\n              <ListItem\r\n                onClick={() => onTradeExpand(trade.id)}\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'flex-start',\r\n                  p: 2,\r\n                  borderTopLeftRadius: 8,\r\n                  borderTopRightRadius: 8,\r\n                  borderBottomLeftRadius: expandedTradeId === trade.id ? 0 : 8,\r\n                  borderBottomRightRadius: expandedTradeId === trade.id ? 0 : 8,\r\n                  borderBottom: expandedTradeId === trade.id ? 'none' : `1px solid ${theme.palette.divider}`,\r\n                  boxShadow: expandedTradeId === trade.id ? `0 4px 8px ${alpha(theme.palette.primary.main, 0.1)}` : 'none'\r\n                }}\r\n              >\r\n                <Box sx={{\r\n                  width: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  mb: 1\r\n                }}>\r\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                    {trade.name && (\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\r\n                        📈 {trade.name}\r\n                      </Typography>\r\n                    )}\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <Typography\r\n                        variant=\"subtitle2\"\r\n                        sx={{\r\n                          color: trade.type === 'win'\r\n                            ? theme.palette.success.main\r\n                            : trade.type === 'loss'\r\n                              ? theme.palette.error.main\r\n                              : theme.palette.info.main,\r\n                          fontWeight: 600\r\n                        }}\r\n                      >\r\n                        {trade.type === 'win' ? 'Win' : trade.type === 'loss' ? 'Loss' : 'Breakeven'}\r\n                      </Typography>\r\n                      {trade.session && (\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          sx={{\r\n                            color: 'text.secondary',\r\n                            fontSize: '0.75rem',\r\n                            bgcolor: alpha(theme.palette.divider, 0.2),\r\n                            px: 0.75,\r\n                            py: 0.25,\r\n                            borderRadius: 1\r\n                          }}\r\n                        >\r\n                          {trade.session}\r\n                        </Typography>\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      sx={{\r\n                        color: trade.amount > 0\r\n                          ? theme.palette.success.main\r\n                          : theme.palette.error.main,\r\n                        fontWeight: 600\r\n                      }}\r\n                    >\r\n                      {trade.amount > 0 ? '+' : ''}{trade.amount.toFixed(2)}\r\n                    </Typography>\r\n                    {expandedTradeId === trade.id ?\r\n                      <CollapseIcon fontSize=\"small\" sx={{ color: 'text.secondary' }} /> :\r\n                      <ExpandIcon fontSize=\"small\" sx={{ color: 'text.secondary' }} />\r\n                    }\r\n                  </Box>\r\n                </Box>\r\n                <Box sx={{\r\n                  width: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-start',\r\n                  alignItems: 'center',\r\n                  gap: 1\r\n                }}>\r\n                  {trade.riskToReward && (\r\n                    <Box sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: 0.5,\r\n                      bgcolor: alpha(theme.palette.primary.main, 0.1),\r\n                      px: 1,\r\n                      py: 0.5,\r\n                      borderRadius: 1,\r\n                      border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`\r\n                    }}>\r\n                      <RiskIcon fontSize=\"small\" sx={{ color: alpha(theme.palette.primary.main, 0.8), fontSize: '0.875rem' }} />\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        sx={{\r\n                          color: theme.palette.primary.main,\r\n                          fontSize: '0.75rem',\r\n                          fontWeight: 500\r\n                        }}\r\n                      >\r\n                        {trade.riskToReward.toFixed(1)}\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </ListItem>\r\n\r\n              {/* Expanded Trade Details */}\r\n              <TradeDetailExpanded\r\n                trade={trade}\r\n                isExpanded={expandedTradeId === trade.id}\r\n                setZoomedImage={onZoomImage}\r\n              />\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n    </BaseDialog>\r\n  );\r\n};\r\n\r\nexport default TradesListDialog;\r\n","import React from 'react';\nimport {\n  AreaChart,\n  Area,\n  ResponsiveContainer\n} from 'recharts';\nimport { Box, Paper, Typography, useTheme, Tooltip } from '@mui/material';\nimport { InfoOutlined } from '@mui/icons-material';\n\ninterface RiskRewardChartProps {\n  riskRewardStats: {\n    average: number;\n    max: number;\n    data: Array<{\n      date: string;\n      rr: number;\n    }>;\n  };\n}\n\nconst RiskRewardChart: React.FC<RiskRewardChartProps> = ({ riskRewardStats }) => {\n  const theme = useTheme();\n\n  if (riskRewardStats.data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Paper\n      sx={{\n        p: 2,\n        mb: 2,\n        borderRadius: 2\n      }}\n    >\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n        <Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              Average RR\n            </Typography>\n            <Tooltip\n              title=\"Average Risk to reward ratio (RR) per trade. An RR of 2 means that for every 1$ you risk you will make 2$.\"\n              arrow\n              placement=\"top\"\n            >\n              <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n            </Tooltip>\n          </Box>\n          <Typography variant=\"h4\" sx={{ fontWeight: 500, color: 'text.primary' }}>\n            {riskRewardStats.average.toFixed(2)}\n          </Typography>\n        </Box>\n        <Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              Max RR\n            </Typography>\n            <Tooltip\n              title=\"Maximum Risk to reward Ratio between all your trades. You can use the small graph at the bottom of this card to see the RR of every one of your trades.\"\n              arrow\n              placement=\"top\"\n            >\n              <InfoOutlined sx={{ fontSize: 16, color: 'text.secondary', opacity: 0.7, cursor: 'help' }} />\n            </Tooltip>\n          </Box>\n          <Typography variant=\"h4\" sx={{ fontWeight: 500, color: 'text.primary' }}>\n            {riskRewardStats.max.toFixed(2)}\n          </Typography>\n        </Box>\n      </Box>\n\n      {/* RR Trend Line Graph */}\n      <Box sx={{ height: 60, mt: 2 }}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={riskRewardStats.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\n            <defs>\n              <linearGradient id=\"rrGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={theme.palette.primary.main} stopOpacity={0.3} />\n                <stop offset=\"95%\" stopColor={theme.palette.primary.main} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <Area\n              type=\"monotone\"\n              dataKey=\"rr\"\n              stroke={theme.palette.primary.main}\n              strokeWidth={2}\n              fill=\"url(#rrGradient)\"\n              dot={false}\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default RiskRewardChart;\n","import React, { useMemo, useState, useCallback } from 'react';\r\nimport { format, eachDayOfInterval, startOfMonth, endOfMonth, isSameMonth, parseISO } from 'date-fns';\r\nimport { Box, Typography, useTheme, Tabs, Tab } from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Trade } from '../types/trade';\r\nimport ImageZoomDialog from './ImageZoomDialog';\r\nimport {\r\n  CumulativePnLChart,\r\n  DailyPnLChart,\r\n  WinLossDistribution,\r\n  TagPerformanceAnalysis,\r\n  DailySummaryTable,\r\n  SessionPerformanceAnalysis,\r\n  TradesListDialog,\r\n  RiskRewardChart\r\n} from './charts';\r\n\r\ninterface PerformanceChartsProps {\r\n  trades: Trade[];\r\n  selectedDate: Date;\r\n  monthlyTarget?: number;\r\n  accountBalance: number;\r\n  maxDailyDrawdown: number;\r\n  onTimePeriodChange?: (period: TimePeriod) => void;\r\n  onPrimaryTagsChange?: (tags: string[]) => void;\r\n  onSecondaryTagsChange?: (tags: string[]) => void;\r\n}\r\n\r\ntype TimePeriod = 'month' | 'year' | 'all';\r\n\r\nconst PerformanceCharts: React.FC<PerformanceChartsProps> = ({\r\n  trades,\r\n  selectedDate,\r\n  monthlyTarget,\r\n  accountBalance,\r\n  maxDailyDrawdown,\r\n  onTimePeriodChange,\r\n  onPrimaryTagsChange = () => {},\r\n  onSecondaryTagsChange = () => {}\r\n}) => {\r\n  const theme = useTheme();\r\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>('month');\r\n  const [primaryTags, setPrimaryTags] = useState<string[]>([]);\r\n  const [secondaryTags, setSecondaryTags] = useState<string[]>([]);\r\n  const [comparisonTags, setComparisonTags] = useState<string[]>([]);\r\n  const [multipleTradesDialog, setMultipleTradesDialog] = useState<{\r\n    open: boolean;\r\n    trades: Trade[];\r\n    date: string;\r\n    expandedTradeId: string | null;\r\n  }>({\r\n    open: false,\r\n    trades: [],\r\n    date: '',\r\n    expandedTradeId: null\r\n  });\r\n\r\n  const [zoomedImage, setZoomedImage] = useState<string | null>(null);\r\n\r\n  const handleTimePeriodChange = (newValue: TimePeriod) => {\r\n    setTimePeriod(newValue);\r\n    onTimePeriodChange?.(newValue);\r\n  };\r\n\r\n  // Function to filter trades based on selected time period\r\n  const getFilteredTrades = useCallback((trades: Trade[], selectedDate: Date, period: TimePeriod) => {\r\n    switch (period) {\r\n      case 'month':\r\n        return trades.filter(trade => isSameMonth(new Date(trade.date), selectedDate));\r\n      case 'year':\r\n        return trades.filter(trade => new Date(trade.date).getFullYear() === selectedDate.getFullYear());\r\n      case 'all':\r\n        return trades;\r\n      default:\r\n        return trades;\r\n    }\r\n  }, []);\r\n\r\n  // Calculate Risk to Reward statistics\r\n  const riskRewardStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod)\r\n      .filter(trade => trade.riskToReward !== undefined)\r\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\r\n\r\n    if (filteredTrades.length === 0) return { average: 0, max: 0, data: [] };\r\n\r\n    const riskRewardValues = filteredTrades.map(trade => trade.riskToReward!);\r\n    const average = riskRewardValues.reduce((sum, value) => sum + value, 0) / riskRewardValues.length;\r\n    const max = Math.max(...riskRewardValues);\r\n\r\n    // Create data points for the line graph\r\n    const data = filteredTrades.map(trade => ({\r\n      date: format(new Date(trade.date), timePeriod === 'month' ? 'MM/dd' : 'MM/dd/yyyy'),\r\n      rr: trade.riskToReward || 0\r\n    }));\r\n\r\n    return { average, max, data };\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate chart data for cumulative P&L\r\n  const chartData = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    // Get the date range for the selected period\r\n    let startDate, endDate;\r\n    if (timePeriod === 'month') {\r\n      startDate = startOfMonth(selectedDate);\r\n      endDate = endOfMonth(selectedDate);\r\n    } else if (timePeriod === 'year') {\r\n      startDate = new Date(selectedDate.getFullYear(), 0, 1);\r\n      endDate = new Date(selectedDate.getFullYear(), 11, 31);\r\n    } else {\r\n      // For 'all', use the first and last trade dates\r\n      if (filteredTrades.length === 0) {\r\n        startDate = new Date();\r\n        endDate = new Date();\r\n      } else {\r\n        const sortedTrades = [...filteredTrades].sort((a, b) =>\r\n          new Date(a.date).getTime() - new Date(b.date).getTime()\r\n        );\r\n        startDate = new Date(sortedTrades[0].date);\r\n        endDate = new Date(sortedTrades[sortedTrades.length - 1].date);\r\n      }\r\n    }\r\n\r\n    // Generate an array of all days in the period\r\n    const days = eachDayOfInterval({ start: startDate, end: endDate });\r\n\r\n    // Calculate cumulative P&L for each day\r\n    let cumulative = 0;\r\n    let prevCumulative = 0;\r\n\r\n    return days.map(day => {\r\n      // Find trades for this day\r\n      const dayTrades = filteredTrades.filter(trade =>\r\n        format(new Date(trade.date), 'yyyy-MM-dd') === format(day, 'yyyy-MM-dd')\r\n      );\r\n\r\n      // Calculate daily P&L\r\n      const dailyPnL = dayTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n\r\n      // Update cumulative P&L\r\n      prevCumulative = cumulative;\r\n      cumulative += dailyPnL;\r\n\r\n      return {\r\n        date: format(day, timePeriod === 'month' ? 'MM/dd' : 'MM/dd/yyyy'),\r\n        pnl: dailyPnL,\r\n        cumulativePnL: cumulative,\r\n        isIncreasing: cumulative > prevCumulative,\r\n        isDecreasing: cumulative < prevCumulative,\r\n        dailyChange: cumulative - prevCumulative,\r\n        isWin: dailyPnL > 0,\r\n        isLoss: dailyPnL < 0,\r\n        isBreakEven: dailyPnL === 0,\r\n        trades: dayTrades,\r\n        fullDate: new Date(day)\r\n      };\r\n    });\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate win/loss statistics\r\n  const winLossStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    const wins = filteredTrades.filter(trade => trade.type === 'win');\r\n    const losses = filteredTrades.filter(trade => trade.type === 'loss');\r\n\r\n    const totalWins = wins.length;\r\n    const totalLosses = losses.length;\r\n    const totalTrades = totalWins + totalLosses;\r\n\r\n    const winRate = totalTrades > 0 ? (totalWins / totalTrades) * 100 : 0;\r\n\r\n    const totalWinAmount = wins.reduce((sum, trade) => sum + trade.amount, 0);\r\n    const totalLossAmount = losses.reduce((sum, trade) => sum + trade.amount, 0);\r\n\r\n    const avgWin = totalWins > 0 ? totalWinAmount / totalWins : 0;\r\n    const avgLoss = totalLosses > 0 ? totalLossAmount / totalLosses : 0;\r\n\r\n    // Calculate consecutive wins and losses\r\n    let currentWinStreak = 0;\r\n    let maxWinStreak = 0;\r\n    let totalWinStreaks = 0;\r\n    let winStreakCount = 0;\r\n\r\n    let currentLossStreak = 0;\r\n    let maxLossStreak = 0;\r\n    let totalLossStreaks = 0;\r\n    let lossStreakCount = 0;\r\n\r\n    // Sort trades by date\r\n    const sortedTrades = [...filteredTrades].sort((a, b) =>\r\n      new Date(a.date).getTime() - new Date(b.date).getTime()\r\n    );\r\n\r\n    sortedTrades.forEach(trade => {\r\n      if (trade.type === 'win') {\r\n        currentWinStreak++;\r\n        currentLossStreak = 0;\r\n\r\n        if (currentWinStreak > maxWinStreak) {\r\n          maxWinStreak = currentWinStreak;\r\n        }\r\n      } else {\r\n        if (currentWinStreak > 0) {\r\n          totalWinStreaks += currentWinStreak;\r\n          winStreakCount++;\r\n        }\r\n        currentWinStreak = 0;\r\n        currentLossStreak++;\r\n\r\n        if (currentLossStreak > maxLossStreak) {\r\n          maxLossStreak = currentLossStreak;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Handle the last streak\r\n    if (currentWinStreak > 0) {\r\n      totalWinStreaks += currentWinStreak;\r\n      winStreakCount++;\r\n    } else if (currentLossStreak > 0) {\r\n      totalLossStreaks += currentLossStreak;\r\n      lossStreakCount++;\r\n    }\r\n\r\n    const avgWinStreak = winStreakCount > 0 ? totalWinStreaks / winStreakCount : 0;\r\n    const avgLossStreak = lossStreakCount > 0 ? totalLossStreaks / lossStreakCount : 0;\r\n\r\n    return {\r\n      totalTrades,\r\n      winRate,\r\n      winners: {\r\n        total: totalWins,\r\n        avgAmount: avgWin,\r\n        maxConsecutive: maxWinStreak,\r\n        avgConsecutive: avgWinStreak\r\n      },\r\n      losers: {\r\n        total: totalLosses,\r\n        avgAmount: avgLoss,\r\n        maxConsecutive: maxLossStreak,\r\n        avgConsecutive: avgLossStreak\r\n      }\r\n    };\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate win/loss distribution data for pie chart\r\n  const winLossData = useMemo(() => {\r\n    const { winners, losers } = winLossStats;\r\n\r\n    return [\r\n      { name: 'Wins', value: winners.total },\r\n      { name: 'Losses', value: losers.total }\r\n    ];\r\n  }, [winLossStats]);\r\n\r\n  // Calculate comparison win/loss data for selected tags\r\n  const comparisonWinLossData = useMemo(() => {\r\n    if (comparisonTags.length === 0) return null;\r\n\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod)\r\n      .filter(trade => {\r\n        if (!trade.tags) return false;\r\n        return comparisonTags.some(tag => trade.tags!.includes(tag));\r\n      });\r\n\r\n    const wins = filteredTrades.filter(trade => trade.type === 'win');\r\n    const losses = filteredTrades.filter(trade => trade.type === 'loss');\r\n\r\n    return [\r\n      { name: 'Wins', value: wins.length },\r\n      { name: 'Losses', value: losses.length }\r\n    ];\r\n  }, [trades, selectedDate, timePeriod, comparisonTags, getFilteredTrades]);\r\n\r\n  // Calculate daily summary data\r\n  const dailySummaryData = useMemo(() => {\r\n    // Get trades filtered by the selected time period\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    // Group trades by date\r\n    const tradesByDate = filteredTrades.reduce((acc, trade) => {\r\n        const dateKey = format(new Date(trade.date), 'yyyy-MM-dd');\r\n        if (!acc[dateKey]) {\r\n          acc[dateKey] = [];\r\n        }\r\n        acc[dateKey].push(trade);\r\n        return acc;\r\n      }, {} as { [key: string]: Trade[] });\r\n\r\n    // Calculate daily statistics\r\n    return Object.entries(tradesByDate)\r\n      .map(([date, dayTrades]) => {\r\n        const totalPnL = dayTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n\r\n        // Get the most common session for the day\r\n        const sessionCounts = dayTrades.reduce((acc, trade) => {\r\n          if (trade.session) {\r\n            acc[trade.session] = (acc[trade.session] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {} as { [key: string]: number });\r\n\r\n        // Find the session with the highest count\r\n        let mostCommonSession = '';\r\n        let highestCount = 0;\r\n\r\n        Object.entries(sessionCounts).forEach(([session, count]) => {\r\n          if (count > highestCount) {\r\n            mostCommonSession = session;\r\n            highestCount = count;\r\n          }\r\n        });\r\n\r\n        return {\r\n          date: parseISO(date),\r\n          trades: dayTrades.length,\r\n          session: mostCommonSession,\r\n          pnl: totalPnL\r\n        };\r\n      })\r\n      .sort((a, b) => b.date.getTime() - a.date.getTime()); // Sort by date descending\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Add new useMemo for tag statistics\r\n  const tagStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n\r\n    // Create a map to store stats for each tag\r\n    const tagMap = new Map<string, { wins: number; losses: number; totalPnL: number }>();\r\n\r\n    filteredTrades.forEach(trade => {\r\n      if (trade.tags) {\r\n        trade.tags.forEach(tag => {\r\n          const stats = tagMap.get(tag) || { wins: 0, losses: 0, totalPnL: 0 };\r\n          if (trade.type === 'win') {\r\n            stats.wins++;\r\n          } else {\r\n            stats.losses++;\r\n          }\r\n          stats.totalPnL += trade.amount;\r\n          tagMap.set(tag, stats);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Convert map to array and calculate win rates\r\n    return Array.from(tagMap.entries()).map(([tag, stats]) => {\r\n      const totalTrades = stats.wins + stats.losses;\r\n      const winRate = totalTrades > 0 ? Math.round((stats.wins / totalTrades) * 100) : 0;\r\n\r\n      return {\r\n        tag,\r\n        wins: stats.wins,\r\n        losses: stats.losses,\r\n        totalTrades,\r\n        winRate,\r\n        totalPnL: stats.totalPnL\r\n      };\r\n    }).sort((a, b) => b.totalTrades - a.totalTrades); // Sort by total trades descending\r\n  }, [trades, selectedDate, timePeriod, getFilteredTrades]);\r\n\r\n  // Calculate session performance statistics\r\n  const sessionStats = useMemo(() => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod).filter(trade => trade.session !== undefined);\r\n\r\n    const sessions = ['Asia', 'London', 'NY AM', 'NY PM'];\r\n\r\n    return sessions.map(sessionName => {\r\n      const sessionTrades = filteredTrades.filter(trade => trade.session === sessionName);\r\n      const totalTrades = sessionTrades.length;\r\n      const winners = sessionTrades.filter(trade => trade.type === 'win').length;\r\n      const losers = totalTrades - winners;\r\n      const winRate = totalTrades > 0 ? (winners / totalTrades) * 100 : 0;\r\n      const totalPnL = sessionTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n      const averagePnL = totalTrades > 0 ? totalPnL / totalTrades : 0;\r\n      const pnlPercentage = accountBalance > 0 ? (totalPnL / accountBalance) * 100 : 0;\r\n\r\n      return {\r\n        session: sessionName,\r\n        totalTrades,\r\n        winners,\r\n        losers,\r\n        winRate,\r\n        totalPnL,\r\n        averagePnL,\r\n        pnlPercentage\r\n      };\r\n    });\r\n  }, [trades, selectedDate, timePeriod, accountBalance, getFilteredTrades]);\r\n\r\n  // Get all unique tags\r\n  const allTags = useMemo(() => {\r\n    const tags = new Set<string>();\r\n    trades.forEach(trade => {\r\n      if (trade.tags) {\r\n        trade.tags.forEach(tag => tags.add(tag));\r\n      }\r\n    });\r\n    return Array.from(tags).sort();\r\n  }, [trades]);\r\n\r\n  // Filter tagStats based on both tag selections\r\n  const filteredTagStats = useMemo(() => {\r\n    // If no tags are selected for either primary or secondary, return an empty array to show empty chart\r\n    if (primaryTags.length === 0 && secondaryTags.length === 0) return [];\r\n\r\n    return tagStats.filter(stat => {\r\n      // If primary tags are selected, the tag must be in primaryTags\r\n      if (primaryTags.length > 0 && !primaryTags.includes(stat.tag)) {\r\n        return false;\r\n      }\r\n\r\n      // If secondary tags are selected, check if trades with this tag also have the required secondary tags\r\n      if (secondaryTags.length > 0) {\r\n        // Get all trades for this tag that have tags\r\n        const tradesWithTag = trades.filter(trade => trade.tags?.includes(stat.tag) ?? false);\r\n\r\n        // Check if any of these trades also have all the secondary tags\r\n        const hasSecondaryTags = tradesWithTag.some(trade =>\r\n          secondaryTags.every(secondaryTag => trade.tags?.includes(secondaryTag) ?? false)\r\n        );\r\n\r\n        if (!hasSecondaryTags) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }, [tagStats, primaryTags, secondaryTags, trades]);\r\n\r\n  // Calculate target value for monthly target\r\n  const targetValue = useMemo(() => {\r\n    if (monthlyTarget === undefined || accountBalance <= 0) return null;\r\n    return (monthlyTarget / 100) * accountBalance;\r\n  }, [monthlyTarget, accountBalance]);\r\n\r\n  // Calculate drawdown violation value\r\n  const drawdownViolationValue = useMemo(() => {\r\n    return -(maxDailyDrawdown / 100) * accountBalance;\r\n  }, [maxDailyDrawdown, accountBalance]);\r\n\r\n  // These handlers are now used directly in the chart overlays\r\n\r\n  const handleTradeExpand = (tradeId: string) => {\r\n    setMultipleTradesDialog(prev => ({\r\n      ...prev,\r\n      expandedTradeId: prev.expandedTradeId === tradeId ? null : tradeId\r\n    }));\r\n  };\r\n\r\n  const handleZoomImage = (imageUrl: string) => {\r\n    setZoomedImage(imageUrl);\r\n  };\r\n\r\n  // Handle pie chart click to show trades\r\n  const handlePieClick = (category: string) => {\r\n    const filteredTrades = getFilteredTrades(trades, selectedDate, timePeriod);\r\n    let categoryTrades: Trade[] = [];\r\n    let dialogTitle = '';\r\n\r\n    // Check if we're clicking on a win/loss category or a tag\r\n    if (category === 'Wins' || category === 'Losses') {\r\n      // Filter trades based on the clicked category (Wins or Losses)\r\n      categoryTrades = filteredTrades.filter(trade =>\r\n        (category === 'Wins' && trade.type === 'win') ||\r\n        (category === 'Losses' && trade.type === 'loss')\r\n      );\r\n\r\n      // Format the date range for the dialog title\r\n      let dateText;\r\n      if (timePeriod === 'month') {\r\n        dateText = format(selectedDate, 'MMMM yyyy');\r\n      } else if (timePeriod === 'year') {\r\n        dateText = format(selectedDate, 'yyyy');\r\n      } else {\r\n        dateText = 'All Time';\r\n      }\r\n\r\n      dialogTitle = `${category} for ${dateText}`;\r\n    } else {\r\n      // We're clicking on a tag in the tag distribution chart\r\n      // Filter trades that have this tag\r\n      categoryTrades = filteredTrades.filter(trade =>\r\n        trade.tags?.includes(category)\r\n      );\r\n\r\n      dialogTitle = `Trades with tag: ${category}`;\r\n    }\r\n\r\n    if (categoryTrades.length > 0) {\r\n      // Open the dialog with the filtered trades\r\n      setMultipleTradesDialog({\r\n        open: true,\r\n        trades: categoryTrades,\r\n        date: dialogTitle,\r\n        expandedTradeId: categoryTrades.length === 1 ? categoryTrades[0].id : null\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      {/* Image Zoom Dialog */}\r\n      <ImageZoomDialog\r\n        open={!!zoomedImage}\r\n        onClose={() => setZoomedImage(null)}\r\n        imageUrl={zoomedImage}\r\n      />\r\n\r\n      {/* Trades Dialog */}\r\n      <TradesListDialog\r\n        open={multipleTradesDialog.open}\r\n        trades={multipleTradesDialog.trades}\r\n        date={multipleTradesDialog.date}\r\n        expandedTradeId={multipleTradesDialog.expandedTradeId}\r\n        onClose={() => setMultipleTradesDialog(prev => ({ ...prev, open: false }))}\r\n        onTradeExpand={handleTradeExpand}\r\n        onZoomImage={handleZoomImage}\r\n      />\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\">\r\n          Performance Charts for {timePeriod === 'month'\r\n            ? format(selectedDate, 'MMMM yyyy')\r\n            : timePeriod === 'year'\r\n            ? format(selectedDate, 'yyyy')\r\n            : 'All Time'\r\n          }\r\n        </Typography>\r\n        <Tabs\r\n          value={timePeriod}\r\n          onChange={(_, newValue: TimePeriod) => handleTimePeriodChange(newValue)}\r\n          sx={{\r\n            minHeight: 40,\r\n            backgroundColor: alpha(theme.palette.background.paper, 0.4),\r\n            borderRadius: '20px',\r\n            padding: '4px',\r\n            '& .MuiTabs-flexContainer': {\r\n              gap: '4px'\r\n            },\r\n            '& .MuiTabs-indicator': {\r\n              display: 'none'\r\n            }\r\n          }}\r\n        >\r\n          <Tab\r\n            label=\"Month\"\r\n            value=\"month\"\r\n            sx={{\r\n              minHeight: 32,\r\n              my: 0.2,\r\n              textTransform: 'none',\r\n              fontSize: '0.875rem',\r\n              fontWeight: 500,\r\n              color: 'text.secondary',\r\n              borderRadius: '16px',\r\n              padding: '6px 18px',\r\n              '&.Mui-selected': {\r\n                color: 'primary.main',\r\n                backgroundColor: 'background.paper',\r\n                boxShadow: theme.shadows[1]\r\n              },\r\n              '&:hover:not(.Mui-selected)': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                color: 'primary.main'\r\n              }\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"Year\"\r\n            value=\"year\"\r\n            sx={{\r\n              minHeight: 32,\r\n              my: 0.2,\r\n              textTransform: 'none',\r\n              fontSize: '0.875rem',\r\n              fontWeight: 500,\r\n              color: 'text.secondary',\r\n              borderRadius: '16px',\r\n              padding: '6px 18px',\r\n              '&.Mui-selected': {\r\n                color: 'primary.main',\r\n                backgroundColor: 'background.paper',\r\n                boxShadow: theme.shadows[1]\r\n              },\r\n              '&:hover:not(.Mui-selected)': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                color: 'primary.main'\r\n              }\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"All Time\"\r\n            value=\"all\"\r\n            sx={{\r\n              minHeight: 32,\r\n              my: 0.2,\r\n              textTransform: 'none',\r\n              fontSize: '0.875rem',\r\n              fontWeight: 500,\r\n              color: 'text.secondary',\r\n              borderRadius: '16px',\r\n              padding: '6px 18px',\r\n              '&.Mui-selected': {\r\n                color: 'primary.main',\r\n                backgroundColor: 'background.paper',\r\n                boxShadow: theme.shadows[1]\r\n              },\r\n              '&:hover:not(.Mui-selected)': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                color: 'primary.main'\r\n              }\r\n            }}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Main content */}\r\n      {chartData.some(data => data.pnl !== 0) || winLossData.some(data => data.value > 0) ? (\r\n        <>\r\n          {/* Risk to Reward Statistics Card */}\r\n          <RiskRewardChart riskRewardStats={riskRewardStats} />\r\n          {/* Cumulative P&L Chart */}\r\n          <CumulativePnLChart\r\n            chartData={chartData}\r\n            targetValue={targetValue}\r\n            monthlyTarget={monthlyTarget}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n            timePeriod={timePeriod}\r\n          />\r\n\r\n          {/* Daily P&L Chart */}\r\n          <DailyPnLChart\r\n            chartData={chartData}\r\n            drawdownViolationValue={drawdownViolationValue}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n            timePeriod={timePeriod}\r\n          />\r\n\r\n          {/* Win/Loss Distribution and Daily Summary side by side */}\r\n          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 3, mb: 3, height: '500px' }}>\r\n            <Box sx={{ flex: 1, width: { xs: '100%', md: '50%' } }}>\r\n              {/* Win/Loss Distribution */}\r\n              <WinLossDistribution\r\n                winLossData={winLossData}\r\n                comparisonWinLossData={comparisonWinLossData}\r\n                allTags={allTags}\r\n                comparisonTags={comparisonTags}\r\n                setComparisonTags={setComparisonTags}\r\n                onPieClick={handlePieClick}\r\n                tagStats={tagStats}\r\n              />\r\n            </Box>\r\n            <Box sx={{ flex: 1, width: { xs: '100%', md: '50%' } }}>\r\n              {/* Daily Summary Table */}\r\n              <DailySummaryTable\r\n                dailySummaryData={dailySummaryData}\r\n                trades={trades}\r\n                setMultipleTradesDialog={setMultipleTradesDialog}\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Tag Performance Analysis */}\r\n          <TagPerformanceAnalysis\r\n            trades={trades}\r\n            selectedDate={selectedDate}\r\n            timePeriod={timePeriod}\r\n            allTags={allTags}\r\n            primaryTags={primaryTags}\r\n            secondaryTags={secondaryTags}\r\n            setPrimaryTags={(tags) => {\r\n              setPrimaryTags(tags);\r\n              onPrimaryTagsChange(tags);\r\n            }}\r\n            setSecondaryTags={(tags) => {\r\n              setSecondaryTags(tags);\r\n              onSecondaryTagsChange(tags);\r\n            }}\r\n            filteredTagStats={filteredTagStats}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n          />\r\n\r\n          {/* Session Performance Analysis */}\r\n          <SessionPerformanceAnalysis\r\n            sessionStats={sessionStats}\r\n            trades={trades}\r\n            selectedDate={selectedDate}\r\n            timePeriod={timePeriod}\r\n            setMultipleTradesDialog={setMultipleTradesDialog}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            height: 300,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            bgcolor: theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.02)',\r\n            borderRadius: 2,\r\n            border: `1px solid ${theme.palette.divider}`\r\n          }}\r\n        >\r\n          <Typography color=\"text.secondary\">\r\n            No trading data available for {timePeriod === 'month'\r\n              ? format(selectedDate, 'MMMM yyyy')\r\n              : timePeriod === 'year'\r\n              ? format(selectedDate, 'yyyy')\r\n              : 'All Time'\r\n            }\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PerformanceCharts;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  Box,\r\n  Paper,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  TrendingUp,\r\n  EmojiEvents,\r\n  CalendarMonth,\r\n  CalendarToday\r\n} from '@mui/icons-material';\r\nimport { addYears, subYears } from 'date-fns';\r\nimport { Trade } from '../types/trade';\r\nimport TargetBadge from '../components/TargetBadge';\r\nimport { BaseDialog } from './common';\r\n\r\ninterface SelectDateDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onDateSelect: (date: Date) => void;\r\n  initialDate?: Date;\r\n  trades: Trade[];\r\n  accountBalance: number;\r\n  monthlyTarget?: number;\r\n  yearlyTarget?: number;\r\n}\r\n\r\nconst SelectDateDialog: React.FC<SelectDateDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  onDateSelect,\r\n  initialDate,\r\n  trades,\r\n  accountBalance,\r\n  monthlyTarget,\r\n  yearlyTarget\r\n}) => {\r\n  const theme = useTheme();\r\n  const [currentDate, setCurrentDate] = React.useState(initialDate || new Date());\r\n  const currentYear = currentDate.getFullYear();\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    if (initialDate) {\r\n      setCurrentDate(initialDate);\r\n    }\r\n  }, [initialDate]);\r\n\r\n  const handlePrevYear = () => setCurrentDate(prev => subYears(prev, 1));\r\n  const handleNextYear = () => setCurrentDate(prev => addYears(prev, 1));\r\n  const handleToday = () => setCurrentDate(new Date());\r\n\r\n  const handleMonthSelect = (monthIndex: number) => {\r\n    const newDate = new Date(currentYear, monthIndex, 1);\r\n    onDateSelect(newDate);\r\n    onClose();\r\n  };\r\n\r\n  const currentMonth = currentDate.getMonth();\r\n\r\n  // Calculate yearly statistics\r\n  const yearTrades = trades.filter(trade => new Date(trade.date).getFullYear() === currentYear);\r\n  const yearlyPnL = yearTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n  const yearlyWinCount = yearTrades.filter(trade => trade.type === 'win').length;\r\n  const yearlyLossCount = yearTrades.filter(trade => trade.type === 'loss').length;\r\n  const yearlyWinRate = yearTrades.length > 0 ? (yearlyWinCount / yearTrades.length * 100).toFixed(1) : '0';\r\n  const yearlyGrowthPercentage = accountBalance > 0 ? (yearlyPnL / accountBalance * 100).toFixed(2) : '0';\r\n\r\n  // Calculate monthly PnL for each month\r\n  const getMonthPnL = (monthIndex: number) => {\r\n    const monthTrades = trades.filter(trade =>\r\n      new Date(trade.date).getFullYear() === currentYear &&\r\n      new Date(trade.date).getMonth() === monthIndex\r\n    );\r\n    return monthTrades.reduce((sum, trade) => sum + trade.amount, 0);\r\n  };\r\n\r\n  // Find the best month\r\n  const getBestMonth = () => {\r\n    let bestMonthIndex = -1;\r\n    let bestMonthPnL = 0;\r\n\r\n    for (let i = 0; i < 12; i++) {\r\n      const monthPnL = getMonthPnL(i);\r\n      if (monthPnL > bestMonthPnL) {\r\n        bestMonthPnL = monthPnL;\r\n        bestMonthIndex = i;\r\n      }\r\n    }\r\n\r\n    return {\r\n      name: bestMonthIndex >= 0 ? months[bestMonthIndex] : 'None',\r\n      pnl: bestMonthPnL\r\n    };\r\n  };\r\n\r\n  const bestMonth = getBestMonth();\r\n\r\n  // Calculate monthly target progress\r\n  const getMonthTargetProgress = (monthIndex: number) => {\r\n    if (!monthlyTarget || monthlyTarget <= 0) return null;\r\n    const monthPnL = getMonthPnL(monthIndex);\r\n    const targetAmount = (monthlyTarget / 100) * accountBalance;\r\n    const progress = (monthPnL / targetAmount) * 100;\r\n    return {\r\n      progress: Math.min(Math.max(progress, 0), 100),\r\n      isMet: monthPnL >= targetAmount,\r\n      rawProgress: progress\r\n    };\r\n  };\r\n\r\n  // Calculate monthly growth percentage\r\n  const getMonthGrowthPercentage = (monthIndex: number) => {\r\n    if (accountBalance <= 0) return '0';\r\n    const monthPnL = getMonthPnL(monthIndex);\r\n    return (monthPnL / accountBalance * 100).toFixed(2);\r\n  };\r\n\r\n  // Calculate yearly target progress\r\n  const getYearlyTargetProgress = () => {\r\n    if (!yearlyTarget || yearlyTarget <= 0) return null;\r\n    const targetAmount = (yearlyTarget / 100) * accountBalance;\r\n    const progress = (yearlyPnL / targetAmount) * 100;\r\n    return {\r\n      progress: Math.min(Math.max(progress, 0), 100),\r\n      isMet: yearlyPnL >= targetAmount,\r\n      rawProgress: progress\r\n    };\r\n  };\r\n\r\n  const yearlyTargetProgress = getYearlyTargetProgress();\r\n\r\n  const dialogTitle = (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n      <CalendarToday sx={{\r\n        fontSize: '1.75rem',\r\n        color: theme.palette.primary.main\r\n      }} />\r\n      <Typography variant=\"h5\" sx={{ fontWeight: 700, flex: 1, color: 'text.primary', fontSize: '1.5rem', ml: 1.5 }}>\r\n        Select Month\r\n      </Typography>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        {currentYear !== new Date().getFullYear() && (\r\n          <Button\r\n            onClick={handleToday}\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            startIcon={<CalendarToday sx={{ fontSize: '1.1rem' }} />}\r\n            sx={{\r\n              ml: 1,\r\n              textTransform: 'none',\r\n              fontWeight: 600,\r\n              borderRadius: 1.5,\r\n              px: 2\r\n            }}\r\n          >\r\n            Today\r\n          </Button>\r\n        )}\r\n        <IconButton onClick={handlePrevYear} sx={{ color: 'text.primary', bgcolor: alpha(theme.palette.primary.main, 0.05) }}>\r\n          <ChevronLeft />\r\n        </IconButton>\r\n        <Typography variant=\"h5\" sx={{ fontWeight: 800, color: 'text.primary', minWidth: '80px', textAlign: 'center', letterSpacing: '-0.5px' }}>\r\n          {currentYear}\r\n        </Typography>\r\n        <IconButton onClick={handleNextYear} sx={{ color: 'text.primary', bgcolor: alpha(theme.palette.primary.main, 0.05) }}>\r\n          <ChevronRight />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  const dialogActions = (\r\n    <Button\r\n      onClick={onClose}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      sx={{\r\n        textTransform: 'none',\r\n        fontWeight: 600,\r\n        borderRadius: 1.5,\r\n        px: 3\r\n      }}\r\n    >\r\n      Cancel\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <BaseDialog\r\n      open={open}\r\n      onClose={onClose}\r\n      title={dialogTitle}\r\n      actions={dialogActions}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <Box sx={{\r\n        pt: '24px',\r\n        pb: '24px',\r\n        '&::-webkit-scrollbar': {\r\n          width: '8px',\r\n          height: '8px',\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n          background: 'transparent'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n          background: alpha(theme.palette.primary.main, 0.2),\r\n          borderRadius: '4px',\r\n        },\r\n        '&::-webkit-scrollbar-thumb:hover': {\r\n          background: alpha(theme.palette.primary.main, 0.3),\r\n        }\r\n      }}>\r\n         <Paper elevation={0} sx={{\r\n        px: 3,\r\n        py: 2,\r\n        mb: 2,\r\n        borderRadius: 2,\r\n        bgcolor: theme => alpha(theme.palette.background.default, 0.5),\r\n        border: '1px solid',\r\n        borderColor: theme => theme.palette.divider,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n      }}>\r\n        <Box sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          mb: 2.5,\r\n          pl: 1\r\n        }}>\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', gap: 0.5 }}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{\r\n              color: 'text.primary',\r\n              fontSize: '1.1rem',\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            Yearly Statistics\r\n          </Typography>\r\n          {yearlyTargetProgress && (\r\n              <TargetBadge\r\n              progress={yearlyTargetProgress.rawProgress}\r\n              isMet={yearlyTargetProgress.isMet}\r\n              tooltipText={`${yearlyTargetProgress.isMet ? 'Yearly target achieved' : 'Progress towards yearly target'}: ${yearlyTargetProgress.rawProgress.toFixed(0)}%`}\r\n            />\r\n            )}\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n            <Box sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              gap: 1,\r\n              bgcolor: theme => alpha(theme.palette.success.light, 0.1),\r\n              py: 0.75,\r\n              px: 1.5,\r\n              borderRadius: 1,\r\n              border: '1px solid',\r\n              borderColor: 'success.light'\r\n            }}>\r\n              <Typography variant=\"body2\" sx={{\r\n                fontSize: '0.85rem',\r\n                fontWeight: 500,\r\n                color: 'text.secondary'\r\n              }}>\r\n                Best Month:\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{\r\n                fontSize: '0.85rem',\r\n                fontWeight: 700,\r\n                color: 'success.main'\r\n              }}>\r\n                {bestMonth.name} (${bestMonth.pnl.toLocaleString()})\r\n              </Typography>\r\n            </Box>\r\n\r\n\r\n          </Box>\r\n\r\n        </Box>\r\n\r\n        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr 1fr' }, gap: 4, width: '100%' }}>\r\n          <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 1 }}>\r\n              <Box sx={{\r\n                p: 0.8,\r\n                borderRadius: 1,\r\n                bgcolor: theme => alpha(theme.palette.primary.main, 0.1),\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                mb: 1\r\n              }}>\r\n                <TrendingUp sx={{\r\n                  fontSize: '1.2rem',\r\n                  color: 'primary.main'\r\n                }} />\r\n              </Box>\r\n              <Typography variant=\"body1\" sx={{\r\n                fontSize: '1rem',\r\n                fontWeight: 600,\r\n                color: 'text.primary',\r\n                textAlign: 'center'\r\n              }}>\r\n                Yearly P&L\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 0.5 }}>\r\n              <Typography\r\n                variant=\"h5\"\r\n                sx={{\r\n                  fontWeight: 700,\r\n                  fontSize: '1.5rem',\r\n                  color: theme => {\r\n                    if (yearlyPnL > 0) return theme.palette.success.main;\r\n                    if (yearlyPnL < 0) return theme.palette.error.main;\r\n                    return theme.palette.mode === 'dark' ? 'grey.300' : 'text.primary';\r\n                  },\r\n                  textAlign: 'center'\r\n                }}\r\n              >\r\n                ${Math.abs(yearlyPnL).toLocaleString()}\r\n              </Typography>\r\n              <Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                gap: 0.5,\r\n              }}>\r\n                <Typography variant=\"body2\" sx={{\r\n                  fontWeight: 500,\r\n                  color: 'text.secondary',\r\n                  fontSize: '0.9rem',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  Growth\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{\r\n                  fontWeight: 700,\r\n                  color: theme => {\r\n                    if (yearlyPnL > 0) return theme.palette.success.main;\r\n                    if (yearlyPnL < 0) return theme.palette.error.main;\r\n                    return theme.palette.mode === 'dark' ? 'grey.300' : 'text.primary';\r\n                  },\r\n                  fontSize: '1rem',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  {yearlyGrowthPercentage}%\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 1 }}>\r\n              <Box sx={{\r\n                p: 0.8,\r\n                borderRadius: 1,\r\n                bgcolor: theme => alpha(theme.palette.success.main, 0.1),\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                mb: 1\r\n              }}>\r\n                <EmojiEvents sx={{\r\n                  fontSize: '1.2rem',\r\n                  color: 'success.main'\r\n                }} />\r\n              </Box>\r\n              <Typography variant=\"body1\" sx={{\r\n                fontSize: '1rem',\r\n                fontWeight: 600,\r\n                color: 'text.primary',\r\n                textAlign: 'center'\r\n              }}>\r\n                Win Rate\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"h5\" sx={{\r\n              fontWeight: 700,\r\n              fontSize: '1.5rem',\r\n              color: parseFloat(yearlyWinRate) > 50 ? 'success.main' : 'text.primary',\r\n              textAlign: 'center'\r\n            }}>\r\n              {yearlyWinRate}%\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{\r\n              fontWeight: 500,\r\n              fontSize: '1rem',\r\n              color: 'text.secondary',\r\n              mt: 0.5,\r\n              textAlign: 'center'\r\n            }}>\r\n              {yearlyWinCount} Ws / {yearlyLossCount} Ls\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 1 }}>\r\n              <Box sx={{\r\n                p: 0.8,\r\n                borderRadius: 1,\r\n                bgcolor: theme => alpha(theme.palette.info.main, 0.1),\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                mb: 1\r\n              }}>\r\n                <CalendarMonth sx={{\r\n                  fontSize: '1.2rem',\r\n                  color: 'info.main'\r\n                }} />\r\n              </Box>\r\n              <Typography variant=\"body1\" sx={{\r\n                fontSize: '1rem',\r\n                fontWeight: 600,\r\n                color: 'text.primary',\r\n                textAlign: 'center'\r\n              }}>\r\n                Total Trades\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"h5\" sx={{\r\n              fontWeight: 700,\r\n              fontSize: '1.5rem',\r\n              color: 'text.primary',\r\n              textAlign: 'center'\r\n            }}>\r\n              {yearTrades.length}\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{\r\n              fontWeight: 500,\r\n              fontSize: '1rem',\r\n              color: 'text.secondary',\r\n              mt: 0.5,\r\n              textAlign: 'center'\r\n            }}>\r\n              Trades this year\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            color: 'text.primary',\r\n            mb: 2,\r\n            fontSize: '1.1rem',\r\n            fontWeight: 600,\r\n            pl: 1\r\n          }}\r\n        >\r\n          Select a Month\r\n        </Typography>\r\n        <Box sx={{\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(3, 1fr)',\r\n          gap: 1.5\r\n        }}>\r\n          {months.map((month, index) => {\r\n            const monthPnL = getMonthPnL(index);\r\n            const hasEntries = monthPnL !== 0;\r\n            const targetProgress = getMonthTargetProgress(index);\r\n            const growthPercentage = getMonthGrowthPercentage(index);\r\n\r\n            return (\r\n              <Paper\r\n                key={month}\r\n                onClick={() => handleMonthSelect(index)}\r\n                elevation={0}\r\n                sx={{\r\n                  p: 2.5,\r\n                  cursor: 'pointer',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 1,\r\n                  height: '100%',\r\n                  bgcolor: theme => {\r\n                    if (hasEntries) {\r\n                      return theme.palette.mode === 'dark'\r\n                        ? alpha('#fff', 0.08)\r\n                        : alpha(theme.palette.primary.main, 0.04);\r\n                    }\r\n                    return theme.palette.mode === 'dark' ? 'transparent' : '#f5f5f5';\r\n                  },\r\n                  border: '1px solid',\r\n                  borderColor: theme =>\r\n                    currentMonth === index && currentYear === initialDate?.getFullYear()\r\n                      ? theme.palette.primary.main\r\n                      : theme.palette.mode === 'dark' ? alpha('#fff', 0.12) : theme.palette.grey[200],\r\n                  borderRadius: 2,\r\n                  transition: 'all 0.2s',\r\n                  position: 'relative',\r\n                  overflow: 'hidden',\r\n                  ...(currentMonth === index && currentYear === initialDate?.getFullYear() && {\r\n                    '&::before': {\r\n                      content: '\"\"',\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: '4px',\r\n                      backgroundColor: 'primary.main',\r\n                    }\r\n                  }),\r\n                  '&:hover': {\r\n                    bgcolor: theme => theme.palette.mode === 'dark'\r\n                      ? alpha('#fff', 0.12)\r\n                      : alpha(theme.palette.primary.main, 0.08),\r\n                    borderColor: 'primary.main',\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: theme => `0 4px 12px ${alpha(theme.palette.primary.main, 0.2)}`\r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 0.5 }}>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{\r\n                      color: theme =>\r\n                        currentMonth === index && currentYear === initialDate?.getFullYear()\r\n                          ? theme.palette.primary.main\r\n                          : theme.palette.text.primary,\r\n                      fontWeight: 700,\r\n                      fontSize: '1.1rem'\r\n                    }}\r\n                  >\r\n                    {month}\r\n                  </Typography>\r\n\r\n                  {targetProgress && hasEntries && (\r\n                    <Box sx={{ ml: 1 }}>\r\n                      <TargetBadge\r\n                        progress={targetProgress.rawProgress}\r\n                        isMet={targetProgress.isMet}\r\n                        tooltipText={`${targetProgress.isMet ? 'Monthly target achieved' : 'Progress towards monthly target'}: ${targetProgress.rawProgress.toFixed(0)}%`}\r\n                      />\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                {hasEntries && (\r\n                  <>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        sx={{\r\n                          color: monthPnL > 0 ? 'success.main' : 'error.main',\r\n                          fontSize: '1.2rem',\r\n                          fontWeight: 700,\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          gap: 0.5\r\n                        }}\r\n                      >\r\n                        ${Math.abs(monthPnL).toLocaleString()}\r\n                        <Box component=\"span\" sx={{ fontSize: '0.9rem', fontWeight: 600 }}>\r\n                          {monthPnL > 0 ? '↑' : '↓'}\r\n                        </Box>\r\n                      </Typography>\r\n\r\n                      <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 0.5,\r\n                      }}>\r\n                        <Typography variant=\"caption\" sx={{ fontWeight: 500, color: 'text.secondary', fontSize: '0.75rem' }}>\r\n                          Growth\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" sx={{\r\n                          fontWeight: 600,\r\n                          color: monthPnL > 0 ? 'success.main' : 'error.main',\r\n                          fontSize: '0.75rem'\r\n                        }}>\r\n                          {growthPercentage}%\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n\r\n                  </>\r\n                )}\r\n              </Paper>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Box>\r\n    </BaseDialog>\r\n  );\r\n};\r\n\r\nexport default SelectDateDialog;","import { Theme } from '@mui/material/styles';\r\n\r\n/**\r\n * Creates consistent scrollbar styles for use throughout the application\r\n * @param theme The current MUI theme\r\n * @returns An object containing scrollbar styles that can be spread into sx props\r\n */\r\nexport const scrollbarStyles = (theme: Theme) => ({\r\n  '&::-webkit-scrollbar': {\r\n    width: '8px',\r\n    height: '8px'\r\n  },\r\n  '&::-webkit-scrollbar-track': {\r\n    background: 'transparent'\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    background: theme.palette.mode === 'dark'\r\n      ? 'rgba(255, 255, 255, 0.2)'\r\n      : 'rgba(0, 0, 0, 0.2)',\r\n    borderRadius: '4px',\r\n    '&:hover': {\r\n      background: theme.palette.mode === 'dark'\r\n        ? 'rgba(255, 255, 255, 0.3)'\r\n        : 'rgba(0, 0, 0, 0.3)'\r\n    }\r\n  }\r\n});","import { styled, alpha } from '@mui/material/styles';\r\nimport { Paper, Box, Typography, Button, IconButton, Chip, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\n\r\nexport type DayStatus = 'win' | 'loss' | 'neutral';\r\n\r\n// Calendar day styled component\r\nexport const StyledCalendarDay = styled(Box)<{\r\n  $isCurrentMonth: boolean;\r\n  $dayStatus: DayStatus;\r\n}>(({ theme, $isCurrentMonth, $dayStatus }) => ({\r\n  padding: theme.spacing(1),\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  borderRadius: theme.shape.borderRadius,\r\n  transition: 'all 0.1s ease-in-out',\r\n  opacity: $isCurrentMonth ? 1 : 0.5,\r\n  backgroundColor: $dayStatus === 'win'\r\n    ? alpha(theme.palette.success.main, 0.1)\r\n    : $dayStatus === 'loss'\r\n      ? alpha(theme.palette.error.main, 0.1)\r\n      : theme.palette.background.paper\r\n}));\r\n\r\nexport const CalendarCell = styled(Box)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: 'hidden',\r\n  backgroundColor: alpha(theme.palette.background.paper, 0.05),\r\n  border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n}));\r\n\r\nexport const WeekdayHeader = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  backgroundColor: alpha(theme.palette.background.paper, 0.05),\r\n  borderRadius: theme.shape.borderRadius,\r\n}));\r\n\r\n// Day number styled component\r\nexport const DayNumber = styled(Typography)<{ $isCurrentMonth: boolean }>(({ theme, $isCurrentMonth }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  color: $isCurrentMonth ? theme.palette.text.primary : theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(0.5)\r\n}));\r\n\r\n// Trade amount styled component\r\nexport const TradeAmount = styled(Typography)<{ $dayStatus: 'win' | 'loss' | 'neutral' }>(({ theme, $dayStatus }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 600,\r\n  color: $dayStatus === 'win'\r\n    ? theme.palette.success.main\r\n    : $dayStatus === 'loss'\r\n      ? theme.palette.error.main\r\n      : theme.palette.text.primary\r\n}));\r\n\r\n// Trade count styled component\r\nexport const TradeCount = styled(Typography)(({ theme }) => ({\r\n  fontSize: '0.75rem',\r\n  color: theme.palette.text.secondary,\r\n  fontWeight: 500\r\n}));\r\n\r\n// Action button styled component\r\nexport const ActionButton = styled(IconButton)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.common.white, 0.1)\r\n    : alpha(theme.palette.common.black, 0.05),\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.mode === 'dark'\r\n      ? alpha(theme.palette.common.white, 0.2)\r\n      : alpha(theme.palette.common.black, 0.1),\r\n  },\r\n  width: 32,\r\n  height: 32,\r\n}));\r\n\r\n// Status chip styled component\r\nexport const StatusChip = styled(Chip)(({ theme }) => ({\r\n  fontWeight: 600,\r\n  borderRadius: 16,\r\n  '&.win': {\r\n    backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n    color: theme.palette.success.main,\r\n    border: `1px solid ${alpha(theme.palette.success.main, 0.3)}`,\r\n  },\r\n  '&.loss': {\r\n    backgroundColor: alpha(theme.palette.error.main, 0.1),\r\n    color: theme.palette.error.main,\r\n    border: `1px solid ${alpha(theme.palette.error.main, 0.3)}`,\r\n  },\r\n}));\r\n\r\n// Card container styled component\r\nexport const CardContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[2],\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.7)\r\n    : theme.palette.background.paper,\r\n  transition: 'all 0.3s ease-in-out',\r\n  '&:hover': {\r\n    boxShadow: theme.shadows[4],\r\n  },\r\n}));\r\n\r\n// Stats container styled component\r\nexport const StatsContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: theme.spacing(2),\r\n  padding: theme.spacing(2),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.5)\r\n    : alpha(theme.palette.background.default, 0.7),\r\n  border: `1px solid ${theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.common.white, 0.1)\r\n    : alpha(theme.palette.common.black, 0.1)}`,\r\n}));\r\n\r\n// Stat item styled component\r\nexport const StatItem = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(1),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.7)\r\n    : theme.palette.background.paper,\r\n  boxShadow: theme.shadows[1],\r\n}));\r\n\r\n// Stat label styled component\r\nexport const StatLabel = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// Stat value styled component\r\nexport const StatValue = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 700,\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\n// Primary button styled component\r\nexport const PrimaryButton = styled(Button)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(1, 2),\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  boxShadow: 'none',\r\n  '&:hover': {\r\n    boxShadow: theme.shadows[2],\r\n  },\r\n}));\r\n\r\n// Secondary button styled component\r\nexport const SecondaryButton = styled(Button)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(1, 2),\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderWidth: 2,\r\n  },\r\n}));\r\n\r\n// Dialog title styled component\r\nexport const DialogTitleStyled = styled(DialogTitle)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(2),\r\n  borderBottom: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// Dialog content styled component\r\nexport const DialogContentStyled = styled(DialogContent)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: theme.spacing(2)\r\n}));\r\n\r\n// Dialog actions styled component\r\nexport const DialogActionsStyled = styled(DialogActions)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// Form field styled component\r\nexport const FormField = styled(Box)(({ theme }) => ({\r\n  marginBottom: theme.spacing(2)\r\n}));\r\n\r\n// Trade list item styled component\r\nexport const TradeListItem = styled(Box)<{ $type?: 'win' | 'loss' | 'breakeven' }>(({ theme, $type }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(1.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: $type === 'win'\r\n    ? alpha(theme.palette.success.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n    : $type === 'loss'\r\n      ? alpha(theme.palette.error.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n      : $type === 'breakeven'\r\n        ? alpha(theme.palette.info.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n        : theme.palette.background.paper,\r\n  border: '1px solid',\r\n  borderColor: $type === 'win'\r\n    ? alpha(theme.palette.success.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n    : $type === 'loss'\r\n      ? alpha(theme.palette.error.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n      : $type === 'breakeven'\r\n        ? alpha(theme.palette.info.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n        : theme.palette.divider,\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-1px)',\r\n    boxShadow: `0 2px 8px ${alpha(\r\n      $type === 'win'\r\n        ? theme.palette.success.main\r\n        : $type === 'loss'\r\n          ? theme.palette.error.main\r\n          : theme.palette.primary.main,\r\n      0.15\r\n    )}`,\r\n    borderColor: $type === 'win'\r\n      ? theme.palette.success.main\r\n      : $type === 'loss'\r\n        ? theme.palette.error.main\r\n        : theme.palette.primary.main\r\n  }\r\n}));\r\n\r\n// Trade info styled component\r\nexport const TradeInfo = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(2)\r\n}));\r\n\r\n// Trade actions styled component\r\nexport const TradeActions = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  gap: theme.spacing(1)\r\n}));\r\n\r\n// Calendar header styled component\r\nexport const CalendarHeader = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(2),\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\n// Calendar grid styled component\r\nexport const CalendarGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(7, 1fr)',\r\n  gap: theme.spacing(1),\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\n// Calendar weekday header styled component\r\nexport const CalendarWeekdayHeader = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(7, 1fr)',\r\n  gap: theme.spacing(1),\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// Calendar weekday styled component\r\nexport const CalendarWeekday = styled(Typography)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// Account balance card styled component\r\nexport const AccountBalanceCard = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  marginBottom: theme.spacing(2),\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.8)\r\n    : theme.palette.background.paper,\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[2],\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: theme.shadows[4],\r\n  },\r\n}));\r\n\r\n// Account balance title styled component\r\nexport const AccountBalanceTitle = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// Account balance amount styled component\r\nexport const AccountBalanceAmount = styled(Typography)(({ theme }) => ({\r\n  fontSize: '2rem',\r\n  fontWeight: 700,\r\n  color: theme.palette.text.primary,\r\n  textAlign: 'center',\r\n  marginBottom: theme.spacing(0.5),\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '1.5rem',\r\n  },\r\n}));\r\n\r\n// Account balance change styled component\r\nexport const AccountBalanceChange = styled(Typography)(({ theme }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: 500,\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '0.875rem',\r\n  },\r\n}));\r\n\r\n// Monthly stats card styled component\r\nexport const MonthlyStatsCard = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  background: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.8)\r\n    : theme.palette.background.paper,\r\n  backdropFilter: 'blur(10px)',\r\n  borderRadius: theme.shape.borderRadius * 2,\r\n  boxShadow: theme.shadows[4],\r\n}));\r\n\r\n// Monthly stats title styled component\r\nexport const MonthlyStatsTitle = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\n// Monthly stats grid styled component\r\nexport const MonthlyStatsGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\r\n  gap: theme.spacing(2),\r\n}));\r\n\r\n// Monthly stat item styled component\r\nexport const MonthlyStatItem = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1.5),\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.6)\r\n    : theme.palette.background.paper,\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[1],\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: theme.shadows[3],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// Monthly stat label styled component\r\nexport const MonthlyStatLabel = styled(Typography)(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(0.5),\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '0.75rem',\r\n  },\r\n}));\r\n\r\n// Monthly stat value styled component\r\nexport const MonthlyStatValue = styled(Typography)(({ theme }) => ({\r\n  fontSize: '1.25rem',\r\n  fontWeight: 600,\r\n  color: theme.palette.text.primary,\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '1rem',\r\n  },\r\n}));\r\n\r\n// Journal link styled component\r\nexport const JournalLink = styled('a')(({ theme }) => ({\r\n  color: theme.palette.primary.main,\r\n  textDecoration: 'none',\r\n  fontSize: '0.875rem',\r\n  '&:hover': {\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\n// Animated pulse styled component\r\nexport const AnimatedPulse = styled(Box)(({ theme }) => ({\r\n  animation: `pulse 2s ${theme.transitions.easing.easeInOut} infinite`\r\n}));","import { SxProps, Theme } from '@mui/material';\r\n\r\nexport const dialogProps = {\r\n  PaperProps: {\r\n    sx: {\r\n      bgcolor: 'background.paper',\r\n      borderRadius: 2,\r\n      boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.15)'\r\n    }\r\n  },\r\n  sx: {\r\n    '& .MuiBackdrop-root': {\r\n      backdropFilter: 'blur(4px)',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n    }\r\n  }\r\n} as const;\r\n\r\n// Helper function to merge additional styles with default dialog styles\r\nexport const mergeDialogStyles = (additionalSx?: SxProps<Theme>) => ({\r\n  ...dialogProps,\r\n  sx: {\r\n    ...dialogProps.sx,\r\n    ...(additionalSx || {})\r\n  }\r\n}); ","/**\n * Utility functions for generating consistent colors for tags\n * Supports grouped tags in format \"Group:Tag\" (e.g., \"Strategy:Volume\")\n */\n\nimport { alpha } from '@mui/material/styles';\nimport { Theme } from '@mui/material';\n\n// Predefined color palette for better visual consistency\nconst TAG_COLORS = [\n  '#2196F3', // Blue\n  '#4CAF50', // Green\n  '#FF9800', // Orange\n  '#9C27B0', // Purple\n  '#E91E63', // Pink\n  '#00BCD4', // Cyan\n  '#FFC107', // Amber\n  '#795548', // Brown\n  '#607D8B', // Blue Grey\n  '#8BC34A', // Light Green\n  '#FF5722', // Deep Orange\n  '#673AB7', // Deep Purple\n  '#3F51B5', // Indigo\n  '#009688', // Teal\n  '#CDDC39', // Lime\n  '#FFEB3B', // Yellow\n];\n\n/**\n * Generates a consistent color hash from a string\n * @param str The string to generate a color for\n * @returns A number between 0 and TAG_COLORS.length\n */\nconst hashString = (str: string): number => {\n  // Simple but effective string hash function\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  // Make sure we get a positive number and map it directly to our color array length\n  return Math.abs(hash) % TAG_COLORS.length;\n};\n\n/**\n * Checks if a tag is a grouped tag (contains a colon)\n * @param tag The tag to check\n * @returns True if the tag is grouped\n */\nexport const isGroupedTag = (tag: string): boolean => {\n  return tag.includes(':');\n};\n\n/**\n * Gets the group name from a grouped tag\n * @param tag The grouped tag (e.g., \"Strategy:Volume\")\n * @returns The group name (e.g., \"Strategy\")\n */\nexport const getTagGroup = (tag: string): string => {\n  if (!isGroupedTag(tag)) return '';\n  return tag.split(':')[0];\n};\n\n/**\n * Gets the tag name without the group prefix\n * @param tag The grouped tag (e.g., \"Strategy:Volume\")\n * @returns The tag name without group (e.g., \"Volume\")\n */\nexport const getTagName = (tag: string): string => {\n  if (!isGroupedTag(tag)) return tag;\n  const parts = tag.split(':');\n  return parts.length > 1 ? parts[1] : parts[0];\n};\n\n/**\n * Gets a consistent color for a tag\n * For grouped tags, the color is based on the group name\n * @param tag The tag name\n * @returns A hex color code\n */\nexport const getTagColor = (tag: string): string => {\n  // For grouped tags, use the group name for color consistency within groups\n  const colorKey = isGroupedTag(tag) ? getTagGroup(tag) : tag;\n  // Get the index directly from the hash function\n  const index = hashString(colorKey);\n  return TAG_COLORS[index];\n};\n\n/**\n * Gets tag chip styles for consistent appearance across the app\n * @param tag The tag name\n * @param theme The current theme\n * @returns Style object for the tag chip\n */\nexport const getTagChipStyles = (tag: string, theme: Theme) => {\n  const color = getTagColor(tag);\n  return {\n    backgroundColor: alpha(color, 0.2),\n    color: color,\n    fontWeight: 800,\n    '& .MuiChip-deleteIcon': {\n      color: color,\n      '&:hover': {\n        color: alpha(color, 0.7)\n      }\n    }\n  };\n};\n\n/**\n * Filters tags by group name\n * @param tags Array of tags to filter\n * @param group Group name to filter by\n * @returns Array of tags that belong to the specified group\n */\nexport const filterTagsByGroup = (tags: string[], group: string): string[] => {\n  return tags.filter(tag => isGroupedTag(tag) && getTagGroup(tag) === group);\n};\n\n/**\n * Gets all unique group names from an array of tags\n * @param tags Array of tags to extract groups from\n * @returns Array of unique group names\n */\nexport const getUniqueTagGroups = (tags: string[]): string[] => {\n  const groups = new Set<string>();\n\n  tags.forEach(tag => {\n    if (isGroupedTag(tag)) {\n      groups.add(getTagGroup(tag));\n    }\n  });\n\n  return Array.from(groups).sort();\n};\n\n/**\n * Formats a tag for display, optionally hiding the group prefix\n * @param tag The tag to format\n * @param hideGroup Whether to hide the group prefix\n * @returns Formatted tag for display\n */\nexport const formatTagForDisplay = (tag: string, hideGroup: boolean = false): string => {\n  if (!isGroupedTag(tag) || !hideGroup) return tag;\n  return getTagName(tag);\n};\n"],"names":["_ref","open","onClose","title","actions","children","maxWidth","fullWidth","hideCloseButton","hideFooterCancelButton","cancelButtonText","cancelButtonAction","primaryButtonText","primaryButtonAction","isSubmitting","contentSx","rest","theme","useTheme","_jsxs","Dialog","dialogProps","slotProps","paper","sx","borderRadius","boxShadow","border","palette","divider","maxHeight","overflow","scrollbarStyles","DialogTitleStyled","_jsx","Box","display","alignItems","justifyContent","width","Typography","variant","IconButton","onClick","size","CloseIcon","DialogContentStyled","DialogActionsStyled","gap","Button","color","disabled","minWidth","position","CircularProgress","tags","onTagClick","onTagDelete","showGroups","chipSize","filteredTags","filter","tag","startsWith","organizedTags","useMemo","length","groups","ungroupedTags","getUniqueTagGroups","forEach","group","filterTagsByGroup","isGroupedTag","push","flexDirection","overflowY","Object","keys","_Fragment","entries","map","_ref2","groupTags","fontWeight","flexWrap","Chip","label","getTagName","undefined","onDelete","getTagChipStyles","formatTagForDisplay","message","confirmText","cancelText","onConfirm","onCancel","confirmColor","DialogTitle","DialogContent","DialogActions","SelectInput","options","helperText","FormControl","InputLabel","Select","option","MenuItem","value","fadeIn","keyframes","slideUp","slideDown","slideLeft","slideRight","scaleUp","shake","bounce","rotate","AnimatedDropdown","styled","animation","Paper","from","opacity","transform","to","_ref3","_ref4","_ref5","_ref6","transformOrigin","_ref7","_ref8","animationDelay","_ref9","_ref10","_ref11","shimmer","isPendingImage","image","pending","trade","isExpanded","setZoomedImage","onUpdateTradeProperty","isToggling","setIsToggling","useState","p","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","borderLeft","borderRight","borderBottom","borderTop","backgroundColor","alpha","background","mb","Stack","spacing","name","fontSize","gridTemplateColumns","xs","sm","entry","exit","elevation","info","main","gridColumn","amount","success","error","grey","MoneyIcon","toFixed","type","async","id","currentTrade","Math","abs","console","left","primary","CalendarIcon","format","date","riskToReward","warning","RiskIcon","session","SessionIcon","Divider","my","pl","TagsDisplay","notes","NoteIcon","whiteSpace","lineHeight","images","ImageIcon","imagesByRow","row","sort","a","b","Number","_","rowImages","rowIndex","column","colIndex","columnWidth","height","paddingTop","top","zIndex","cursor","baseColor","mode","backgroundSize","willChange","src","url","alt","caption","style","objectFit","onLoad","e","_target$parentElement","target","parent","parentElement","querySelectorAll","placeholder","className","right","bottom","transition","ZoomInIcon","allTags","selectedTags","onTagsChange","showClearButton","showApplyButton","selectedTagGroup","setSelectedTagGroup","tagGroups","dialogTitle","dialogActions","handleClearTags","BaseDialog","mt","onChange","Autocomplete","multiple","newValue","renderInput","params","TextField","renderTags","getTagProps","index","getTagGroup","renderOption","props","progress","isMet","tooltipText","badgeContent","bgcolor","ml","px","CheckCircle","mr","Flag","max","Tooltip","arrow","placement","formatValue","formatCurrency","toLocaleString","minimumFractionDigits","maximumFractionDigits","imageUrl","scale","setScale","setPosition","x","y","isDragging","setIsDragging","dragStart","setDragStart","imageRef","useRef","containerRef","resetZoom","useEffect","handleGlobalMouseUp","document","addEventListener","removeEventListener","PaperProps","ref","onWheel","preventDefault","newScale","deltaY","min","onMouseDown","clientX","clientY","onMouseMove","newX","newY","current","getBoundingClientRect","imageRect","maxX","maxY","boundedX","boundedY","onMouseUp","onMouseLeave","userSelect","pointerEvents","RestartAltIcon","CustomYAxisTick","payload","formattedValue","dy","textAnchor","fill","CustomTooltip","active","data","shadows","dailyChange","cumulativePnL","trades","chartData","targetValue","monthlyTarget","setMultipleTradesDialog","timePeriod","COLORS","py","ResponsiveContainer","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","vertical","XAxis","dataKey","axisLine","tickLine","tick","text","secondary","YAxis","content","ReferenceLine","stroke","strokeWidth","Area","fillOpacity","baseValue","activeDot","cx","cy","r","log","dataPoint","formattedDate","fullDate","expandedTradeId","dot","CustomDailyPnLYAxisTick","isWin","isLoss","pnl","drawdownViolationValue","BarChart","Bar","radius","Cell","winLossData","comparisonWinLossData","comparisonTags","setComparisonTags","onPieClick","tagStats","comparisonTagsDialogOpen","setComparisonTagsDialogOpen","React","createElement","innerHTML","head","appendChild","removeChild","win","loss","zero","breakEven","chartStyle","generateTagDistributionData","some","d","tagCounts","Map","filteredTagStats","stat","includes","set","totalTrades","split","reduce","acc","char","charCodeAt","Array","count","pb","textTransform","TagFilterDialog","flex","minHeight","PieChart","outline","tabIndex","margin","getTagColor","sum","item","Pie","labelLine","outerRadius","innerRadius","percent","paddingAngle","cornerRadius","fillColor","Legend","verticalAlign","align","layout","iconSize","iconType","wrapperStyle","pt","marginTop","selectedDate","primaryTags","secondaryTags","setPrimaryTags","setSecondaryTags","primaryTagsDialogOpen","setPrimaryTagsDialogOpen","secondaryTagsDialogOpen","setSecondaryTagsDialogOpen","MuiTooltip","InfoOutlined","maxBarSize","wins","losses","winRate","totalPnL","stackId","filteredTrades","_trade$tags","isSameMonth","Date","getFullYear","_trade$tags2","dailySummaryData","day","TrendingUp","TrendingDown","TrendingFlat","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","dayTrades","fontStyle","sessionStats","sessionTrades","gutterBottom","averagePnL","pnlPercentage","winners","losers","tickFormatter","sessionName","onTradeExpand","onZoomImage","List","default","borderColor","ListItem","CollapseIcon","ExpandIcon","TradeDetailExpanded","riskRewardStats","average","accountBalance","maxDailyDrawdown","onTimePeriodChange","onPrimaryTagsChange","onSecondaryTagsChange","setTimePeriod","multipleTradesDialog","zoomedImage","getFilteredTrades","useCallback","period","getTime","riskRewardValues","rr","startDate","endDate","startOfMonth","endOfMonth","sortedTrades","days","eachDayOfInterval","start","end","cumulative","prevCumulative","dailyPnL","isIncreasing","isDecreasing","isBreakEven","winLossStats","totalWins","totalLosses","totalWinAmount","totalLossAmount","avgWin","avgLoss","currentWinStreak","maxWinStreak","totalWinStreaks","winStreakCount","currentLossStreak","maxLossStreak","totalLossStreaks","lossStreakCount","total","avgAmount","maxConsecutive","avgConsecutive","tradesByDate","dateKey","sessionCounts","mostCommonSession","highestCount","parseISO","tagMap","stats","get","round","Set","add","_trade$tags$includes","every","secondaryTag","_trade$tags$includes2","ImageZoomDialog","TradesListDialog","prev","tradeId","Tabs","handleTimePeriodChange","padding","Tab","RiskRewardChart","CumulativePnLChart","DailyPnLChart","md","WinLossDistribution","category","categoryTrades","dateText","_trade$tags3","DailySummaryTable","TagPerformanceAnalysis","SessionPerformanceAnalysis","onDateSelect","initialDate","yearlyTarget","currentDate","setCurrentDate","currentYear","months","currentMonth","getMonth","yearTrades","yearlyPnL","yearlyWinCount","yearlyLossCount","yearlyWinRate","yearlyGrowthPercentage","getMonthPnL","monthIndex","bestMonth","getBestMonth","bestMonthIndex","bestMonthPnL","i","monthPnL","yearlyTargetProgress","getYearlyTargetProgress","targetAmount","rawProgress","CalendarToday","handleToday","startIcon","handlePrevYear","subYears","ChevronLeft","textAlign","letterSpacing","handleNextYear","addYears","ChevronRight","TargetBadge","light","EmojiEvents","parseFloat","CalendarMonth","month","hasEntries","targetProgress","getMonthTargetProgress","growthPercentage","newDate","handleMonthSelect","component","StyledCalendarDay","$isCurrentMonth","$dayStatus","shape","DayNumber","marginBottom","TradeAmount","TradeCount","common","white","black","_ref12","_ref13","_ref14","_ref15","borderWidth","_ref16","_ref17","_ref18","FormField","_ref19","TradeListItem","_ref20","$type","TradeInfo","_ref21","TradeActions","_ref22","AnimatedPulse","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","breakpoints","down","_ref30","_ref31","backdropFilter","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","textDecoration","_ref38","transitions","easing","easeInOut","TAG_COLORS","parts","str","hash","hashString","hideGroup","arguments"],"sourceRoot":""}