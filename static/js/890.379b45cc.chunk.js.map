{"version":3,"file":"static/js/890.379b45cc.chunk.js","mappings":"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","sources":["components/common/AppHeader.tsx","components/Animations.tsx","components/sharing/ShareTradeButton.tsx","components/TradeDetailExpanded.tsx","components/common/ConfirmationDialog.tsx","components/ImageZoomDialog.tsx","components/common/BaseDialog.tsx","components/common/TagsDisplay.tsx","components/common/FormField.tsx","components/common/RichTextEditor/utils/draftUtils.ts","components/common/RichTextEditor/constants/colors.ts","components/common/RichTextEditor/constants/headings.ts","components/common/RichTextEditor/utils/localStorage.ts","components/common/RichTextEditor/utils/selectionUtils.ts","components/common/RichTextEditor/hooks/useFloatingToolbar.ts","components/common/RichTextEditor/utils/debounce.ts","components/common/RichTextEditor/utils/linkUtils.ts","components/common/RichTextEditor/utils/editorActions.ts","components/common/RichTextEditor/utils/keyboardUtils.ts","components/common/RichTextEditor/utils/styleUtils.ts","components/common/RichTextEditor/components/LinkComponent.tsx","components/common/RichTextEditor.tsx","components/common/RichTextEditor/utils/decoratorUtils.ts","components/common/RichTextEditor/hooks/useRecentColors.ts","components/common/RichTextEditor/utils/menuUtils.ts","components/common/RichTextEditor/utils/linkDialogUtils.ts","styles/scrollbarStyles.ts","components/StyledComponents.tsx","styles/dialogStyles.ts","utils/tagColors.ts"],"sourcesContent":["import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Button,\n  Stack,\n  Avatar,\n  Box\n} from '@mui/material';\nimport {\n  LightMode as LightModeIcon,\n  DarkMode as DarkModeIcon,\n  Logout as LogoutIcon,\n  ArrowBack as ArrowBackIcon,\n  Google as GoogleIcon\n} from '@mui/icons-material';\nimport { useTheme, alpha } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface AppHeaderProps {\n  onToggleTheme: () => void;\n  mode: 'light' | 'dark';\n  title?: string;\n  showBackButton?: boolean;\n  backButtonPath?: string;\n  onBackClick?: () => void;\n}\n\nconst AppHeader: React.FC<AppHeaderProps> = ({\n  onToggleTheme,\n  mode,\n  title = 'Trade Tracker',\n  showBackButton = false,\n  backButtonPath = '/',\n  onBackClick\n}) => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { user, signOut, signInWithGoogle } = useAuth();\n\n  const handleSignOut = async () => {\n    try {\n      await signOut();\n      navigate('/');\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  const handleSignIn = async () => {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      console.error('Failed to sign in:', error);\n    }\n  };\n\n  const handleBackButtonClick = () => {\n    if (onBackClick) {\n      onBackClick();\n    } else {\n      navigate(backButtonPath);\n    }\n  };\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      color=\"transparent\"\n      elevation={0.7}\n      sx={{\n        backdropFilter: 'blur(8px)',\n        backgroundColor: alpha(mode === 'light' ? '#ffffff' : theme.palette.background.default, 0.9),\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        zIndex: (theme) => theme.zIndex.drawer + 1\n      }}\n    >\n      <Toolbar sx={{ px: { xs: 1, sm: 3 } }}> {/* Responsive padding */}\n        <Box sx={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: { xs: 1, sm: 2 }, // Smaller gap on mobile\n          flexGrow: 1,\n          minWidth: 0 // Allow text truncation\n        }}>\n          {showBackButton && (\n            <IconButton\n              onClick={handleBackButtonClick}\n              size=\"small\"\n              sx={{\n                color: 'text.secondary',\n                '&:hover': {\n                  color: 'primary.main',\n                  bgcolor: alpha(theme.palette.primary.main, 0.08)\n                }\n              }}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          )}\n          <Typography\n            variant=\"h5\"\n            component=\"h1\"\n            sx={{\n              flexGrow: 1,\n              fontSize: { xs: '1.1rem', sm: '1.5rem' }, // Responsive font size\n              fontWeight: 600,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              minWidth: 0\n            }}\n          >\n            {title}\n          </Typography>\n        </Box>\n        \n        {user ? (\n          <Stack\n            direction=\"row\"\n            spacing={{ xs: 0.5, sm: 2 }} // Tighter spacing on mobile\n            alignItems=\"center\"\n          >\n            <IconButton\n              onClick={onToggleTheme}\n              color=\"inherit\"\n              size=\"small\"\n              sx={{\n                '&:hover': {\n                  bgcolor: alpha(theme.palette.primary.main, 0.1),\n                }\n              }}\n            >\n              {mode === 'dark' ? <LightModeIcon /> : <DarkModeIcon />}\n            </IconButton>\n            <Stack\n              direction=\"row\"\n              spacing={{ xs: 0.5, sm: 1 }} // Tighter spacing on mobile\n              alignItems=\"center\"\n              sx={{\n                display: { xs: 'none', sm: 'flex' } // Hide email on mobile\n              }}\n            >\n              <Typography\n                variant=\"body2\"\n                color=\"text.secondary\"\n                sx={{\n                  maxWidth: { xs: '80px', sm: 'none' }, // Limit width on small screens\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap'\n                }}\n              >\n                {user.email}\n              </Typography>\n            </Stack>\n            <Avatar\n              src={user.photoURL || undefined}\n              sx={{\n                width: { xs: 28, sm: 32 }, // Smaller avatar on mobile\n                height: { xs: 28, sm: 32 },\n                bgcolor: theme.palette.primary.main,\n                fontSize: '0.875rem'\n              }}\n            >\n              {user.email ? user.email[0].toUpperCase() : 'U'}\n            </Avatar>\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              onClick={handleSignOut}\n              size=\"small\"\n              sx={{\n                minWidth: { xs: 'auto', sm: 'auto' },\n                px: { xs: 1, sm: 2 }, // Less padding on mobile\n                fontSize: { xs: '0.75rem', sm: '0.875rem' } // Smaller text on mobile\n              }}\n            >\n              <Box sx={{ display: { xs: 'none', sm: 'flex' }, alignItems: 'center', gap: 0.5 }}>\n                <LogoutIcon sx={{ fontSize: 16 }} />\n                Sign Out\n              </Box>\n              <Box sx={{ display: { xs: 'block', sm: 'none' } }}>\n                <LogoutIcon sx={{ fontSize: 16 }} />\n              </Box>\n            </Button>\n          </Stack>\n        ) : (\n          <Stack\n            direction=\"row\"\n            spacing={{ xs: 0.5, sm: 2 }} // Tighter spacing on mobile\n            alignItems=\"center\"\n          >\n            <IconButton\n              onClick={onToggleTheme}\n              color=\"inherit\"\n              size=\"small\"\n              sx={{\n                '&:hover': {\n                  bgcolor: alpha(theme.palette.primary.main, 0.1),\n                }\n              }}\n            >\n              {mode === 'dark' ? <LightModeIcon /> : <DarkModeIcon />}\n            </IconButton>\n            <Button\n              variant=\"contained\"\n              onClick={handleSignIn}\n              size=\"small\"\n              sx={{\n                bgcolor: '#4285F4',\n                '&:hover': {\n                  bgcolor: '#3367D6'\n                },\n                px: { xs: 1.5, sm: 2 }, // Less padding on mobile\n                fontSize: { xs: '0.75rem', sm: '0.875rem' }, // Smaller text on mobile\n                minWidth: { xs: 'auto', sm: 'auto' }\n              }}\n            >\n              <Box sx={{ display: { xs: 'none', sm: 'flex' }, alignItems: 'center', gap: 0.5 }}>\n                <GoogleIcon sx={{ fontSize: 16 }} />\n                Sign in with Google\n              </Box>\n              <Box sx={{ display: { xs: 'block', sm: 'none' } }}>Sign In</Box>\n            </Button>\n          </Stack>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppHeader;\n","import { keyframes } from '@mui/system';\nimport { styled } from '@mui/material/styles';\nimport { Box, Paper } from '@mui/material';\n\n// Fade in animation\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\n// Slide up animation\nexport const slideUp = keyframes`\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// Slide down animation\nexport const slideDown = keyframes`\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\n// Slide left animation\nexport const slideLeft = keyframes`\n  from {\n    transform: translateX(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\n// Slide right animation\nexport const slideRight = keyframes`\n  from {\n    transform: translateX(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\n// Scale up animation\nexport const scaleUp = keyframes`\n  from {\n    transform: scale(0.9);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n`;\n\n// Pulse animation\nexport const pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\n// Shake animation\nexport const shake = keyframes`\n  0%, 100% {\n    transform: translateX(0);\n  }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-5px);\n  }\n  20%, 40%, 60%, 80% {\n    transform: translateX(5px);\n  }\n`;\n\n// Bounce animation\nexport const bounce = keyframes`\n  0%, 20%, 50%, 80%, 100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-10px);\n  }\n  60% {\n    transform: translateY(-5px);\n  }\n`;\n\n// Rotate animation\nexport const rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\n// Animated container component\nexport const AnimatedContainer = styled(Box)(({ theme }) => ({\n  animation: `${fadeIn} 0.5s ease-out`,\n}));\n\n// Animated paper component\nexport const AnimatedPaper = styled(Paper)(({ theme }) => ({\n  animation: `${scaleUp} 0.3s ease-out`,\n}));\n\n// Animated slide up component\nexport const AnimatedSlideUp = styled(Box)({\n  animation: 'slideUp 0.3s ease-out',\n  '@keyframes slideUp': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(20px)'\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    }\n  }\n});\n\n// Animated slide down component\nexport const AnimatedSlideDown = styled(Box)({\n  animation: 'slideDown 0.3s ease-out',\n  '@keyframes slideDown': {\n    from: {\n      opacity: 0,\n      transform: 'translateY(-20px)'\n    },\n    to: {\n      opacity: 1,\n      transform: 'translateY(0)'\n    }\n  }\n});\n\n// Animated slide left component\nexport const AnimatedSlideLeft = styled(Box)(({ theme }) => ({\n  animation: `${slideLeft} 0.5s ease-out`,\n}));\n\n// Animated slide right component\nexport const AnimatedSlideRight = styled(Box)(({ theme }) => ({\n  animation: `${slideRight} 0.5s ease-out`,\n}));\n\n// Animated pulse component\nexport const AnimatedPulse = styled(Box)({\n  animation: 'pulse 2s infinite',\n  '@keyframes pulse': {\n    '0%': {\n      transform: 'scale(1)'\n    },\n    '50%': {\n      transform: 'scale(1.05)'\n    },\n    '100%': {\n      transform: 'scale(1)'\n    }\n  }\n});\n\n// Animated shake component\nexport const AnimatedShake = styled(Box)(({ theme }) => ({\n  animation: `${shake} 0.5s ease-in-out`,\n}));\n\n// Animated bounce component\nexport const AnimatedBounce = styled(Box)(({ theme }) => ({\n  animation: `${bounce} 2s infinite`,\n}));\n\n// Animated dropdown component\nexport const AnimatedDropdown = styled(Box)({\n  animation: 'dropdown 0.3s ease-out',\n  transformOrigin: 'top',\n  overflow: 'hidden',\n  '@keyframes dropdown': {\n    from: {\n      opacity: 0,\n      maxHeight: '0px',\n      transform: 'scaleY(0)'\n    },\n    to: {\n      opacity: 1,\n      maxHeight: '1000px',\n      transform: 'scaleY(1)'\n    }\n  }\n});\n\n// Animated rotate component\nexport const AnimatedRotate = styled(Box)(({ theme }) => ({\n  animation: `${rotate} 2s linear infinite`,\n}));\n\n// Staggered animation container\nexport const StaggeredContainer = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${fadeIn} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered slide up container\nexport const StaggeredSlideUp = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${slideUp} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered slide down container\nexport const StaggeredSlideDown = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${slideDown} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));\n\n// Staggered scale up container\nexport const StaggeredScaleUp = styled(Box)(({ theme }) => ({\n  '& > *': {\n    opacity: 0,\n    animation: `${scaleUp} 0.5s ease-out forwards`,\n  },\n  '& > *:nth-of-type(1)': {\n    animationDelay: '0.1s',\n  },\n  '& > *:nth-of-type(2)': {\n    animationDelay: '0.2s',\n  },\n  '& > *:nth-of-type(3)': {\n    animationDelay: '0.3s',\n  },\n  '& > *:nth-of-type(4)': {\n    animationDelay: '0.4s',\n  },\n  '& > *:nth-of-type(5)': {\n    animationDelay: '0.5s',\n  },\n  '& > *:nth-of-type(6)': {\n    animationDelay: '0.6s',\n  },\n  '& > *:nth-of-type(7)': {\n    animationDelay: '0.7s',\n  },\n}));","import React, { useState } from 'react';\nimport {\n  IconButton,\n  Tooltip,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  CircularProgress,\n  Snackbar,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Box,\n  Typography\n} from '@mui/material';\nimport {\n  Share as ShareIcon,\n  Link as LinkIcon,\n  ContentCopy as CopyIcon,\n  LinkOff as UnshareIcon\n} from '@mui/icons-material';\nimport { Trade } from '../../types/trade';\nimport { getFunctions, httpsCallable } from 'firebase/functions';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface ShareTradeButtonProps {\n  trade: Trade;\n  calendarId: string;\n  onTradeUpdated?: (updatedTrade: Trade) => void;\n  onUpdateTradeProperty?: (tradeId: string, updateCallback: (trade: Trade) => Trade) => Promise<Trade | undefined>;\n  size?: 'small' | 'medium' | 'large';\n  color?: 'inherit' | 'primary' | 'secondary' | 'default';\n}\n\nconst ShareTradeButton: React.FC<ShareTradeButtonProps> = ({\n  trade,\n  calendarId,\n  onTradeUpdated,\n  onUpdateTradeProperty,\n  size = 'medium',\n  color = 'inherit'\n}) => {\n  const { user } = useAuth();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [isSharing, setIsSharing] = useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = useState(false);\n  const [shareLink, setShareLink] = useState<string>('');\n  const [snackbar, setSnackbar] = useState<{\n    open: boolean;\n    message: string;\n    severity: 'success' | 'error' | 'info';\n  }>({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleShare = async () => {\n    if (!user) {\n      showSnackbar('You must be logged in to share trades', 'error');\n      return;\n    }\n\n    setIsSharing(true);\n    handleClose();\n\n    try {\n      // Check if trade already has a share link\n      if (trade.shareLink && trade.isShared) {\n        setShareLink(trade.shareLink);\n        setShareDialogOpen(true);\n        showSnackbar('Using existing share link', 'info');\n        setIsSharing(false);\n        return;\n      }\n\n      const functions = getFunctions();\n      const generateShareLink = httpsCallable(functions, 'generateTradeShareLinkV2');\n\n      const result = await generateShareLink({\n        calendarId,\n        tradeId: trade.id\n      });\n\n      const data = result.data as { shareLink: string; shareId: string; directLink: string };\n      const shareLink = data.directLink || data.shareLink; // Use direct link if available\n\n      setShareLink(shareLink);\n      setShareDialogOpen(true);\n\n      // Update the trade with sharing information using onUpdateTradeProperty if available\n      if (onUpdateTradeProperty) {\n        try {\n          const updatedTrade = await onUpdateTradeProperty(trade.id, (currentTrade) => ({\n            ...currentTrade,\n            shareLink: shareLink,\n            isShared: true,\n            sharedAt: new Date(),\n            shareId: data.shareId\n          }));\n\n          if (updatedTrade && onTradeUpdated) {\n            onTradeUpdated(updatedTrade);\n          }\n        } catch (error) {\n          console.error('Error updating trade with sharing information:', error);\n          // Still show the share dialog even if the trade update fails\n        }\n      } else if (onTradeUpdated) {\n        // Fallback to local update only\n        const updatedTrade: Trade = {\n          ...trade,\n          shareLink: shareLink,\n          isShared: true,\n          sharedAt: new Date(),\n          shareId: data.shareId\n        };\n        onTradeUpdated(updatedTrade);\n      }\n\n      showSnackbar('Share link generated successfully!', 'success');\n    } catch (error) {\n      console.error('Error sharing trade:', error);\n      showSnackbar('Failed to generate share link', 'error');\n    } finally {\n      setIsSharing(false);\n    }\n  };\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(shareLink);\n      showSnackbar('Link copied to clipboard!', 'success');\n      setShareDialogOpen(false);\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n      showSnackbar('Failed to copy link', 'error');\n    }\n  };\n\n  const handleUnshare = async () => {\n    if (!trade.shareId) {\n      showSnackbar('No active share found for this trade', 'error');\n      return;\n    }\n\n    setIsSharing(true);\n    handleClose();\n\n    try {\n      const functions = getFunctions();\n      const deactivateShareFunction = httpsCallable(functions, 'deactivateSharedTradeV2');\n\n      await deactivateShareFunction({ shareId: trade.shareId });\n\n      // Update the trade to remove sharing information using onUpdateTradeProperty if available\n      if (onUpdateTradeProperty) {\n        try {\n          const updatedTrade = await onUpdateTradeProperty(trade.id, (currentTrade) => ({\n            ...currentTrade,\n            shareLink: undefined,\n            isShared: false,\n            shareId: undefined\n          }));\n\n          if (updatedTrade && onTradeUpdated) {\n            onTradeUpdated(updatedTrade);\n          }\n        } catch (error) {\n          console.error('Error updating trade to remove sharing information:', error);\n          // Still show success message even if the trade update fails\n        }\n      } else if (onTradeUpdated) {\n        // Fallback to local update only\n        const updatedTrade: Trade = {\n          ...trade,\n          shareLink: undefined,\n          isShared: false,\n          shareId: undefined\n        };\n        onTradeUpdated(updatedTrade);\n      }\n\n      showSnackbar('Trade sharing stopped', 'success');\n    } catch (error) {\n      console.error('Error unsharing trade:', error);\n      showSnackbar('Failed to stop sharing', 'error');\n    } finally {\n      setIsSharing(false);\n    }\n  };\n\n  const showSnackbar = (message: string, severity: 'success' | 'error' | 'info') => {\n    setSnackbar({ open: true, message, severity });\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbar(prev => ({ ...prev, open: false }));\n  };\n\n  const isCurrentlyShared = trade.isShared && trade.shareLink;\n\n  return (\n    <>\n      <Tooltip title={isCurrentlyShared ? \"Manage sharing\" : \"Share trade\"}>\n        <IconButton\n          onClick={handleClick}\n          size={size}\n          color={color}\n          disabled={isSharing}\n          sx={{\n            color: isCurrentlyShared ? 'primary.main' : 'inherit'\n          }}\n        >\n          {isSharing ? (\n            <CircularProgress size={20} />\n          ) : (\n            <ShareIcon />\n          )}\n        </IconButton>\n      </Tooltip>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        {!isCurrentlyShared ? (\n          <MenuItem onClick={handleShare}>\n            <ListItemIcon>\n              <LinkIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText>Generate share link</ListItemText>\n          </MenuItem>\n        ) : (\n          [\n            <MenuItem key=\"copy\" onClick={() => {\n              setShareLink(trade.shareLink!);\n              setShareDialogOpen(true);\n              handleClose();\n            }}>\n              <ListItemIcon>\n                <CopyIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText>Copy share link</ListItemText>\n            </MenuItem>,\n            <MenuItem key=\"unshare\" onClick={handleUnshare}>\n              <ListItemIcon>\n                <UnshareIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText>Stop sharing</ListItemText>\n            </MenuItem>\n          ]\n        )}\n      </Menu>\n\n      {/* Share Link Dialog */}\n      <Dialog\n        open={shareDialogOpen}\n        onClose={() => setShareDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Share Trade</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              Anyone with this link can view this trade:\n            </Typography>\n            <TextField\n              fullWidth\n              value={shareLink}\n              InputProps={{\n                readOnly: true,\n              }}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{ mt: 1 }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShareDialogOpen(false)}>\n            Close\n          </Button>\n          <Button onClick={handleCopyLink} variant=\"contained\" startIcon={<CopyIcon />}>\n            Copy Link\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar for notifications */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbar.severity}\n          variant=\"filled\"\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default ShareTradeButton;\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Stack,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Button,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport { alpha, useTheme, keyframes } from '@mui/material/styles';\r\nimport { format } from 'date-fns';\r\nimport { Trade } from '../types/trade';\r\nimport {\r\n  ZoomIn as ZoomInIcon,\r\n  AttachMoney as MoneyIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Balance as RiskIcon,\r\n  Schedule as SessionIcon,\r\n  Note as NoteIcon,\r\n  Image as ImageIcon,\r\n  PushPin as PinIcon,\r\n  PushPinOutlined as UnpinIcon,\r\n  ViewList as ViewListIcon,\r\n  Category as CategoryIcon\r\n} from '@mui/icons-material';\r\nimport { AnimatedDropdown } from './Animations';\r\nimport { TagsDisplay } from './common';\r\nimport { TradeImage } from './trades/TradeForm';\r\nimport ShareTradeButton from './sharing/ShareTradeButton';\r\nimport RichTextEditor from './common/RichTextEditor';\r\n\r\n// Global cache to track loaded images across the entire application\r\nconst imageLoadCache = new Set<string>();\r\n\r\ninterface TradeDetailExpandedProps {\r\n  tradeData: Trade;\r\n  isExpanded: boolean;\r\n  setZoomedImage: (url: string, allImages?: string[], initialIndex?: number) => void;\r\n  onUpdateTradeProperty?: (tradeId: string, updateCallback: (trade: Trade) => Trade) => Promise<Trade | undefined>;\r\n  calendarId?: string;\r\n  // Optional props for trade link navigation in notes\r\n  trades?: Array<{ id: string; [key: string]: any }>;\r\n  onOpenGalleryMode?: (trades: any[], initialTradeId?: string, title?: string) => void;\r\n}\r\n\r\n// Define shimmer animation\r\nconst shimmer = keyframes`\r\n  0% {\r\n    background-position: -200% 0;\r\n  }\r\n  100% {\r\n    background-position: 200% 0;\r\n  }\r\n`;\r\n\r\n// Helper function to check if an image is pending\r\nconst isPendingImage = (image: TradeImage): boolean => {\r\n  return image.pending || false;\r\n};\r\n\r\n// Helper function to check if an image is loading or pending\r\nconst isImageLoading = (image: TradeImage, loadingState: { [key: string]: boolean }): boolean => {\r\n  return isPendingImage(image) || loadingState[image.id] === true;\r\n};\r\n\r\nconst TradeDetailExpanded: React.FC<TradeDetailExpandedProps> = ({\r\n  tradeData,\r\n  isExpanded,\r\n  setZoomedImage,\r\n  onUpdateTradeProperty,\r\n  calendarId,\r\n  trades,\r\n  onOpenGalleryMode\r\n}) => {\r\n  const theme = useTheme();\r\n  const [trade, setTrade] = useState<Trade>(tradeData);\r\n  const [isToggling, setIsToggling] = useState(false);\r\n  const [isPinning, setIsPinning] = useState(false);\r\n  const [loadingImages, setLoadingImages] = useState<{ [key: string]: boolean }>({});\r\n  const [showTagGroups, setShowTagGroups] = useState(() => {\r\n    // Load from localStorage, default to false if not found\r\n    const saved = localStorage.getItem('tradeDetail_showTagGroups');\r\n    return saved !== null ? JSON.parse(saved) : false;\r\n  });\r\n\r\n  // Update local trade state when tradeData prop changes\r\n  useEffect(() => {\r\n    setTrade(tradeData);\r\n  }, [tradeData]);\r\n\r\n  // Initialize loading state for all images\r\n  useEffect(() => {\r\n    if (trade.images && trade.images.length > 0) {\r\n      const initialLoadingState: { [key: string]: boolean } = {};\r\n\r\n      trade.images.forEach(image => {\r\n        if (!isPendingImage(image)) {\r\n          // Check if image is already in our global cache\r\n          if (imageLoadCache.has(image.url)) {\r\n            // Image was previously loaded, don't show loading state\r\n            initialLoadingState[image.id] = false;\r\n          } else {\r\n            // Image not in cache, check if it's already loaded in browser\r\n            const img = new Image();\r\n            img.onload = () => {\r\n              // Add to cache and update loading state\r\n              imageLoadCache.add(image.url);\r\n              setLoadingImages(prev => ({ ...prev, [image.id]: false }));\r\n            };\r\n            img.onerror = () => {\r\n              // Even on error, don't show loading state anymore\r\n              setLoadingImages(prev => ({ ...prev, [image.id]: false }));\r\n            };\r\n\r\n            // Set initial loading state and start loading\r\n            initialLoadingState[image.id] = true;\r\n            img.src = image.url;\r\n          }\r\n        }\r\n      });\r\n\r\n      setLoadingImages(initialLoadingState);\r\n    }\r\n  }, [trade.images]);\r\n\r\n  // No need to organize tags here as TagsDisplay will handle it\r\n\r\n  // Function to toggle trade type between 'win' and 'loss'\r\n  const handleToggleTradeType = async () => {\r\n    if (!onUpdateTradeProperty || isToggling) return;\r\n\r\n    try {\r\n      setIsToggling(true);\r\n      const result = await onUpdateTradeProperty(trade.id, (currentTrade) => ({\r\n        ...currentTrade,\r\n        type: currentTrade.type === 'win' ? 'loss' : 'win',\r\n        // Flip the amount sign\r\n        amount: currentTrade.type === 'win' ? -Math.abs(currentTrade.amount) : Math.abs(currentTrade.amount)\r\n      }));\r\n      setTrade(result!!);\r\n    } catch (error) {\r\n      console.error('Error toggling trade type:', error);\r\n    } finally {\r\n      setIsToggling(false);\r\n    }\r\n  };\r\n\r\n  // Function to toggle pin status\r\n  const handleTogglePin = async () => {\r\n    if (!onUpdateTradeProperty || isPinning) return;\r\n\r\n    try {\r\n      setIsPinning(true);\r\n      const result = await onUpdateTradeProperty(trade.id, (currentTrade) => ({\r\n        ...currentTrade,\r\n        isPinned: !currentTrade.isPinned\r\n      }));\r\n      setTrade(result!!);\r\n    } catch (error) {\r\n      console.error('Error toggling pin status:', error);\r\n    } finally {\r\n      setIsPinning(false);\r\n    }\r\n  };\r\n\r\n  // Function to toggle tag groups display and save to localStorage\r\n  const handleToggleTagGroups = () => {\r\n    const newValue = !showTagGroups;\r\n    setShowTagGroups(newValue);\r\n    localStorage.setItem('tradeDetail_showTagGroups', JSON.stringify(newValue));\r\n  };\r\n\r\n  if (!isExpanded) return null;\r\n\r\n  return (\r\n    <AnimatedDropdown>\r\n      <Box sx={{\r\n        p: 2,\r\n        borderBottomLeftRadius: 8,\r\n        borderBottomRightRadius: 8,\r\n        borderTopRightRadius: 0,\r\n        borderTopLeftRadius: 0,\r\n        borderLeft: `1px solid ${theme.palette.divider}`,\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n\r\n        backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n        mb: 1,\r\n        width: '100%'\r\n      }}>\r\n        <Stack spacing={3}>\r\n          {/* Header Section */}\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '100%' }}>\r\n            {/* Trade Name */}\r\n            <Box sx={{ flex: 1 }}>\r\n              {trade.name && (\r\n                <Typography variant=\"h6\" color=\"text.primary\" sx={{ display: 'block', fontWeight: 700 }}>\r\n                  📈 {trade.name}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            {/* Action Buttons */}\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n              {/* Share Button */}\r\n              {calendarId && (\r\n                <ShareTradeButton\r\n                  trade={trade}\r\n                  calendarId={calendarId}\r\n                  onTradeUpdated={(updatedTrade) => setTrade(updatedTrade)}\r\n                  onUpdateTradeProperty={onUpdateTradeProperty}\r\n                  size=\"small\"\r\n                  color=\"inherit\"\r\n                />\r\n              )}\r\n\r\n              {/* Pin Button */}\r\n              {onUpdateTradeProperty && (\r\n                <IconButton\r\n                  onClick={handleTogglePin}\r\n                  disabled={isPinning}\r\n                  sx={{\r\n                    color: trade.isPinned ? 'primary.main' : 'text.secondary',\r\n                    '&:hover': {\r\n                      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                      color: 'primary.main'\r\n                    },\r\n                    '&:disabled': {\r\n                      color: 'text.disabled'\r\n                    }\r\n                  }}\r\n                >\r\n                  {isPinning ? (\r\n                    <CircularProgress size={20} color=\"inherit\" />\r\n                  ) : (\r\n                    trade.isPinned ? <UnpinIcon sx={{ fontSize: 20 }} /> : <PinIcon sx={{ fontSize: 20 }} />\r\n                  )}\r\n                </IconButton>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Properties Section */}\r\n          <Box sx={{ width: '100%' }}>\r\n            <Typography variant=\"subtitle2\" color=\"text.primary\" sx={{ mb: 1.5, display: 'block', fontWeight: 700, fontSize: '0.9rem' }}>\r\n              Properties\r\n            </Typography>\r\n\r\n            <Stack spacing={2} sx={{ width: '100%' }}>\r\n              {/* Key Properties Grid */}\r\n              <Box sx={{\r\n                display: 'grid',\r\n                gridTemplateColumns: { xs: '1fr', sm: 'repeat(2, 1fr)' },\r\n                gap: 2,\r\n                width: '100%'\r\n              }}>\r\n                {/* Entry/Exit Prices */}\r\n                {(trade.entry || trade.exit) && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.info.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.info.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5,\r\n                    gridColumn: { xs: '1', sm: 'span 2' }\r\n                  }}>\r\n                    <Box sx={{\r\n                      display: 'flex',\r\n                      flexDirection: { xs: 'column', sm: 'row' }, // Stack vertically on mobile\r\n                      justifyContent: 'space-between',\r\n                      gap: { xs: 1, sm: 0 }, // Add gap on mobile\r\n                      width: '100%'\r\n                    }}>\r\n                      {trade.entry && (\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                          <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                            Entry Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                            {trade.entry}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                      {trade.exit && (\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                          <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                            Exit Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                            {trade.exit}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n                {/* PnL */}\r\n                <Paper elevation={0} sx={{\r\n                  p: 1.5,\r\n                  borderRadius: 2,\r\n                  backgroundColor: alpha(\r\n                    trade.amount > 0 ? theme.palette.success.main :\r\n                      trade.amount < 0 ? theme.palette.error.main :\r\n                        theme.palette.grey[500],\r\n                    0.1\r\n                  ),\r\n                  border: `1px solid ${alpha(\r\n                    trade.amount > 0 ? theme.palette.success.main :\r\n                      trade.amount < 0 ? theme.palette.error.main :\r\n                        theme.palette.grey[500],\r\n                    0.2\r\n                  )}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 0.5\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                    <MoneyIcon sx={{\r\n                      fontSize: 18,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.secondary'\r\n                    }} />\r\n                    <Typography variant=\"caption\" sx={{\r\n                      fontWeight: 600,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.secondary'\r\n                    }}>\r\n                      PnL\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: { xs: 'column', sm: 'row' }, // Stack vertically on mobile\r\n                    justifyContent: 'space-between',\r\n                    alignItems: { xs: 'flex-start', sm: 'center' }, // Align left on mobile\r\n                    gap: { xs: 1, sm: 0 } // Add gap on mobile\r\n                  }}>\r\n                    <Typography variant=\"h6\" sx={{\r\n                      fontWeight: 700,\r\n                      color: trade.amount > 0 ? 'success.main' : trade.amount < 0 ? 'error.main' : 'text.primary',\r\n                      fontSize: '1.1rem'\r\n                    }}>\r\n                      {trade.amount > 0 ? '+' : ''}{trade.amount.toFixed(2)}\r\n                    </Typography>\r\n\r\n                    <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\r\n                      {/* Toggle Button */}\r\n                      {onUpdateTradeProperty && (\r\n                        <Button\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color={trade.type === 'win' ? 'success' : 'error'}\r\n                          onClick={handleToggleTradeType}\r\n                          disabled={isToggling}\r\n                          sx={{\r\n                            minWidth: '80px',\r\n                            fontSize: '0.7rem',\r\n                            position: 'relative'\r\n                          }}\r\n                        >\r\n                          {isToggling ? (\r\n                            <>\r\n                              <CircularProgress\r\n                                size={16}\r\n                                color=\"inherit\"\r\n                                sx={{\r\n                                  position: 'absolute',\r\n                                  left: '8px'\r\n                                }}\r\n                              />\r\n                              Processing...\r\n                            </>\r\n                          ) : (\r\n                            <>Toggle {trade.type === 'win' ? 'Win' : 'Loss'}</>\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                </Paper>\r\n\r\n                {/* Date */}\r\n                <Paper elevation={0} sx={{\r\n                  p: 1.5,\r\n                  borderRadius: 2,\r\n                  backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                  border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 0.5\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                    <CalendarIcon sx={{ fontSize: 18, color: 'primary.main' }} />\r\n                    <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'primary.main' }}>\r\n                      Date\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                    {format(trade.date, 'MMMM d, yyyy')}\r\n                  </Typography>\r\n                </Paper>\r\n\r\n                {/* Risk to Reward */}\r\n                {trade.riskToReward && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.warning.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.warning.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <RiskIcon sx={{ fontSize: 18, color: 'warning.main' }} />\r\n                      <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'warning.main' }}>\r\n                        Risk to Reward\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                        {trade.riskToReward}\r\n                      </Typography>\r\n                      {trade.type === 'win' && trade.riskToReward && (\r\n                        <Typography variant=\"caption\" sx={{\r\n                          color: 'text.secondary',\r\n                          fontSize: '0.75rem',\r\n                          fontWeight: 500\r\n                        }}>\r\n                          Amount Risked: ${(() => {\r\n                            const amountRisked = Math.abs(trade.amount) / trade.riskToReward;\r\n                            return amountRisked.toFixed(2);\r\n                          })()}\r\n                        </Typography>\r\n                      )}\r\n                    </Box>\r\n                  </Paper>\r\n                )}\r\n\r\n                {/* Session */}\r\n                {trade.session && (\r\n                  <Paper elevation={0} sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    backgroundColor: alpha(theme.palette.info.main, 0.05),\r\n                    border: `1px solid ${alpha(theme.palette.info.main, 0.1)}`,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 0.5\r\n                  }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                      <SessionIcon sx={{ fontSize: 18, color: 'info.main' }} />\r\n                      <Typography variant=\"caption\" sx={{ fontWeight: 600, color: 'info.main' }}>\r\n                        Session\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 700, fontSize: '1.1rem' }}>\r\n                      {trade.session}\r\n                    </Typography>\r\n                  </Paper>\r\n                )}\r\n              </Box>\r\n\r\n              <Divider sx={{ my: 1.5 }} />\r\n\r\n              {/* Images */}\r\n              {trade.images && trade.images.length > 0 && (\r\n                <Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\r\n                    <ImageIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\r\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600, display: 'block' }}>\r\n                      Images\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={{\r\n                    width: '100%'\r\n                  }}>\r\n                    {/* Organize images into rows based on their saved layout */}\r\n                    {(() => {\r\n                      // Group images by row\r\n                      const imagesByRow: { [key: number]: TradeImage[] } = {};\r\n\r\n                      // Organize images by row\r\n                      trade.images.forEach(image => {\r\n                        const row = image.row !== undefined ? image.row : 0;\r\n                        if (!imagesByRow[row]) {\r\n                          imagesByRow[row] = [];\r\n                        }\r\n                        imagesByRow[row].push(image);\r\n                      });\r\n\r\n                      const sortedRows = Object.entries(imagesByRow)\r\n                        .sort(([a], [b]) => Number(a) - Number(b))\r\n                        .map(([_, images]) => images);\r\n\r\n                      return sortedRows.map((rowImages, rowIndex) => (\r\n                        <Box\r\n                          key={`row-${rowIndex}`}\r\n                          sx={{\r\n                            display: 'flex',\r\n                            flexDirection: { xs: rowImages.length > 1 ? 'column' : 'row', sm: 'row' }, // Stack images vertically on mobile if multiple\r\n                            width: '100%',\r\n                            mb: 2,\r\n                            gap: 1 // Add small gap between columns\r\n                          }}\r\n                        >\r\n                          {/* Sort images in the row by column */}\r\n                          {rowImages\r\n                            .sort((a, b) => (a.column || 0) - (b.column || 0))\r\n                            .map((image, colIndex) => (\r\n                              <Box\r\n                                key={`image-${image.id}-${rowIndex}-${colIndex}`}\r\n                                sx={{\r\n                                  width: {\r\n                                    xs: rowImages.length > 1 ? '100%' : `${image.columnWidth || 100}%`, // Full width on mobile if multiple images\r\n                                    sm: `${image.columnWidth || 100}%`\r\n                                  },\r\n                                  borderRadius: 1,\r\n                                  overflow: 'hidden',\r\n                                  position: 'relative'\r\n                                }}\r\n                              >\r\n                                <Box\r\n                                  sx={{\r\n                                    position: 'relative',\r\n                                    '&:hover .overlay': {\r\n                                      opacity: 1\r\n                                    },\r\n                                    ...(image.width && image.height ? {\r\n                                      paddingTop: `${(image.height / image.width) * 100}%`,\r\n                                      maxHeight: rowImages.length > 1 ? '300px' : 'none',\r\n                                      overflow: 'hidden',\r\n                                      width: '100%',\r\n                                      height: 'auto'\r\n                                    } : {})\r\n                                  }}\r\n                                >\r\n                                  {/* Loading placeholder */}\r\n                                  {image.width && image.height && isImageLoading(image, loadingImages) && (\r\n                                    <Box\r\n                                      sx={{\r\n                                        position: 'absolute',\r\n                                        top: 0,\r\n                                        left: 0,\r\n                                        width: '100%',\r\n                                        height: '100%',\r\n                                        backgroundColor: theme => alpha(theme.palette.divider, 0.2),\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        zIndex: 1\r\n                                      }}\r\n                                    >\r\n\r\n                                    </Box>\r\n                                  )}\r\n\r\n                                  {/* Image container */}\r\n                                  <Box\r\n                                    sx={{\r\n                                      position: 'absolute',\r\n                                      top: 0,\r\n                                      left: 0,\r\n                                      width: '100%',\r\n                                      height: '100%',\r\n                                      zIndex: 2,\r\n                                      cursor: isImageLoading(image, loadingImages) ? 'default' : 'pointer',\r\n                                      ...(isImageLoading(image, loadingImages) && {\r\n                                        background: (theme) => {\r\n                                          const baseColor = theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.05)' : 'rgba(0, 0, 0, 0.04)';\r\n                                          const shimmerColor = theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.15)' : 'rgba(0, 0, 0, 0.1)';\r\n                                          return `linear-gradient(90deg, ${baseColor} 25%, ${shimmerColor} 50%, ${baseColor} 75%)`;\r\n                                        },\r\n                                        backgroundSize: '200% 100%',\r\n                                        animation: `${shimmer} 1.5s infinite linear`,\r\n                                        willChange: 'background-position',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center'\r\n                                      })\r\n                                    }}\r\n                                  >\r\n                                    {isPendingImage(image) ? (\r\n                                      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>\r\n                                        <CircularProgress size={24} color=\"primary\" />\r\n                                        <Typography variant=\"caption\" sx={{ color: 'text.secondary', fontWeight: 500 }}>\r\n                                          Uploading...\r\n                                        </Typography>\r\n                                      </Box>\r\n                                    ) : (\r\n                                      <img\r\n                                        src={image.url}\r\n                                        alt={image.caption || `Trade Image`}\r\n                                        style={{\r\n                                          width: '100%',\r\n                                          maxHeight: rowImages.length > 1 ? '300px' : 'none',\r\n                                          objectFit: 'contain',\r\n                                          position: image.width && image.height ? 'absolute' : 'relative',\r\n                                          top: 0,\r\n                                          left: 0,\r\n                                          height: image.width && image.height ? '100%' : 'auto',\r\n                                          opacity: loadingImages[image.id] ? 0 : 1,\r\n                                          transition: 'opacity 0.3s ease-in-out'\r\n                                        }}\r\n                                        onLoad={() => {\r\n                                          // Mark this image as loaded\r\n                                          setLoadingImages(prev => ({\r\n                                            ...prev,\r\n                                            [image.id]: false\r\n                                          }));\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                  </Box>\r\n\r\n                                  {/* Zoom overlay */}\r\n                                  {!isImageLoading(image, loadingImages) && (\r\n                                    <Box\r\n                                      className=\"overlay\"\r\n                                      sx={{\r\n                                        position: 'absolute',\r\n                                        top: 0,\r\n                                        left: 0,\r\n                                        right: 0,\r\n                                        bottom: 0,\r\n                                        backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        opacity: 0,\r\n                                        transition: 'opacity 0.2s ease-in-out',\r\n                                        cursor: 'pointer',\r\n                                        zIndex: 3\r\n                                      }}\r\n                                      onClick={() => {\r\n                                        // Get all non-pending image URLs\r\n                                        const allImageUrls = trade.images\r\n                                          ?.filter(img => !isPendingImage(img))\r\n                                          .map(img => img.url) || [];\r\n\r\n                                        // Find the index of the current image\r\n                                        const currentIndex = allImageUrls.findIndex(url => url === image.url);\r\n\r\n                                        // Pass all images and the current index to the zoom dialog\r\n                                        setZoomedImage(image.url, allImageUrls, currentIndex);\r\n                                      }}\r\n                                    >\r\n                                      <ZoomInIcon sx={{ color: 'white', fontSize: 32 }} />\r\n                                    </Box>\r\n                                  )}\r\n                                </Box>\r\n                                {image.caption && (\r\n                                  <Box sx={{\r\n                                    p: 1,\r\n                                    borderTop: `1px solid ${theme.palette.divider}`,\r\n                                    backgroundColor: alpha(theme.palette.background.paper, 0.7),\r\n                                    maxHeight: 'none', // Ensure no max height constraint\r\n                                    overflow: 'visible' // Prevent scrollbars\r\n                                  }}>\r\n                                    <Typography variant=\"caption\" sx={{\r\n                                      color: 'text.secondary',\r\n                                      display: 'block',\r\n                                      whiteSpace: 'pre-line',\r\n                                      fontSize: '0.7rem', // Even smaller font size for captions in view mode\r\n                                      lineHeight: 1.3, // Tighter line height for better readability\r\n                                      overflow: 'visible' // Prevent scrollbars\r\n                                    }}>\r\n                                      {image.caption}\r\n                                    </Typography>\r\n                                  </Box>\r\n                                )}\r\n                              </Box>\r\n                            ))\r\n                          }\r\n                        </Box>\r\n                      ));\r\n                    })()\r\n                    }\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n              {/* Notes */}\r\n              {trade.notes && (\r\n                <Box>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, mb: 0.5 }}>\r\n                    <NoteIcon sx={{ fontSize: 16, color: 'text.secondary' }} />\r\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600, display: 'block' }}>\r\n                      Notes\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={{\r\n                    borderRadius: 1,\r\n                    backgroundColor: alpha(theme.palette.background.paper, 0.7),\r\n                    overflow: 'visible',\r\n                    p: 1\r\n                  }}>\r\n                    <RichTextEditor\r\n                      value={trade.notes}\r\n                      disabled={true}\r\n                      hideCharacterCount={true}\r\n                      minHeight={50}\r\n                      maxHeight={400}\r\n                      calendarId={calendarId}\r\n                      trades={trades}\r\n                      onOpenGalleryMode={onOpenGalleryMode}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n\r\n              {/* Tags Section */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\r\n                  <Typography variant=\"subtitle2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: '0.9rem' }}>\r\n                    Tags\r\n                  </Typography>\r\n                  <Tooltip title={showTagGroups ? \"Show flat tag list\" : \"Group tags by category\"}>\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={handleToggleTagGroups}\r\n                      sx={{\r\n                        color: 'text.secondary',\r\n                        '&:hover': {\r\n                          backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                          color: 'primary.main'\r\n                        }\r\n                      }}\r\n                    >\r\n                      {showTagGroups ? <ViewListIcon sx={{ fontSize: 18 }} /> : <CategoryIcon sx={{ fontSize: 18 }} />}\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n\r\n                <Box sx={{ pl: 1 }}>\r\n                  <TagsDisplay\r\n                    tags={trade.tags || []}\r\n                    showGroups={showTagGroups}\r\n                    chipSize=\"medium\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n\r\n\r\n\r\n\r\n        </Stack>\r\n      </Box>\r\n    </AnimatedDropdown>\r\n  );\r\n};\r\n\r\nexport default TradeDetailExpanded;\r\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  CircularProgress\n} from '@mui/material';\n\ninterface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n  isSubmitting?: boolean;\n  confirmColor?: 'primary' | 'error' | 'warning' | 'success' | 'info';\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  open,\n  title,\n  message,\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  onConfirm,\n  onCancel,\n  isSubmitting = false,\n  confirmColor = 'primary'\n}) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onCancel}\n      maxWidth=\"xs\"\n      fullWidth\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <Typography>{message}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={onCancel}\n          disabled={isSubmitting}\n        >\n          {cancelText}\n        </Button>\n        <Button\n          onClick={onConfirm}\n          color={confirmColor}\n          variant=\"contained\"\n          disabled={isSubmitting}\n          sx={{\n            minWidth: '100px',\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 1\n          }}\n        >\n          {confirmText}\n          {isSubmitting && (\n            <CircularProgress\n              size={20}\n              sx={{\n                position: 'static'\n              }}\n            />\n          )}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport {\r\n  Dialog,\r\n  Box,\r\n  IconButton,\r\n  useTheme\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  ZoomIn as ZoomInIcon,\r\n  RestartAlt as RestartAltIcon,\r\n  ArrowBackIos as ArrowBackIcon,\r\n  ArrowForwardIos as ArrowForwardIcon\r\n} from '@mui/icons-material';\r\nimport { scrollbarStyles } from '../styles/scrollbarStyles';\r\n\r\ninterface ImageZoomDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  imageProp: ImageZoomProp; \r\n}\r\n\r\nexport interface ImageZoomProp{\r\n  selectetdImageIndex: number;\r\n  allImages: string[];\r\n}\r\n\r\nconst ImageZoomDialog: React.FC<ImageZoomDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  imageProp, \r\n}) => {\r\n  // For backward compatibility, if imageUrl is provided but not images\r\n  const images = imageProp?.allImages || [];\r\n  const imageUrl = imageProp?.allImages[imageProp?.selectetdImageIndex || 0];\r\n   \r\n  const imageArray = images.length > 0 ? images : (imageUrl ? [imageUrl] : []);\r\n  const [imageData, setImageData] = useState<ImageZoomProp>(imageProp);\r\n if(imageData==null && imageProp){\r\n  setImageData(imageProp);\r\n }\r\n  const theme = useTheme();\r\n  const [scale, setScale] = useState(1);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const imageRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleWheel = (e: React.WheelEvent) => {\r\n    e.preventDefault();\r\n    const delta = e.deltaY;\r\n    const newScale = delta > 0\r\n      ? Math.max(1, scale - 0.1)\r\n      : Math.min(3, scale + 0.1);\r\n\r\n    setScale(newScale);\r\n  };\r\n\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    if (scale > 1) {\r\n      e.preventDefault();\r\n      setIsDragging(true);\r\n      setDragStart({\r\n        x: e.clientX - position.x,\r\n        y: e.clientY - position.y\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!isDragging || scale <= 1) return;\r\n\r\n    e.preventDefault();\r\n    const newX = e.clientX - dragStart.x;\r\n    const newY = e.clientY - dragStart.y;\r\n\r\n    if (imageRef.current && containerRef.current) {\r\n      // We only need the image rect for calculating bounds\r\n      const imageRect = imageRef.current.getBoundingClientRect();\r\n\r\n      const maxX = (imageRect.width * (scale - 1)) / 2;\r\n      const maxY = (imageRect.height * (scale - 1)) / 2;\r\n\r\n      const boundedX = Math.min(Math.max(-maxX, newX), maxX);\r\n      const boundedY = Math.min(Math.max(-maxY, newY), maxY);\r\n\r\n      setPosition({\r\n        x: boundedX,\r\n        y: boundedY\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const resetZoom = () => {\r\n    setScale(1);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  // Navigation functions\r\n  const navigateNext = useCallback(() => {\r\n    if (imageArray.length <= 1) return;\r\n    setImageData((prev) => {\r\n      if (prev) {\r\n        return {\r\n          ...prev,\r\n          selectetdImageIndex: (prev.selectetdImageIndex + 1) % imageArray.length\r\n        };\r\n      }\r\n      return prev;\r\n    });\r\n  }, [imageArray.length]);\r\n\r\n  const navigatePrevious = useCallback(() => {\r\n    if (imageArray.length <= 1) return;\r\n    setImageData((prev) => {\r\n      if (prev) {\r\n        return {\r\n          ...prev,\r\n          selectetdImageIndex: (prev.selectetdImageIndex - 1 + imageArray.length) % imageArray.length\r\n        };\r\n      }\r\n      return prev;\r\n    });\r\n  }, [imageArray.length]);\r\n\r\n  // Reset zoom when image changes\r\n  useEffect(() => {\r\n    if (open) {\r\n      resetZoom();\r\n    }\r\n  }, [open, imageData]);\r\n\r\n  // Handle keyboard navigation\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (!open) return;\r\n\r\n      if (e.key === 'ArrowLeft') {\r\n        navigatePrevious();\r\n      } else if (e.key === 'ArrowRight') {\r\n        navigateNext();\r\n      } else if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [open, imageData, imageArray.length, navigatePrevious, navigateNext, onClose]);\r\n\r\n  // Add event listeners for mouse up on document level\r\n  useEffect(() => {\r\n    const handleGlobalMouseUp = () => {\r\n      setIsDragging(false);\r\n    };\r\n\r\n    document.addEventListener('mouseup', handleGlobalMouseUp);\r\n    return () => {\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          boxShadow: 'none',\r\n          backgroundColor: 'transparent',\r\n          overflow: 'hidden',\r\n          maxWidth: '80%',\r\n          '& .MuiDialogContent-root': {\r\n            ...scrollbarStyles(theme)\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {imageArray.length > 0 && (\r\n        <>\r\n          {/* Navigation buttons */}\r\n          {imageArray.length > 1 && (\r\n            <>\r\n              <Box\r\n                sx={{\r\n                  position: 'absolute',\r\n                  left: 16,\r\n                  top: '50%',\r\n                  transform: 'translateY(-50%)',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  zIndex: 1200\r\n                }}\r\n              >\r\n                <IconButton\r\n                  onClick={navigatePrevious}\r\n                  sx={{\r\n                    color: 'white',\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    '&:hover': {\r\n                      backgroundColor: 'rgba(0, 0, 0, 0.7)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <ArrowBackIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  position: 'absolute',\r\n                  right: 16,\r\n                  top: '50%',\r\n                  transform: 'translateY(-50%)',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  zIndex: 1200\r\n                }}\r\n              >\r\n                <IconButton\r\n                  onClick={navigateNext}\r\n                  sx={{\r\n                    color: 'white',\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    '&:hover': {\r\n                      backgroundColor: 'rgba(0, 0, 0, 0.7)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <ArrowForwardIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </>\r\n          )}\r\n\r\n          {/* Image counter */}\r\n          {imageArray.length > 1 && (\r\n            <Box\r\n              sx={{\r\n                position: 'absolute',\r\n                bottom: 16,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                color: 'white',\r\n                borderRadius: 1,\r\n                px: 1.5,\r\n                py: 0.5,\r\n                fontSize: '0.875rem',\r\n                fontWeight: 500,\r\n                zIndex: 1200\r\n              }}\r\n            >\r\n              {imageData?.selectetdImageIndex!! + 1} / {imageArray.length}\r\n            </Box>\r\n          )}\r\n          <Box\r\n          ref={containerRef}\r\n          sx={{\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '80vh',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            overflow: 'hidden',\r\n            cursor: scale > 1 ? 'grab' : 'default',\r\n            '&:active': {\r\n              cursor: scale > 1 ? 'grabbing' : 'default'\r\n            }\r\n          }}\r\n          onWheel={handleWheel}\r\n          onMouseDown={handleMouseDown}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseLeave}\r\n        >\r\n          <Box\r\n            sx={{\r\n              position: 'relative',\r\n              transform: `scale(${scale}) translate(${position.x}px, ${position.y}px)`,\r\n              transition: isDragging ? 'none' : 'transform 0.1s ease-out'\r\n            }}\r\n          >\r\n            <img\r\n              ref={imageRef}\r\n              src={imageArray[imageData?.selectetdImageIndex || 0]}\r\n              alt={`Trade Image ${imageData?.selectetdImageIndex!! + 1} of ${imageArray.length}`}\r\n              style={{\r\n                maxWidth: '100%',\r\n                maxHeight: '100%',\r\n                objectFit: 'contain',\r\n                userSelect: 'none',\r\n                pointerEvents: 'none'\r\n              }}\r\n            />\r\n          </Box>\r\n\r\n\r\n          {/* Controls */}\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 16,\r\n              right: 16,\r\n              display: 'flex',\r\n              gap: 1,\r\n              backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n              borderRadius: 1,\r\n              p: 0.5\r\n            }}\r\n          >\r\n            <IconButton\r\n              onClick={() => setScale(Math.max(1, scale - 0.1))}\r\n              disabled={scale <= 1}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <ZoomInIcon sx={{ transform: 'rotate(45deg)' }} />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => setScale(Math.min(3, scale + 0.1))}\r\n              disabled={scale >= 3}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <ZoomInIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={resetZoom}\r\n              disabled={scale === 1}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <RestartAltIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={onClose}\r\n              sx={{\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\r\n                }\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n        </>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ImageZoomDialog;\r\n","import React, { ReactNode } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogProps,\r\n  IconButton,\r\n  Typography,\r\n  Box,\r\n  useTheme,\r\n  Button,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { Close as CloseIcon } from '@mui/icons-material';\r\nimport { dialogProps } from '../../styles/dialogStyles';\r\nimport { scrollbarStyles } from '../../styles/scrollbarStyles';\r\nimport {\r\n  DialogTitleStyled,\r\n  DialogContentStyled,\r\n  DialogActionsStyled\r\n} from '../StyledComponents';\r\n\r\nexport interface BaseDialogProps extends Omit<DialogProps, 'title'> {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  title: ReactNode;\r\n  actions?: ReactNode;\r\n  children: ReactNode;\r\n  maxWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n  fullWidth?: boolean;\r\n  hideCloseButton?: boolean;\r\n  hideFooterCancelButton?: boolean;\r\n  cancelButtonText?: string;\r\n  cancelButtonAction?: () => void;\r\n  primaryButtonText?: string;\r\n  primaryButtonAction?: (e?: React.FormEvent) => void;\r\n  isSubmitting?: boolean;\r\n  contentSx?: any;\r\n}\r\n\r\nconst BaseDialog: React.FC<BaseDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  title,\r\n  actions,\r\n  children,\r\n  maxWidth = 'sm',\r\n  fullWidth = true,\r\n  hideCloseButton = false,\r\n  hideFooterCancelButton = false,\r\n  cancelButtonText = 'Cancel',\r\n  cancelButtonAction,\r\n  primaryButtonText = 'Save',\r\n  primaryButtonAction,\r\n  isSubmitting = false,\r\n  contentSx = {},\r\n  ...rest\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth={maxWidth}\r\n      fullWidth={fullWidth}\r\n      {...dialogProps}\r\n      slotProps={{\r\n        paper: {\r\n          sx: {\r\n            borderRadius: 2,\r\n            boxShadow: 'none',\r\n            border: `1px solid ${theme.palette.divider}`,\r\n            maxHeight: '90vh',\r\n            overflow: 'hidden',\r\n            '& .MuiDialogContent-root': {\r\n              ...scrollbarStyles(theme)\r\n            }\r\n          }\r\n        }\r\n      }}\r\n      {...rest}\r\n    >\r\n      <DialogTitleStyled>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\r\n          {typeof title === 'string' ? (\r\n            <Typography variant=\"h6\">{title}</Typography>\r\n          ) : (\r\n            title\r\n          )}\r\n        </Box>\r\n        {!hideCloseButton && (\r\n          <IconButton onClick={onClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </DialogTitleStyled>\r\n\r\n      <DialogContentStyled sx={contentSx}>\r\n        {children}\r\n      </DialogContentStyled>\r\n\r\n      {(actions || !hideFooterCancelButton || primaryButtonAction) && (\r\n        <DialogActionsStyled>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n\r\n            {(!hideFooterCancelButton || cancelButtonAction) && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={cancelButtonAction || onClose}\r\n              >\r\n                {cancelButtonText}\r\n              </Button>\r\n            )}\r\n\r\n            {actions}\r\n\r\n            {primaryButtonAction && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={primaryButtonAction}\r\n                disabled={isSubmitting}\r\n                sx={{\r\n                  minWidth: '100px',\r\n                  position: 'relative',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  gap: 1\r\n                }}\r\n              >\r\n                {primaryButtonText}\r\n                {isSubmitting && (\r\n                  <CircularProgress\r\n                    size={16}\r\n                    sx={{\r\n                      position: 'static'\r\n                    }}\r\n                  />\r\n                )}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </DialogActionsStyled>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BaseDialog;\r\n","import React, { useMemo } from 'react';\r\nimport { Box, Chip, Typography, useTheme } from '@mui/material';\r\nimport { Label as TagIcon } from '@mui/icons-material';\r\nimport {\r\n  getTagChipStyles,\r\n  formatTagForDisplay,\r\n  isGroupedTag,\r\n  getTagGroup,\r\n  getUniqueTagGroups,\r\n  filterTagsByGroup,\r\n  getTagName\r\n} from '../../utils/tagColors';\r\n\r\ninterface TagsDisplayProps {\r\n  tags: string[];\r\n  onTagClick?: (tag: string) => void;\r\n  onTagDelete?: (tag: string) => void;\r\n  showGroups?: boolean;\r\n  chipSize?: 'small' | 'medium';\r\n  maxHeight?: string | number;\r\n}\r\n\r\nconst TagsDisplay: React.FC<TagsDisplayProps> = ({\r\n  tags,\r\n  onTagClick,\r\n  onTagDelete,\r\n  showGroups = true,\r\n  chipSize = 'small',\r\n  maxHeight\r\n}) => {\r\n  // Filter out Partials tags\r\n  const filteredTags = tags.filter(tag => !tag.startsWith('Partials:'));\r\n  const theme = useTheme();\r\n\r\n  // Organize tags by category\r\n  const organizedTags = useMemo(() => {\r\n    if (!filteredTags || filteredTags.length === 0) return { groups: {}, ungroupedTags: [] };\r\n\r\n    const groups: Record<string, string[]> = {};\r\n    const ungroupedTags: string[] = [];\r\n\r\n    // Get all unique groups\r\n    const uniqueGroups = getUniqueTagGroups(filteredTags);\r\n\r\n    // Initialize groups\r\n    uniqueGroups.forEach(group => {\r\n      groups[group] = filterTagsByGroup(filteredTags || [], group);\r\n    });\r\n\r\n    // Get ungrouped tags\r\n    filteredTags.forEach(tag => {\r\n      if (!isGroupedTag(tag)) {\r\n        ungroupedTags.push(tag);\r\n      }\r\n    });\r\n\r\n    return { groups, ungroupedTags };\r\n  }, [filteredTags]);\r\n\r\n  if (!filteredTags || filteredTags.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      gap: 1,\r\n      maxHeight: maxHeight,\r\n      overflowY: maxHeight ? 'auto' : 'visible'\r\n    }}>\r\n      {showGroups && Object.keys(organizedTags.groups).length > 0 && (\r\n        <>\r\n          {Object.entries(organizedTags.groups).map(([group, groupTags]) => (\r\n            <Box key={group} sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\r\n                {group}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                {groupTags.map(tag => (\r\n                  <Chip\r\n                    key={tag}\r\n                    label={getTagName(tag)}\r\n                    size={chipSize}\r\n                    onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n                    onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n                    sx={getTagChipStyles(tag, theme)}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      {organizedTags.ungroupedTags.length > 0 && (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n          {showGroups && Object.keys(organizedTags.groups).length > 0 && (\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\r\n              Tags\r\n            </Typography>\r\n          )}\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n            {organizedTags.ungroupedTags.map(tag => (\r\n              <Chip\r\n                key={tag}\r\n                label={formatTagForDisplay(tag)}\r\n                size={chipSize}\r\n                onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n                onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n                sx={getTagChipStyles(tag, theme)}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {!showGroups && (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1}}>\r\n          {filteredTags.map(tag => (\r\n            <Chip\r\n              key={tag}\r\n              label={formatTagForDisplay(tag)}\r\n              size={chipSize}\r\n              onClick={onTagClick ? () => onTagClick(tag) : undefined}\r\n              onDelete={onTagDelete ? () => onTagDelete(tag) : undefined}\r\n              sx={getTagChipStyles(tag, theme)}\r\n            />\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TagsDisplay;\r\n","import React, { JSX, ReactNode } from 'react';\r\nimport { \r\n  TextField, \r\n  TextFieldProps, \r\n  FormControl, \r\n  InputLabel, \r\n  Select, \r\n  MenuItem, \r\n  SelectProps,\r\n  Autocomplete,\r\n  AutocompleteProps,\r\n  Box,\r\n  Typography\r\n} from '@mui/material';\r\n\r\n// Text Field\r\ninterface TextInputProps extends Omit<TextFieldProps, 'label'> {\r\n  label: string;\r\n  helperText?: string;\r\n}\r\n\r\nexport const TextInput: React.FC<TextInputProps> = ({ \r\n  label, \r\n  helperText,\r\n  ...rest \r\n}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <TextField\r\n        label={label}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        size=\"small\"\r\n        {...rest}\r\n      />\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Select Field\r\ninterface SelectInputProps extends Omit<SelectProps, 'label'> {\r\n  label: string;\r\n  options: Array<{ value: string | number; label: string }>;\r\n  helperText?: string;\r\n}\r\n\r\nexport const SelectInput: React.FC<SelectInputProps> = ({ \r\n  label, \r\n  options, \r\n  helperText,\r\n  ...rest \r\n}) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <FormControl fullWidth size=\"small\">\r\n        <InputLabel>{label}</InputLabel>\r\n        <Select\r\n          label={label}\r\n          {...rest}\r\n        >\r\n          {options.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Autocomplete Field\r\ninterface AutocompleteInputProps<T> extends Omit<AutocompleteProps<T, boolean, boolean, boolean>, 'renderInput'> {\r\n  label: string;\r\n  helperText?: string;\r\n  textFieldProps?: Partial<TextFieldProps>;\r\n}\r\n\r\nexport function AutocompleteInput<T>({ \r\n  label, \r\n  helperText,\r\n  textFieldProps,\r\n  ...rest \r\n}: AutocompleteInputProps<T>): JSX.Element {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\r\n      <Autocomplete\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={label}\r\n            size=\"small\"\r\n            {...textFieldProps}\r\n          />\r\n        )}\r\n        {...rest}\r\n      />\r\n      {helperText && (\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Form Section\r\ninterface FormSectionProps {\r\n  title?: string;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const FormSection: React.FC<FormSectionProps> = ({ title, children }) => {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n      {title && (\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Form Row (for horizontal layout)\r\ninterface FormRowProps {\r\n  children: ReactNode;\r\n  spacing?: number;\r\n}\r\n\r\nexport const FormRow: React.FC<FormRowProps> = ({ children, spacing = 2 }) => {\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: { xs: 'column', sm: 'row' }, \r\n      gap: spacing,\r\n      '& > *': { flex: 1 }\r\n    }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Form Actions\r\ninterface FormActionsProps {\r\n  children: ReactNode;\r\n  align?: 'left' | 'center' | 'right';\r\n  spacing?: number;\r\n}\r\n\r\nexport const FormActions: React.FC<FormActionsProps> = ({ \r\n  children, \r\n  align = 'right',\r\n  spacing = 1 \r\n}) => {\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      justifyContent: align === 'left' ? 'flex-start' : align === 'center' ? 'center' : 'flex-end',\r\n      gap: spacing,\r\n      mt: 2\r\n    }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n","import { EditorState, ContentState, convertFromRaw, convertToRaw } from 'draft-js';\n\n/**\n * Safely create an EditorState from a value string\n * @param value - The value to parse (JSON string or plain text)\n * @returns EditorState\n */\nexport function createEditorStateFromValue(value?: string): EditorState {\n  if (!value) {\n    return EditorState.createEmpty();\n  }\n\n  try {\n    // Try to parse the value as raw content\n    const rawContent = JSON.parse(value);\n    \n    // Basic validation for Draft.js raw content structure\n    if (\n      rawContent &&\n      typeof rawContent === 'object' &&\n      Array.isArray(rawContent.blocks) &&\n      typeof rawContent.entityMap === 'object'\n    ) {\n      const contentState = convertFromRaw(rawContent);\n      return EditorState.createWithContent(contentState);\n    } else {\n      // If not valid raw JSON, treat as plain text\n      return EditorState.createWithContent(ContentState.createFromText(value));\n    }\n  } catch (error) {\n    // If parsing fails, create with plain text\n    console.warn('RichTextEditor: Failed to parse initial value as Draft.js raw content. Treating as plain text.', error);\n    return EditorState.createWithContent(ContentState.createFromText(value));\n  }\n}\n\n/**\n * Check if two editor states have the same content\n * @param state1 - First editor state\n * @param state2 - Second editor state\n * @returns True if content is the same\n */\nexport function hasContentChanged(state1: EditorState, state2: EditorState): boolean {\n  const content1 = state1.getCurrentContent();\n  const content2 = state2.getCurrentContent();\n  \n  // Quick reference check first\n  if (content1 === content2) {\n    return false;\n  }\n  \n  try {\n    const raw1 = convertToRaw(content1);\n    const raw2 = convertToRaw(content2);\n    return JSON.stringify(raw1) !== JSON.stringify(raw2);\n  } catch (error) {\n    console.warn('Error comparing editor content:', error);\n    // Fallback to reference comparison\n    return content1 !== content2;\n  }\n}\n\n/**\n * Get content as JSON string from EditorState\n * @param editorState - The editor state\n * @returns JSON string representation\n */\nexport function getContentAsJson(editorState: EditorState): string {\n  try {\n    const contentState = editorState.getCurrentContent();\n    const rawContent = convertToRaw(contentState);\n    return JSON.stringify(rawContent);\n  } catch (error) {\n    console.error('Error converting editor content to JSON:', error);\n    return '{\"blocks\":[],\"entityMap\":{}}'; // Return empty content as fallback\n  }\n}\n\n/**\n * Check if editor has any content\n * @param editorState - The editor state\n * @returns True if editor has content\n */\nexport function hasContent(editorState: EditorState): boolean {\n  const contentState = editorState.getCurrentContent();\n  return contentState.hasText() || contentState.getBlockMap().size > 1;\n}\n","/**\n * Color constants for the RichTextEditor\n */\n\nexport interface ColorOption {\n  label: string;\n  color: string;\n}\n\n// Define text color options\nexport const TEXT_COLORS: ColorOption[] = [\n  { label: 'Default', color: 'default' }, // Handled specially in rendering\n  { label: 'Black', color: '#000000' },\n  { label: 'White', color: '#FFFFFF' },\n  { label: 'Brown', color: '#BA856F' },\n  { label: 'Orange', color: '#C07A47' },\n  { label: 'Yellow', color: '#B58A48' },\n  { label: 'Green', color: '#427256' },\n  { label: 'Blue', color: '#379AD3' },\n  { label: 'Purple', color: '#9664C9' },\n  { label: 'Pink', color: '#9B4342' },\n  { label: 'Red', color: '#BC4B4A' },\n];\n\n// Define background color options\nexport const BACKGROUND_COLORS: ColorOption[] = [\n  { label: 'Default', color: 'default' }, // Handled specially\n  { label: 'Black', color: '#000000' },\n  { label: 'Dark Gray', color: '#2F2F2F' },\n  { label: 'Brown', color: '#4A3228' },\n  { label: 'Orange', color: '#5C3B23' },\n  { label: 'Yellow', color: '#564328' },\n  { label: 'Green', color: '#243D30' },\n  { label: 'Blue', color: '#143A4E' },\n  { label: 'Purple', color: '#3C2D49' },\n  { label: 'Pink', color: '#4E2C3C' },\n  { label: 'Red', color: '#522E2A' },\n];\n\n// LocalStorage keys for recently used colors\nexport const STORAGE_KEYS = {\n  RECENT_TEXT_COLORS: 'richTextEditor_recentTextColors',\n  RECENT_BG_COLORS: 'richTextEditor_recentBgColors',\n} as const;\n","/**\n * Heading constants for the RichTextEditor\n */\n\nexport interface HeadingOption {\n  label: string;\n  style: string;\n}\n\n// Define heading options\nexport const HEADING_OPTIONS: HeadingOption[] = [\n  { label: 'Normal', style: 'unstyled' },\n  { label: 'Heading 1', style: 'header-one' },\n  { label: 'Heading 2', style: 'header-two' },\n  { label: 'Heading 3', style: 'header-three' },\n];\n\n// Define alignment options\nexport interface AlignmentOption {\n  label: string;\n  style: string;\n  icon: string; // We'll use this to determine which icon to show\n}\n\nexport const ALIGNMENT_OPTIONS: AlignmentOption[] = [\n  { label: 'Align Left', style: 'align-left', icon: 'left' },\n  { label: 'Align Center', style: 'align-center', icon: 'center' },\n  { label: 'Align Right', style: 'align-right', icon: 'right' },\n];\n\n// Keyboard shortcuts for common formatting\nexport const KEYBOARD_SHORTCUTS = {\n  BOLD: 'Ctrl+B',\n  ITALIC: 'Ctrl+I',\n  UNDERLINE: 'Ctrl+U',\n} as const;\n","/**\n * Safe localStorage operations with error handling\n */\n\nexport interface ColorItem {\n  label: string;\n  color: string;\n}\n\n/**\n * Safely get an item from localStorage with error handling\n * @param key - The localStorage key\n * @param defaultValue - Default value to return if key doesn't exist or parsing fails\n * @returns Parsed value or default value\n */\nexport function safeGetLocalStorage<T>(key: string, defaultValue: T): T {\n  try {\n    const item = localStorage.getItem(key);\n    if (item === null) {\n      return defaultValue;\n    }\n    return JSON.parse(item);\n  } catch (error) {\n    console.warn(`Failed to get localStorage item \"${key}\":`, error);\n    return defaultValue;\n  }\n}\n\n/**\n * Safely set an item in localStorage with error handling\n * @param key - The localStorage key\n * @param value - The value to store\n * @returns Success boolean\n */\nexport function safeSetLocalStorage<T>(key: string, value: T): boolean {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.warn(`Failed to set localStorage item \"${key}\":`, error);\n    return false;\n  }\n}\n\n/**\n * Update recently used colors list with proper deduplication and limits\n * @param newColor - The color to add to recent list\n * @param currentList - Current list of recent colors\n * @param maxItems - Maximum number of items to keep (default: 5)\n * @returns Updated list\n */\nexport function updateRecentColors(\n  newColor: ColorItem,\n  currentList: ColorItem[],\n  maxItems = 5\n): ColorItem[] {\n  // Remove the color if it already exists\n  const filtered = currentList.filter(c => c.color !== newColor.color);\n  // Add to front and limit to maxItems\n  return [newColor, ...filtered].slice(0, maxItems);\n}\n\n/**\n * Load recently used colors from localStorage\n * @param key - The localStorage key\n * @returns Array of color items\n */\nexport function loadRecentColors(key: string): ColorItem[] {\n  return safeGetLocalStorage<ColorItem[]>(key, []);\n}\n\n/**\n * Save recently used colors to localStorage\n * @param key - The localStorage key\n * @param colors - Array of color items to save\n * @returns Success boolean\n */\nexport function saveRecentColors(key: string, colors: ColorItem[]): boolean {\n  return safeSetLocalStorage(key, colors);\n}\n","/**\n * Utility functions for handling text selection and positioning\n */\n\nexport interface Position {\n  top: number;\n  left: number;\n}\n\nexport interface ToolbarDimensions {\n  width: number;\n  height: number;\n}\n\n/**\n * Safely get the selection rectangle\n * @returns DOMRect or null if no valid selection\n */\nexport function getSelectionRect(): DOMRect | null {\n  try {\n    const selection = window.getSelection();\n    if (!selection || selection.rangeCount === 0 || selection.isCollapsed) {\n      return null;\n    }\n    const range = selection.getRangeAt(0);\n    const rect = range.getBoundingClientRect();\n    \n    // Validate the rectangle has meaningful dimensions\n    if (rect.width === 0 && rect.height === 0) {\n      return null;\n    }\n    \n    return rect;\n  } catch (error) {\n    console.error('Error getting selection rect:', error);\n    return null;\n  }\n}\n\n/**\n * Check if there is a valid text selection\n * @returns True if there is a non-collapsed selection\n */\nexport function hasValidSelection(): boolean {\n  try {\n    const selection = window.getSelection();\n    return Boolean(selection && !selection.isCollapsed && selection.rangeCount > 0);\n  } catch (error) {\n    console.error('Error checking selection:', error);\n    return false;\n  }\n}\n\n/**\n * Calculate optimal toolbar position relative to selection\n * @param selectionRect - The selection rectangle\n * @param editorRect - The editor container rectangle\n * @param toolbarDimensions - Toolbar width and height\n * @param scrollTop - Editor scroll top position\n * @param scrollLeft - Editor scroll left position\n * @returns Calculated position\n */\nexport function calculateToolbarPosition(\n  selectionRect: DOMRect,\n  editorRect: DOMRect,\n  toolbarDimensions: ToolbarDimensions,\n  scrollTop: number,\n  scrollLeft: number\n): Position {\n  const spacing = 8; // Space between selection and toolbar\n\n  // Calculate base position relative to the editor's viewport\n  let top = selectionRect.top - editorRect.top - toolbarDimensions.height - spacing;\n\n  // Calculate left position with more stable centering\n  const selectionCenter = selectionRect.left - editorRect.left + (selectionRect.width / 2);\n  let left = selectionCenter - (toolbarDimensions.width / 2);\n\n  // Add scroll position to get position relative to the scrollable content\n  top += scrollTop;\n  left += scrollLeft;\n\n  // Boundary checks accounting for scroll\n  const safeTopBoundary = scrollTop + spacing;\n  const safeBottomBoundaryForTopPositioning = selectionRect.bottom - editorRect.top + spacing + scrollTop;\n\n  // If not enough space above, position below\n  if (top < safeTopBoundary) {\n    top = safeBottomBoundaryForTopPositioning;\n  }\n\n  // More robust horizontal boundary checks\n  const minLeftBoundary = scrollLeft + spacing;\n  const maxRightBoundary = editorRect.width - toolbarDimensions.width - spacing + scrollLeft - 20; // Account for scrollbar\n\n  // Ensure toolbar stays within bounds\n  left = Math.max(minLeftBoundary, Math.min(maxRightBoundary, left));\n\n  // Round to prevent sub-pixel positioning that can cause shifting\n  return {\n    top: Math.round(top),\n    left: Math.round(left)\n  };\n}\n\n/**\n * Get safe toolbar dimensions with fallbacks\n * @param toolbarElement - The toolbar DOM element\n * @returns Toolbar dimensions with fallbacks\n */\nexport function getToolbarDimensions(toolbarElement: HTMLElement | null): ToolbarDimensions {\n  if (!toolbarElement) {\n    return { width: 400, height: 48 }; // Updated fallback to match typical toolbar width\n  }\n\n  try {\n    // Use getBoundingClientRect for more accurate dimensions\n    const rect = toolbarElement.getBoundingClientRect();\n\n    // Only use actual dimensions if they're reasonable (not 0 or very small)\n    const width = (rect.width > 50) ? rect.width :\n                  (toolbarElement.offsetWidth > 50) ? toolbarElement.offsetWidth : 400;\n    const height = (rect.height > 20) ? rect.height :\n                   (toolbarElement.offsetHeight > 20) ? toolbarElement.offsetHeight : 48;\n\n    return { width, height };\n  } catch (error) {\n    console.error('Error getting toolbar dimensions:', error);\n    return { width: 400, height: 48 };\n  }\n}\n\n/**\n * Check if a click target is outside the specified elements\n * @param target - The click target\n * @param elements - Array of elements to check against\n * @returns True if target is outside all elements\n */\nexport function isClickOutside(target: Node, elements: (HTMLElement | null)[]): boolean {\n  return elements.every(element => {\n    if (!element) return true;\n    try {\n      return !element.contains(target);\n    } catch (error) {\n      console.error('Error checking if click is outside element:', error);\n      return true;\n    }\n  });\n}\n","import { useState, useCallback, useMemo, useEffect } from 'react';\nimport { debounce } from '../utils/debounce';\nimport { \n  getSelectionRect, \n  hasValidSelection, \n  calculateToolbarPosition, \n  getToolbarDimensions, \n  isClickOutside,\n  type Position \n} from '../utils/selectionUtils';\n\ninterface UseFloatingToolbarProps {\n  disabled: boolean;\n  editorWrapperRef: React.RefObject<HTMLDivElement | null>;\n  toolbarRef: React.RefObject<HTMLDivElement | null>;\n  colorMenuAnchor: HTMLElement | null;\n  headingMenuAnchor: HTMLElement | null;\n  linkDialogOpen?: boolean;\n}\n\n/**\n * Custom hook to manage floating toolbar positioning and visibility\n */\nexport function useFloatingToolbar({\n  disabled,\n  editorWrapperRef,\n  toolbarRef,\n  colorMenuAnchor,\n  headingMenuAnchor,\n  linkDialogOpen = false,\n}: UseFloatingToolbarProps) {\n  const [showFloatingToolbar, setShowFloatingToolbar] = useState(false);\n  const [floatingToolbarPosition, setFloatingToolbarPosition] = useState<Position | null>(null);\n\n  // Function to update and show/hide floating toolbar\n  const checkSelectionAndPositionToolbar = useCallback(() => {\n    if (disabled || !editorWrapperRef.current) return;\n\n    if (hasValidSelection()) {\n      try {\n        const selectionRect = getSelectionRect();\n\n        if (selectionRect && selectionRect.width > 0 && editorWrapperRef.current) {\n          const editorRect = editorWrapperRef.current.getBoundingClientRect();\n          const editorScrollTop = editorWrapperRef.current.scrollTop;\n          const editorScrollLeft = editorWrapperRef.current.scrollLeft;\n\n          // Get toolbar dimensions with a small delay if toolbar is not yet rendered\n          const getPositionWithDimensions = () => {\n            const toolbarDimensions = getToolbarDimensions(toolbarRef.current);\n            const position = calculateToolbarPosition(\n              selectionRect,\n              editorRect,\n              toolbarDimensions,\n              editorScrollTop,\n              editorScrollLeft\n            );\n            setFloatingToolbarPosition(position);\n          };\n\n          // If toolbar is not visible yet, show it first then position\n          if (!showFloatingToolbar) {\n            setShowFloatingToolbar(true);\n            // Use requestAnimationFrame to ensure toolbar is rendered before positioning\n            requestAnimationFrame(() => {\n              getPositionWithDimensions();\n            });\n          } else {\n            getPositionWithDimensions();\n          }\n          return;\n        }\n      } catch (error) {\n        console.error('Error positioning toolbar:', error);\n        // Fall through to hide toolbar on error\n      }\n    }\n\n    // Hide toolbar if no valid selection OR an error occurred positioning it\n    // Only hide if no menus or dialogs are open\n    if (!colorMenuAnchor && !headingMenuAnchor && !linkDialogOpen && showFloatingToolbar) {\n      setShowFloatingToolbar(false);\n    }\n  }, [disabled, colorMenuAnchor, headingMenuAnchor, linkDialogOpen, showFloatingToolbar, editorWrapperRef, toolbarRef]);\n\n  // Debounced version for performance\n  const debouncedCheckSelection = useMemo(\n    () => debounce(checkSelectionAndPositionToolbar, 100),\n    [checkSelectionAndPositionToolbar]\n  );\n\n  // Effect to add/remove event listeners for selection\n  useEffect(() => {\n    const editorElement = editorWrapperRef.current;\n    if (!editorElement || disabled) return;\n\n    // Use debounced function for better performance\n    const handleMouseUp = () => setTimeout(debouncedCheckSelection, 0);\n    const handleTouchEnd = () => setTimeout(debouncedCheckSelection, 0);\n    \n    // Check on key up for keyboard selections & cursor movement\n    const handleKeyUp = (event: KeyboardEvent) => {\n        // Check for arrow keys, selection keys (Shift+Arrows), Home, End etc.\n        if (\n            event.key.includes('Arrow') ||\n            ['Home', 'End', 'PageUp', 'PageDown'].includes(event.key) ||\n            (event.shiftKey && ['Delete', 'Backspace'].includes(event.key))\n        ) {\n             setTimeout(debouncedCheckSelection, 0);\n        }\n    };\n\n    editorElement.addEventListener('mouseup', handleMouseUp);\n    editorElement.addEventListener('touchend', handleTouchEnd);\n    editorElement.addEventListener('keyup', handleKeyUp);\n    editorElement.addEventListener('focus', debouncedCheckSelection);\n\n    return () => {\n      editorElement.removeEventListener('mouseup', handleMouseUp);\n      editorElement.removeEventListener('touchend', handleTouchEnd);\n      editorElement.removeEventListener('keyup', handleKeyUp);\n      editorElement.removeEventListener('focus', debouncedCheckSelection);\n    };\n  }, [debouncedCheckSelection, disabled, editorWrapperRef]);\n\n  // Effect to hide toolbar on outside click\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n        const target = event.target as Node;\n        const elementsToCheck = [editorWrapperRef.current, toolbarRef.current];\n        const isOutsideElements = isClickOutside(target, elementsToCheck);\n        const isOutsideMenus = !colorMenuAnchor && !headingMenuAnchor && !linkDialogOpen;\n\n        if (showFloatingToolbar && isOutsideElements && isOutsideMenus) {\n            setShowFloatingToolbar(false);\n            return;\n        }\n\n        // Check if click is inside editor but possibly clears selection\n        if (\n            editorWrapperRef.current &&\n            editorWrapperRef.current.contains(target) &&\n            isClickOutside(target, [toolbarRef.current])\n        ) {\n            // Use RAF to check selection state after the click's effects\n            requestAnimationFrame(() => {\n                if (!hasValidSelection() && !colorMenuAnchor && !headingMenuAnchor && !linkDialogOpen) {\n                    setShowFloatingToolbar(false);\n                }\n            });\n        }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showFloatingToolbar, colorMenuAnchor, headingMenuAnchor, linkDialogOpen, editorWrapperRef, toolbarRef]);\n\n  return {\n    showFloatingToolbar,\n    floatingToolbarPosition,\n    debouncedCheckSelection,\n  };\n}\n","/**\n * Debounce utility function to limit the rate at which a function can fire\n * @param func - The function to debounce\n * @param wait - The number of milliseconds to delay\n * @param immediate - If true, trigger the function on the leading edge instead of trailing\n * @returns Debounced function\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number,\n  immediate = false\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout | null = null;\n\n  return function executedFunction(...args: Parameters<T>) {\n    const later = () => {\n      timeout = null;\n      if (!immediate) func(...args);\n    };\n\n    const callNow = immediate && !timeout;\n    \n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    \n    timeout = setTimeout(later, wait);\n    \n    if (callNow) {\n      func(...args);\n    }\n  };\n}\n\n/**\n * Throttle utility function to limit the rate at which a function can fire\n * @param func - The function to throttle\n * @param limit - The number of milliseconds to wait between calls\n * @returns Throttled function\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean;\n  \n  return function executedFunction(...args: Parameters<T>) {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n","import { EditorState, Modifier, SelectionState, ContentState } from 'draft-js';\n\n/**\n * Check if this is an internal trade link and extract relevant IDs\n */\nexport const isInternalTradeLink = (url: string): {\n  type: 'calendar' | 'shared' | 'external';\n  id?: string;\n  tradeId?: string;\n  calendarId?: string;\n} => {\n  try {\n    const urlObj = new URL(url, window.location.origin);\n    const pathname = urlObj.pathname;\n\n    // Check for calendar links: /calendar/{calendarId}\n    const calendarMatch = pathname.match(/^\\/calendar\\/([^\\/]+)$/);\n    if (calendarMatch) {\n      return { type: 'calendar', id: calendarMatch[1], calendarId: calendarMatch[1] };\n    }\n\n    // Check for shared trade links: /shared/{shareId}\n    const sharedMatch = pathname.match(/^\\/shared\\/([^\\/]+)$/);\n    if (sharedMatch) {\n      const shareId = sharedMatch[1];\n      // Extract tradeId from shareId format: share_{tradeId}_{timestamp}_{random}\n      const shareIdParts = shareId.split('_');\n      if (shareIdParts.length >= 2 && shareIdParts[0] === 'share') {\n        const tradeId = shareIdParts[1];\n        return { type: 'shared', id: shareId, tradeId };\n      }\n      return { type: 'shared', id: shareId };\n    }\n\n    return { type: 'external' };\n  } catch {\n    // If URL parsing fails, treat as external\n    return { type: 'external' };\n  }\n};\n\n/**\n * Check if current selection has a link\n */\nexport const getCurrentLink = (editorState: EditorState) => {\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n  const startKey = selection.getStartKey();\n  const startOffset = selection.getStartOffset();\n  const blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\n  const linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\n\n  if (linkKey) {\n    const linkInstance = contentState.getEntity(linkKey);\n    if (linkInstance.getType() === 'LINK') {\n      return {\n        entityKey: linkKey,\n        url: linkInstance.getData().url\n      };\n    }\n  }\n  return null;\n};\n\n/**\n * Trim whitespace from selection and return cleaned text with adjusted indices\n */\nexport const trimSelection = (selection: SelectionState, contentState: ContentState) => {\n  if (selection.isCollapsed()) {\n    return { text: '', selection };\n  }\n\n  const startKey = selection.getStartKey();\n  const endKey = selection.getEndKey();\n  const startOffset = selection.getStartOffset();\n  const endOffset = selection.getEndOffset();\n\n  if (startKey === endKey) {\n    // Single block selection\n    const block = contentState.getBlockForKey(startKey);\n    const blockText = block.getText();\n    const selectedText = blockText.slice(startOffset, endOffset);\n\n    // Find the actual text boundaries (excluding whitespace)\n    const trimmedText = selectedText.trim();\n    if (trimmedText.length === 0) {\n      return { text: '', selection };\n    }\n\n    // Calculate how much whitespace was trimmed from start and end\n    const leadingWhitespace = selectedText.length - selectedText.trimStart().length;\n    const trailingWhitespace = selectedText.length - selectedText.trimEnd().length;\n\n    // Adjust the selection to exclude whitespace\n    const adjustedSelection = selection.merge({\n      anchorOffset: startOffset + leadingWhitespace,\n      focusOffset: endOffset - trailingWhitespace,\n    });\n\n    return { text: trimmedText, selection: adjustedSelection };\n  } else {\n    // Multi-block selection - more complex, but let's handle the common case\n    const blocks = contentState.getBlocksAsArray();\n    const startIndex = blocks.findIndex(block => block.getKey() === startKey);\n    const endIndex = blocks.findIndex(block => block.getKey() === endKey);\n\n    let fullText = '';\n    for (let i = startIndex; i <= endIndex; i++) {\n      const block = blocks[i];\n      const blockText = block.getText();\n\n      if (i === startIndex && i === endIndex) {\n        // Single block case (shouldn't happen here, but just in case)\n        fullText += blockText.slice(startOffset, endOffset);\n      } else if (i === startIndex) {\n        // First block\n        fullText += blockText.slice(startOffset);\n      } else if (i === endIndex) {\n        // Last block\n        fullText += ' ' + blockText.slice(0, endOffset);\n      } else {\n        // Middle blocks\n        fullText += ' ' + blockText;\n      }\n    }\n\n    const trimmedText = fullText.trim();\n    // For multi-block selections, we'll return the original selection\n    // but with trimmed text - adjusting multi-block selections is complex\n    return { text: trimmedText, selection };\n  }\n};\n\n/**\n * Create a link entity and insert/replace text with link\n */\nexport const createLinkEntity = (\n  editorState: EditorState,\n  linkUrl: string,\n  linkText: string\n): EditorState => {\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n\n  // Create a link entity\n  const contentStateWithEntity = contentState.createEntity(\n    'LINK',\n    'MUTABLE',\n    { url: linkUrl }\n  );\n  const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n  let newContentState;\n  let textToInsert = linkText.trim() || linkUrl;\n\n  if (selection.isCollapsed()) {\n    // No selection, insert new text with link entity\n    newContentState = Modifier.insertText(\n      contentStateWithEntity,\n      selection,\n      textToInsert,\n      undefined, // No inline styles\n      entityKey   // Apply the link entity\n    );\n  } else {\n    // Replace selected text with link text and apply entity\n    // First, get the trimmed selection to avoid whitespace in links\n    const { selection: trimmedSelection } = trimSelection(selection, contentState);\n\n    newContentState = Modifier.replaceText(\n      contentStateWithEntity,\n      trimmedSelection,\n      textToInsert,\n      undefined, // No inline styles\n      entityKey   // Apply the link entity\n    );\n  }\n\n  return EditorState.push(\n    editorState,\n    newContentState,\n    'insert-characters'\n  );\n};\n\n/**\n * Remove link entity from selection\n */\nexport const removeLinkEntity = (editorState: EditorState): EditorState => {\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n\n  if (!selection.isCollapsed()) {\n    // Remove entity from selected text (use trimmed selection)\n    const { selection: trimmedSelection } = trimSelection(selection, contentState);\n    const newContentState = Modifier.applyEntity(\n      contentState,\n      trimmedSelection,\n      null // Remove entity by setting to null\n    );\n\n    return EditorState.push(\n      editorState,\n      newContentState,\n      'apply-entity'\n    );\n  } else {\n    // Find the link entity at cursor position and remove it\n    const currentLink = getCurrentLink(editorState);\n    if (currentLink) {\n      const startKey = selection.getStartKey();\n      const block = contentState.getBlockForKey(startKey);\n      const blockText = block.getText();\n\n      // Find the extent of the link entity\n      let linkStart = selection.getStartOffset();\n      let linkEnd = selection.getEndOffset();\n\n      // Expand selection to cover the entire link\n      while (linkStart > 0 && block.getEntityAt(linkStart - 1) === currentLink.entityKey) {\n        linkStart--;\n      }\n      while (linkEnd < blockText.length && block.getEntityAt(linkEnd) === currentLink.entityKey) {\n        linkEnd++;\n      }\n\n      // Create selection for the entire link\n      const linkSelection = selection.merge({\n        anchorOffset: linkStart,\n        focusOffset: linkEnd,\n      });\n\n      // Remove the entity\n      const newContentState = Modifier.applyEntity(\n        contentState,\n        linkSelection,\n        null\n      );\n\n      return EditorState.push(\n        editorState,\n        newContentState,\n        'apply-entity'\n      );\n    }\n  }\n\n  return editorState;\n};\n\n/**\n * Function to find link entities for decorator\n */\nexport const findLinkEntities = (contentBlock: any, callback: any, contentState: ContentState) => {\n  contentBlock.findEntityRanges(\n    (character: any) => {\n      const entityKey = character.getEntity();\n      return (\n        entityKey !== null &&\n        contentState.getEntity(entityKey).getType() === 'LINK'\n      );\n    },\n    callback\n  );\n};\n","import { EditorState, RichUtils, Modifier } from 'draft-js';\n\n/**\n * Toggle inline styles (bold, italic, underline) with focus preservation\n */\nexport const toggleInlineStyle = (\n  editorState: EditorState,\n  style: string,\n  editorRef: React.RefObject<any>\n): EditorState => {\n  const newState = RichUtils.toggleInlineStyle(editorState, style);\n  \n  // Keep focus on editor after applying style\n  setTimeout(() => editorRef.current?.focus(), 0);\n  \n  return newState;\n};\n\n/**\n * Toggle block types (headings, lists) while preserving text color styles\n */\nexport const toggleBlockType = (\n  editorState: EditorState,\n  blockType: string,\n  editorRef: React.RefObject<any>\n): EditorState => {\n  // Get current styles to preserve them\n  const currentStyles = editorState.getCurrentInlineStyle();\n\n  // Apply the block type change\n  let nextEditorState = RichUtils.toggleBlockType(editorState, blockType);\n\n  // Preserve text color styles by re-applying them\n  const textColorStyles = currentStyles.filter((style): style is string =>\n    style !== undefined && style.startsWith('TEXT_COLOR_')\n  ).toArray();\n\n  // Re-apply each text color style\n  textColorStyles.forEach(style => {\n    nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, style);\n  });\n\n  setTimeout(() => editorRef.current?.focus(), 0);\n  \n  return nextEditorState;\n};\n\n/**\n * Apply text color with scroll position preservation\n */\nexport const applyTextColor = (\n  editorState: EditorState,\n  color: string,\n  editorRef: React.RefObject<any>,\n  addRecentTextColor: (color: any) => void,\n  TEXT_COLORS: any[]\n): { newState: EditorState; scrollTop: number } => {\n  // Store current scroll position before applying color\n  const editorElement = editorRef.current?.editor;\n  const scrollTop = editorElement?.scrollTop || 0;\n\n  const currentStyle = editorState.getCurrentInlineStyle();\n  let nextEditorState = editorState;\n\n  // Remove any existing text color styles in the selection\n  const textColorStyles = currentStyle.filter((style): style is string =>\n    style !== undefined && style.startsWith('TEXT_COLOR_')\n  ).toArray();\n  \n  textColorStyles.forEach(style => {\n    nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, style);\n  });\n\n  // Apply the new text color if it's not default\n  if (color !== 'default') {\n    const newStyle = `TEXT_COLOR_${color.replace('#', '')}`;\n    nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, newStyle);\n\n    // Update recently used text colors\n    const colorObj = TEXT_COLORS.find(c => c.color === color);\n    if (colorObj) {\n      addRecentTextColor(colorObj);\n    }\n  }\n\n  return { newState: nextEditorState, scrollTop };\n};\n\n/**\n * Apply background color with scroll position preservation\n */\nexport const applyBackgroundColor = (\n  editorState: EditorState,\n  color: string,\n  editorRef: React.RefObject<any>,\n  addRecentBgColor: (color: any) => void,\n  BACKGROUND_COLORS: any[]\n): { newState: EditorState; scrollTop: number } => {\n  // Store current scroll position before applying color\n  const editorElement = editorRef.current?.editor;\n  const scrollTop = editorElement?.scrollTop || 0;\n\n  const currentStyle = editorState.getCurrentInlineStyle();\n  let nextEditorState = editorState;\n\n  // Remove any existing background color styles in the selection\n  const bgColorStyles = currentStyle.filter((style): style is string =>\n    style !== undefined && style.startsWith('BG_COLOR_')\n  ).toArray();\n  \n  bgColorStyles.forEach(style => {\n    nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, style);\n  });\n\n  // Apply the new background color if it's not default\n  if (color !== 'default') {\n    const newStyle = `BG_COLOR_${color.replace('#', '')}`;\n    nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, newStyle);\n\n    // Update recently used background colors\n    const colorObj = BACKGROUND_COLORS.find(c => c.color === color);\n    if (colorObj) {\n      addRecentBgColor(colorObj);\n    }\n  }\n\n  return { newState: nextEditorState, scrollTop };\n};\n\n/**\n * Apply heading style with scroll position preservation\n */\nexport const applyHeading = (\n  editorState: EditorState,\n  headingStyle: string,\n  editorRef: React.RefObject<any>\n): { newState: EditorState; scrollTop: number } => {\n  // Store current scroll position before applying heading\n  const editorElement = editorRef.current?.editor;\n  const scrollTop = editorElement?.scrollTop || 0;\n\n  const currentStyles = editorState.getCurrentInlineStyle();\n\n  // Apply the block type change\n  let nextEditorState = RichUtils.toggleBlockType(editorState, headingStyle);\n\n  // Preserve text color styles by re-applying them\n  const textColorStyles = currentStyles.filter((style): style is string =>\n    style !== undefined && style.startsWith('TEXT_COLOR_')\n  ).toArray();\n\n  // Re-apply each text color style\n  textColorStyles.forEach(style => {\n    nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, style);\n  });\n\n  return { newState: nextEditorState, scrollTop };\n};\n\n/**\n * Clear all formatting from selected text\n */\nexport const clearFormatting = (\n  editorState: EditorState,\n  editorRef: React.RefObject<any>\n): EditorState | null => {\n  const selection = editorState.getSelection();\n  if (selection.isCollapsed()) return null;\n\n  const contentState = editorState.getCurrentContent();\n\n  // Remove all inline styles\n  let newContentState = contentState;\n  const inlineStyles = editorState.getCurrentInlineStyle();\n\n  inlineStyles.forEach(style => {\n    if (style) {\n      newContentState = Modifier.removeInlineStyle(newContentState, selection, style);\n    }\n  });\n\n  // Create new editor state with cleared formatting\n  const newEditorState = EditorState.push(\n    editorState,\n    newContentState,\n    'change-inline-style'\n  );\n\n  setTimeout(() => editorRef.current?.focus(), 0);\n  \n  return newEditorState;\n};\n\n/**\n * Get the current block type\n */\nexport const getCurrentBlockType = (editorState: EditorState): string => {\n  const selection = editorState.getSelection();\n  if (!selection.getHasFocus()) return 'unstyled'; // Return default if no focus\n  \n  try {\n    const contentState = editorState.getCurrentContent();\n    const startKey = selection.getStartKey();\n    const currentBlock = contentState.getBlockForKey(startKey);\n    return currentBlock.getType();\n  } catch (e) {\n    console.error(\"Error getting block type:\", e);\n    return 'unstyled';\n  }\n};\n\n/**\n * Custom block renderer CSS classes\n */\nexport const blockStyleFn = (contentBlock: any): string => {\n  const type = contentBlock.getType();\n  switch (type) {\n    case 'header-one':\n      return 'RichEditor-h1';\n    case 'header-two':\n      return 'RichEditor-h2';\n    case 'header-three':\n      return 'RichEditor-h3';\n    case 'unordered-list-item':\n      return 'RichEditor-ul';\n    case 'ordered-list-item':\n      return 'RichEditor-ol';\n    default:\n      return ''; // Let Draft handle default block styling\n  }\n};\n\n/**\n * Restore scroll position and focus\n */\nexport const restoreScrollAndFocus = (\n  editorRef: React.RefObject<any>,\n  scrollTop: number,\n  delay: number = 0\n) => {\n  setTimeout(() => {\n    const editorElement = editorRef.current?.editor;\n    if (editorElement) {\n      editorElement.scrollTop = scrollTop;\n    }\n    editorRef.current?.focus();\n  }, delay);\n};\n","import { EditorState, RichUtils, getDefaultKeyBinding } from 'draft-js';\n\n/**\n * Map keyboard shortcuts to commands\n */\nexport const keyBindingFn = (e: React.KeyboardEvent): string | null => {\n  // Handle our custom shortcuts first\n  if (e.ctrlKey || e.metaKey) {\n    switch (e.key) {\n      case 'z':\n        e.preventDefault();\n        return e.shiftKey ? 'redo' : 'undo';\n      case 'y':\n        e.preventDefault();\n        return 'redo';\n      case 'l':\n        e.preventDefault();\n        return 'insert-link';\n      case 'k':\n        if (e.shiftKey) {\n          e.preventDefault();\n          return 'remove-link';\n        }\n        break;\n      case 'x':\n        if (e.shiftKey) {\n          e.preventDefault();\n          return 'clear-formatting';\n        }\n        break;\n    }\n  }\n\n  // Fall back to DraftJS default key bindings for everything else\n  return getDefaultKeyBinding(e as any);\n};\n\n/**\n * Handle keyboard shortcuts\n */\nexport const handleKeyCommand = (\n  command: string,\n  state: EditorState,\n  handlers: {\n    clearFormatting: () => void;\n    handleLinkClick: () => void;\n    removeLink: () => void;\n    getCurrentLink: () => any;\n    handleEditorChange: (state: EditorState) => void;\n  }\n): 'handled' | 'not-handled' => {\n  const {\n    clearFormatting,\n    handleLinkClick,\n    removeLink,\n    getCurrentLink,\n    handleEditorChange\n  } = handlers;\n\n  // Handle custom commands first\n  switch (command) {\n    case 'clear-formatting':\n      clearFormatting();\n      return 'handled';\n    case 'insert-link':\n      handleLinkClick();\n      return 'handled';\n    case 'remove-link':\n      if (getCurrentLink()) {\n        removeLink();\n        return 'handled';\n      }\n      break;\n    case 'undo':\n      const undoState = EditorState.undo(state);\n      if (undoState !== state) {\n        handleEditorChange(undoState);\n        return 'handled';\n      }\n      break;\n    case 'redo':\n      const redoState = EditorState.redo(state);\n      if (redoState !== state) {\n        handleEditorChange(redoState);\n        return 'handled';\n      }\n      break;\n  }\n\n  // Handle default DraftJS commands\n  const newState = RichUtils.handleKeyCommand(state, command);\n  if (newState) {\n    handleEditorChange(newState);\n    return 'handled';\n  }\n  \n  return 'not-handled';\n};\n","import React from 'react';\nimport { Theme } from '@mui/material/styles';\n\n/**\n * Create custom style map for colors\n */\nexport const createStyleMap = (\n  theme: Theme,\n  TEXT_COLORS: any[],\n  BACKGROUND_COLORS: any[]\n): Record<string, React.CSSProperties> => {\n  const styleMap: Record<string, React.CSSProperties> = {};\n  \n  // Add text colors to the style map\n  TEXT_COLORS.forEach(color => {\n    if (color.color !== 'default') {\n      // Use softer white (#CCCCCC) for dark mode, pure white for light mode\n      const finalColor = color.color === '#FFFFFF' && theme.palette.mode === 'dark'\n        ? '#CCCCCC'\n        : color.color;\n      styleMap[`TEXT_COLOR_${color.color.replace('#', '')}`] = { color: finalColor };\n    }\n  });\n  \n  // Add background colors to the style map\n  BACKGROUND_COLORS.forEach(color => {\n    if (color.color !== 'default') {\n      // For dark background colors, use white text for better contrast\n      // In light theme, all background colors are dark, so text should be light\n      // In dark theme, we can keep the same approach since the backgrounds are still dark\n      const textColor = theme.palette.mode === 'light' ? '#FFFFFF' : '#FFFFFF';\n\n      styleMap[`BG_COLOR_${color.color.replace('#', '')}`] = {\n        backgroundColor: color.color,\n        color: textColor,\n        padding: '2px 4px',\n        borderRadius: '3px'\n      };\n    }\n  });\n\n  return styleMap;\n};\n\n/**\n * Function to prevent editor blur/selection clear when interacting with toolbar\n */\nexport const handleToolbarInteraction = (event: React.MouseEvent | React.TouchEvent) => {\n  event.preventDefault(); // Prevent editor losing focus\n  // event.stopPropagation(); // Usually not needed unless nested click handlers conflict\n};\n","import React from 'react';\nimport { useTheme } from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { ContentState } from 'draft-js';\nimport { isInternalTradeLink } from '../utils/linkUtils';\n\ninterface LinkProps {\n  contentState: ContentState;\n  entityKey: string;\n  children: React.ReactNode;\n  calendarId?: string;\n  trades?: Array<{ id: string; [key: string]: any }>;\n  onOpenGalleryMode?: (trades: any[], initialTradeId?: string, title?: string) => void;\n}\n\nexport const LinkComponent = ({ \n  contentState, \n  entityKey, \n  children, \n  calendarId, \n  trades, \n  onOpenGalleryMode \n}: LinkProps) => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { url } = contentState.getEntity(entityKey).getData();\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const linkInfo = isInternalTradeLink(url);\n\n    if (linkInfo.type === 'calendar' && linkInfo.calendarId) {\n      // If we have trades and gallery mode function, and this is the current calendar\n      if (trades && onOpenGalleryMode && linkInfo.calendarId === calendarId && trades.length > 0) {\n        // Open in gallery mode with all trades\n        onOpenGalleryMode(trades, undefined, 'All Trades');\n      } else {\n        // Navigate to the calendar\n        navigate(`/calendar/${linkInfo.calendarId}`);\n      }\n    } else if (linkInfo.type === 'shared' && linkInfo.tradeId) {\n      // Check if the trade exists in the current calendar\n      const tradeInCurrentCalendar = trades?.find(trade => trade.id === linkInfo.tradeId);\n\n      if (tradeInCurrentCalendar && onOpenGalleryMode && trades) {\n        // Trade found in current calendar - open gallery mode directly\n        onOpenGalleryMode(trades, linkInfo.tradeId, 'Shared Trade');\n      } else {\n        // Trade not in current calendar or no gallery mode available - navigate to shared page\n        // Add referrer info to help with back navigation\n        const currentPath = window.location.pathname;\n        navigate(`/shared/${linkInfo.id}`, {\n          state: {\n            referrer: currentPath,\n            referrerCalendarId: calendarId\n          }\n        });\n      }\n    } else if (linkInfo.type === 'shared' && linkInfo.id) {\n      // Fallback for shared links without extractable tradeId\n      navigate(`/shared/${linkInfo.id}`, {\n        state: {\n          referrer: window.location.pathname,\n          referrerCalendarId: calendarId\n        }\n      });\n    } else {\n      // For external links, open in new tab\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.stopPropagation(); // Prevent editor from handling this\n  };\n\n  const linkInfo = isInternalTradeLink(url);\n  const isInternal = linkInfo.type !== 'external';\n\n  return (\n    <span\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      className=\"rich-editor-link\"\n      title={isInternal ? `Click to open: ${url}` : `Click to open in new tab: ${url}`}\n      style={{\n        color: theme.palette.primary.main,\n        textDecoration: 'underline',\n        textDecorationColor: alpha(theme.palette.primary.main, 0.5),\n        textUnderlineOffset: '2px',\n        transition: 'all 0.2s ease-in-out',\n        cursor: 'pointer',\n      }}\n    >\n      {children}\n    </span>\n  );\n};\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport {\n  Box,\n  Toolbar,\n  IconButton,\n  Tooltip,\n  Divider,\n  Typography,\n  Menu,\n  MenuItem,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n  Paper as MuiPaper,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField\n} from '@mui/material';\nimport { alpha } from '@mui/material/styles';\nimport { scrollbarStyles } from '../../styles/scrollbarStyles';\nimport {\n  FormatBold,\n  FormatItalic,\n  FormatUnderlined,\n  FormatListBulleted,\n  FormatListNumbered,\n  Title,\n  ArrowDropDown,\n  Palette,\n  Link,\n  FormatClear\n} from '@mui/icons-material';\nimport { Editor, EditorState, convertToRaw } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\n// Import utilities, constants, and hooks\nimport { createEditorStateFromValue } from './RichTextEditor/utils/draftUtils';\nimport { TEXT_COLORS, BACKGROUND_COLORS } from './RichTextEditor/constants/colors';\nimport { HEADING_OPTIONS } from './RichTextEditor/constants/headings';\nimport { useRecentColors } from './RichTextEditor/hooks/useRecentColors';\nimport { useFloatingToolbar } from './RichTextEditor/hooks/useFloatingToolbar';\n\n// Import new utility functions\nimport {\n  getCurrentLink,\n  createLinkEntity,\n  removeLinkEntity\n} from './RichTextEditor/utils/linkUtils';\nimport {\n  toggleInlineStyle,\n  toggleBlockType,\n  applyTextColor,\n  applyBackgroundColor,\n  applyHeading,\n  clearFormatting,\n  getCurrentBlockType,\n  blockStyleFn,\n  restoreScrollAndFocus\n} from './RichTextEditor/utils/editorActions';\nimport { keyBindingFn, handleKeyCommand } from './RichTextEditor/utils/keyboardUtils';\nimport { createStyleMap, handleToolbarInteraction } from './RichTextEditor/utils/styleUtils';\nimport {\n  createHeadingButtonClickHandler,\n  createColorButtonClickHandler,\n  createMenuCloseHandler\n} from './RichTextEditor/utils/menuUtils';\nimport {\n  handleLinkDialogOpen,\n  handleLinkDialogClose\n} from './RichTextEditor/utils/linkDialogUtils';\nimport { createDecorator } from './RichTextEditor/utils/decoratorUtils';\n\nexport interface RichTextEditorProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  label?: string;\n  helperText?: string;\n  minHeight?: number | string;\n  maxHeight?: number | string;\n  disabled?: boolean;\n  hideCharacterCount?: boolean;\n  maxLength?: number;\n  // Optional props for trade link navigation\n  calendarId?: string;\n  trades?: Array<{ id: string; [key: string]: any }>;\n  onOpenGalleryMode?: (trades: any[], initialTradeId?: string, title?: string) => void;\n}\n\n\n\n\n\n\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({\n  value,\n  onChange,\n  placeholder = 'Enter text here...',\n  label,\n  helperText,\n  minHeight = 150,\n  maxHeight = 'none',\n  disabled = false,\n  hideCharacterCount = false,\n  maxLength,\n  calendarId,\n  trades,\n  onOpenGalleryMode\n}) => {\n  const theme = useTheme();\n\n  // Refs must be declared before any useEffect that uses them\n  const editorRef = useRef<Editor>(null);\n  const editorWrapperRef = useRef<HTMLDivElement>(null);\n  const toolbarRef = useRef<HTMLDivElement>(null);\n  const previousValueRef = useRef<string | undefined>(value);\n  const savedScrollPositionRef = useRef<number>(0);\n\n  // Create decorator with props\n  const decorator = useMemo(() => createDecorator(calendarId, trades, onOpenGalleryMode), [calendarId, trades, onOpenGalleryMode]);\n\n  const [editorState, setEditorState] = useState(() => {\n    const initialState = createEditorStateFromValue(value);\n    return EditorState.set(initialState, { decorator });\n  });\n  const [headingMenuAnchor, setHeadingMenuAnchor] = useState<null | HTMLElement>(null);\n  const [colorMenuAnchor, setColorMenuAnchor] = useState<null | HTMLElement>(null);\n  const [linkDialogOpen, setLinkDialogOpen] = useState(false);\n  const [linkUrl, setLinkUrl] = useState('');\n  const [linkText, setLinkText] = useState('');\n\n  // Update editor state when value prop changes (for controlled component behavior)\n  useEffect(() => {\n    if (value !== previousValueRef.current) {\n      previousValueRef.current = value;\n\n      if (value !== undefined) {\n        const newEditorState = createEditorStateFromValue(value);\n        const newEditorStateWithDecorator = EditorState.set(newEditorState, { decorator });\n        // Only update if the content is actually different to avoid infinite loops\n        const currentContent = convertToRaw(editorState.getCurrentContent());\n        const newContent = convertToRaw(newEditorStateWithDecorator.getCurrentContent());\n\n        if (JSON.stringify(currentContent) !== JSON.stringify(newContent)) {\n          setEditorState(newEditorStateWithDecorator);\n        }\n      }\n    }\n  }, [value, editorState, decorator]);\n\n  // Effect to restore scroll position when link dialog closes\n  useEffect(() => {\n    if (!linkDialogOpen && savedScrollPositionRef.current > 0) {\n      const editorElement = editorWrapperRef.current;\n      if (editorElement) {\n        // Use requestAnimationFrame to ensure DOM has updated\n        requestAnimationFrame(() => {\n          editorElement.scrollTop = savedScrollPositionRef.current;\n          // Reset the saved position\n          savedScrollPositionRef.current = 0;\n          // Restore focus to editor\n          setTimeout(() => {\n            if (editorRef.current) {\n              editorRef.current.focus();\n            }\n          }, 50);\n        });\n      }\n    }\n  }, [linkDialogOpen]);\n\n  // Use custom hooks for better organization\n  const {\n    recentTextColors,\n    recentBgColors,\n    addRecentTextColor,\n    addRecentBgColor\n  } = useRecentColors();\n\n  const {\n    showFloatingToolbar,\n    floatingToolbarPosition\n  } = useFloatingToolbar({\n    disabled,\n    editorWrapperRef,\n    toolbarRef,\n    colorMenuAnchor,\n    headingMenuAnchor,\n    linkDialogOpen,\n  });\n\n  // Focus the editor when clicked\n  const focusEditor = () => {\n    if (editorRef.current && !disabled) {\n      editorRef.current.focus();\n    }\n  };\n\n\n\n  // Handle editor state changes\n  const handleEditorChange = (state: EditorState) => {\n    const prevContentState = editorState.getCurrentContent();\n    const newContentState = state.getCurrentContent();\n\n    // Check character limit if maxLength is specified\n    if (maxLength && newContentState.getPlainText().length > maxLength) {\n      // If the new content exceeds the limit, don't update the state\n      return;\n    }\n\n    setEditorState(state);\n\n    if (onChange) {\n      // Only save if content has actually changed (prevents unnecessary updates)\n      // Compare the raw content to detect actual changes\n      const prevRaw = convertToRaw(prevContentState);\n      const newRaw = convertToRaw(newContentState);\n\n      if (JSON.stringify(prevRaw) !== JSON.stringify(newRaw)) {\n        onChange(JSON.stringify(newRaw));\n      }\n    }\n  };\n\n  // Create action handlers using utilities\n  const handleToggleInlineStyle = (style: string) => {\n    const newState = toggleInlineStyle(editorState, style, editorRef);\n    handleEditorChange(newState);\n  };\n\n  const handleToggleBlockType = (blockType: string) => {\n    const newState = toggleBlockType(editorState, blockType, editorRef);\n    handleEditorChange(newState);\n  };\n\n  // Apply text color using utility\n  const handleApplyTextColor = (color: string) => {\n    const { newState, scrollTop } = applyTextColor(\n      editorState,\n      color,\n      editorRef,\n      addRecentTextColor,\n      TEXT_COLORS\n    );\n\n    handleEditorChange(newState);\n    setColorMenuAnchor(null);\n    restoreScrollAndFocus(editorRef, scrollTop, 0);\n  };\n\n  // Apply background color using utility\n  const handleApplyBackgroundColor = (color: string) => {\n    const { newState, scrollTop } = applyBackgroundColor(\n      editorState,\n      color,\n      editorRef,\n      addRecentBgColor,\n      BACKGROUND_COLORS\n    );\n\n    handleEditorChange(newState);\n    setColorMenuAnchor(null);\n    restoreScrollAndFocus(editorRef, scrollTop, 0);\n  };\n\n  // Create menu handlers using utilities\n  const handleHeadingButtonClick = createHeadingButtonClickHandler(\n    headingMenuAnchor,\n    setHeadingMenuAnchor,\n    editorRef\n  );\n\n  const handleColorButtonClick = createColorButtonClickHandler(\n    colorMenuAnchor,\n    setColorMenuAnchor,\n    editorRef\n  );\n\n\n\n  // Apply heading using utility\n  const handleApplyHeading = (headingStyle: string) => {\n    const { newState } = applyHeading(editorState, headingStyle, editorRef);\n    handleEditorChange(newState);\n    setHeadingMenuAnchor(null);\n  };\n\n  // Clear formatting using utility\n  const handleClearFormatting = () => {\n    const newState = clearFormatting(editorState, editorRef);\n    if (newState) {\n      handleEditorChange(newState);\n    }\n  };\n\n  // Link handlers using utilities\n  const handleLinkClick = () => {\n    handleLinkDialogOpen(\n      editorState,\n      editorWrapperRef,\n      savedScrollPositionRef,\n      setLinkText,\n      setLinkUrl,\n      setLinkDialogOpen\n    );\n  };\n\n  const insertLink = () => {\n    if (!linkUrl.trim()) return;\n\n    const newState = createLinkEntity(editorState, linkUrl, linkText);\n    handleEditorChange(newState);\n\n    handleLinkDialogClose(setLinkDialogOpen, setLinkText, setLinkUrl);\n\n    // Restore focus\n    // setTimeout(() => {\n    //   if (editorRef.current) {\n    //     editorRef.current.focus();\n    //   }\n    // }, 100);\n  };\n\n  const removeLink = () => {\n    const newState = removeLinkEntity(editorState);\n    handleEditorChange(newState);\n\n    // Restore focus\n    setTimeout(() => {\n      if (editorRef.current) {\n        editorRef.current.focus();\n      }\n    }, 0);\n  };\n\n\n\n  // Create style map using utility\n  const styleMap = createStyleMap(theme, TEXT_COLORS, BACKGROUND_COLORS);\n\n  // Create keyboard command handler using utility\n  const handleKeyCommandWrapper = (command: string, state: EditorState): 'handled' | 'not-handled' => {\n    return handleKeyCommand(command, state, {\n      clearFormatting: handleClearFormatting,\n      handleLinkClick,\n      removeLink,\n      getCurrentLink: () => getCurrentLink(editorState),\n      handleEditorChange\n    });\n  };\n\n\n  // Render color menu\n  const renderColorMenu = () => {\n    // Use a fragment or null to avoid rendering issues when closed\n    if (!colorMenuAnchor) return null;\n\n    return (\n      <Menu\n        id=\"color-menu\" // Added ID for aria-controls\n        anchorEl={colorMenuAnchor}\n        open={Boolean(colorMenuAnchor)}\n        onClose={() => {\n          setColorMenuAnchor(null);\n          // Don't check selection when menu closes to prevent unwanted scrolling\n          // The toolbar will be repositioned naturally when user interacts with editor again\n          // Refocus editor after closing menu only if editor still has focus logically\n          if (editorState.getSelection().getHasFocus()) {\n             setTimeout(() => editorRef.current?.focus(), 0);\n          }\n        }}\n        disablePortal={false} // Keep portal for proper positioning\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        disableScrollLock={true} // Prevent scroll lock that might cause jumps\n        disableAutoFocus={true} // Prevent auto focus that might cause scroll\n        disableEnforceFocus={true} // Prevent focus enforcement\n        slotProps={{\n          paper: {\n            onMouseDown: handleToolbarInteraction,\n            onTouchStart: handleToolbarInteraction,\n            sx: {\n              width: 180,\n              padding: 1.5,\n              backgroundColor: theme.palette.mode === 'dark'\n                ? alpha(theme.palette.background.paper, 0.95)\n                : alpha(theme.palette.background.paper, 0.98),\n              backdropFilter: 'blur(20px)',\n              borderRadius: '12px',\n              border: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\n              boxShadow: theme.palette.mode === 'dark'\n                ? `0 8px 32px ${alpha('#000000', 0.4)}, 0 2px 8px ${alpha('#000000', 0.2)}`\n                : `0 8px 32px ${alpha(theme.palette.primary.main, 0.15)}, 0 2px 8px ${alpha('#000000', 0.1)}`,\n              zIndex: 1400,\n              mt: 0.5,\n            }\n          }\n        }}\n      >\n        {/* Recently Used Colors Section */}\n        {(recentTextColors.length > 0 || recentBgColors.length > 0) && (\n            <Box sx={{ mb: 2 }}>\n                <Typography\n                  variant=\"caption\"\n                  sx={{\n                    mb: 1,\n                    color: theme.palette.text.primary,\n                    display: 'block',\n                    fontWeight: 600,\n                    fontSize: '0.7rem',\n                    textTransform: 'uppercase',\n                    letterSpacing: '0.3px'\n                  }}\n                >\n                    Recently Used\n                </Typography>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                    {/* Text Colors with 'A' */}\n                    {recentTextColors.map((color) => (\n                    <Tooltip key={`recent-text-${color.color}`} title={`Text: ${color.label}`} placement=\"top\">\n                        <IconButton\n                        size=\"small\"\n                        onClick={() => handleApplyTextColor(color.color)}\n                        sx={{\n                            width: 24,\n                            height: 24,\n                            backgroundColor: color.color === 'default' ? 'transparent' : color.label === 'White' ? alpha(theme.palette.grey[400], 0.3) : alpha(color.color, 0.15),\n                            color: color.color === 'default' ? theme.palette.text.primary : color.color,\n                            border: `1px solid ${color.color === 'default' ? theme.palette.divider : color.color}`,\n                            borderRadius: '6px',\n                            p: 0,\n                            minWidth: 0,\n                            fontSize: '0.65rem',\n                            fontWeight: 'bold',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                            position: 'relative',\n                            overflow: 'hidden',\n                            '&::before': {\n                              content: '\"\"',\n                              position: 'absolute',\n                              top: 0,\n                              left: 0,\n                              right: 0,\n                              bottom: 0,\n                              background: 'transparent',\n                              transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                              zIndex: -1,\n                            },\n                            '&:hover': {\n                              transform: 'translateY(-1px) scale(1.05)',\n                              boxShadow: `0 4px 12px ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.3)}`,\n                              borderColor: color.color === 'default' ? theme.palette.text.primary : color.color,\n                              '&::before': {\n                                background: `linear-gradient(135deg, ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.1)}, ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.05)})`,\n                              }\n                            }\n                        }}\n                        aria-label={`Apply ${color.label} text color`}\n                        >\n                        A\n                        </IconButton>\n                    </Tooltip>\n                    ))}\n                    {/* Background Colors */}\n                    {recentBgColors.map((color) => (\n                    <Tooltip key={`recent-bg-${color.color}`} title={`Background: ${color.label}`} placement=\"top\">\n                        <IconButton\n                        size=\"small\"\n                        onClick={() => handleApplyBackgroundColor(color.color)}\n                        sx={{\n                            width: 24,\n                            height: 24,\n                            backgroundColor: color.color === 'default' ? 'transparent' : color.color,\n                            border: `1px solid ${color.color === 'default' ? theme.palette.divider : alpha(color.color, 0.8)}`,\n                            borderRadius: '6px',\n                            p: 0,\n                            minWidth: 0,\n                            transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                            position: 'relative',\n                            overflow: 'hidden',\n                            // Use slash for default background\n                            ...(color.color === 'default' && {\n                                backgroundImage: `linear-gradient(to top right, transparent calc(50% - 0.5px), ${alpha(theme.palette.text.primary, 0.4)} calc(50% - 0.5px), ${alpha(theme.palette.text.primary, 0.4)} calc(50% + 0.5px), transparent calc(50% + 0.5px))`\n                            }),\n                            '&:hover': {\n                              transform: 'translateY(-1px) scale(1.05)',\n                              boxShadow: `0 4px 12px ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.4)}`,\n                              borderColor: color.color === 'default' ? theme.palette.text.primary : color.color,\n                            }\n                        }}\n                         aria-label={`Apply ${color.label} background color`}\n                        />\n                    </Tooltip>\n                    ))}\n                </Box>\n                 <Divider sx={{\n                   my: 1.5,\n                   backgroundColor: alpha(theme.palette.divider, 0.3),\n                   height: '1px'\n                 }} />\n            </Box>\n        )}\n\n        {/* Text Colors Section */}\n        <Box sx={{ mb: 2 }}>\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mb: 1,\n              color: theme.palette.text.primary,\n              display: 'block',\n              fontWeight: 600,\n              fontSize: '0.7rem',\n              textTransform: 'uppercase',\n              letterSpacing: '0.3px'\n            }}\n          >\n            Text Color\n          </Typography>\n          <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(24px, 1fr))', gap: 0.5 }}>\n            {TEXT_COLORS.map((color) => (\n              <Tooltip key={`text-${color.color}`} title={color.label} placement=\"top\">\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleApplyTextColor(color.color)}\n                  sx={{\n                    width: 24,\n                    height: 24,\n                    backgroundColor: color.color === 'default' ? 'transparent' : color.label === 'White' ? alpha(theme.palette.grey[400], 0.3) : alpha(color.color, 0.15),\n                    color: color.color === 'default' ? theme.palette.text.primary : color.color,\n                    border: `1px solid ${color.color === 'default' ? theme.palette.divider : color.color}`,\n                    borderRadius: '6px',\n                    p: 0,\n                    minWidth: 0,\n                    fontSize: '0.65rem',\n                    fontWeight: 'bold',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                    position: 'relative',\n                    overflow: 'hidden',\n                    '&::before': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      background: 'transparent',\n                      transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                      zIndex: -1,\n                    },\n                    '&:hover': {\n                      transform: 'translateY(-1px) scale(1.05)',\n                      boxShadow: `0 4px 12px ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.3)}`,\n                      borderColor: color.color === 'default' ? theme.palette.text.primary : color.color,\n                      '&::before': {\n                        background: `linear-gradient(135deg, ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.1)}, ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.05)})`,\n                      }\n                    }\n                  }}\n                  aria-label={`Apply ${color.label} text color`}\n                >\n                  {/* Use 'A' for text color indication */}\n                  {color.color === 'default' ? <Typography variant=\"caption\" sx={{lineHeight: 1, fontSize: '0.7rem'}}>Aa</Typography> : 'A'}\n                </IconButton>\n              </Tooltip>\n            ))}\n          </Box>\n        </Box>\n\n        {/* Background Colors Section */}\n        <Box>\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mb: 1,\n              color: theme.palette.text.primary,\n              display: 'block',\n              fontWeight: 600,\n              fontSize: '0.7rem',\n              textTransform: 'uppercase',\n              letterSpacing: '0.3px'\n            }}\n          >\n            Background Color\n          </Typography>\n           <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(24px, 1fr))', gap: 0.5 }}>\n            {BACKGROUND_COLORS.map((color) => (\n              <Tooltip key={`bg-${color.color}`} title={color.label} placement=\"top\">\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleApplyBackgroundColor(color.color)}\n                  sx={{\n                    width: 24,\n                    height: 24,\n                    backgroundColor: color.color === 'default' ? 'transparent' : color.color,\n                    border: `1px solid ${color.color === 'default' ? theme.palette.divider : alpha(color.color, 0.8)}`,\n                    borderRadius: '6px',\n                    p: 0,\n                    minWidth: 0,\n                    transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                    position: 'relative',\n                    overflow: 'hidden',\n                    // Use slash for default background\n                    ...(color.color === 'default' && {\n                        backgroundImage: `linear-gradient(to top right, transparent calc(50% - 0.5px), ${alpha(theme.palette.text.primary, 0.4)} calc(50% - 0.5px), ${alpha(theme.palette.text.primary, 0.4)} calc(50% + 0.5px), transparent calc(50% + 0.5px))`\n                    }),\n                    '&::before': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      background: 'transparent',\n                      transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                      zIndex: -1,\n                    },\n                    '&:hover': {\n                      transform: 'translateY(-1px) scale(1.05)',\n                      boxShadow: `0 4px 12px ${alpha(color.color === 'default' ? theme.palette.text.primary : color.color, 0.4)}`,\n                      borderColor: color.color === 'default' ? theme.palette.text.primary : color.color,\n                      '&::before': {\n                        background: color.color === 'default'\n                          ? `linear-gradient(135deg, ${alpha(theme.palette.text.primary, 0.1)}, ${alpha(theme.palette.text.primary, 0.05)})`\n                          : `linear-gradient(135deg, ${alpha(color.color, 0.2)}, ${alpha(color.color, 0.1)})`,\n                      }\n                    }\n                  }}\n                   aria-label={`Apply ${color.label} background color`}\n                />\n              </Tooltip>\n            ))}\n          </Box>\n        </Box>\n      </Menu>\n    );\n  };\n\n\n\n  // Render heading menu\n  const renderHeadingMenu = () => {\n    // Use a fragment or null to avoid rendering issues when closed\n    if (!headingMenuAnchor) return null;\n\n    const currentBlock = getCurrentBlockType(editorState);\n\n    return (\n      <Menu\n        id=\"heading-menu\" // Added ID for aria-controls\n        anchorEl={headingMenuAnchor}\n        open={Boolean(headingMenuAnchor)}\n        onClose={() => {\n          setHeadingMenuAnchor(null);\n          // Don't check selection when menu closes to prevent unwanted scrolling\n          // The toolbar will be repositioned naturally when user interacts with editor again\n          if (editorState.getSelection().getHasFocus()) {\n             setTimeout(() => editorRef.current?.focus(), 0);\n          }\n        }}\n        disablePortal={false} // Keep portal for proper positioning\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        disableScrollLock={true} // Prevent scroll lock that might cause jumps\n        disableAutoFocus={true} // Prevent auto focus that might cause scroll\n        disableEnforceFocus={true} // Prevent focus enforcement\n        disableRestoreFocus={true} // Prevent focus restoration that might cause scroll\n        slotProps={{\n          paper: {\n            onMouseDown: handleToolbarInteraction,\n            onTouchStart: handleToolbarInteraction,\n            sx: {\n              backgroundColor: theme.palette.mode === 'dark'\n                ? alpha(theme.palette.background.paper, 0.95)\n                : alpha(theme.palette.background.paper, 0.98),\n              backdropFilter: 'blur(20px)',\n              borderRadius: '12px',\n              border: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\n              boxShadow: theme.palette.mode === 'dark'\n                ? `0 8px 32px ${alpha('#000000', 0.4)}, 0 2px 8px ${alpha('#000000', 0.2)}`\n                : `0 8px 32px ${alpha(theme.palette.primary.main, 0.15)}, 0 2px 8px ${alpha('#000000', 0.1)}`,\n              zIndex: 1400,\n              mt: 1,\n              // Prevent any layout shifts\n              position: 'fixed',\n              willChange: 'transform',\n            }\n          }\n        }}\n      >\n        {HEADING_OPTIONS.map((option) => (\n          <MenuItem\n            key={option.style}\n            onClick={() => handleApplyHeading(option.style)}\n            selected={currentBlock === option.style}\n            sx={{\n              fontWeight: option.style.includes('header') ? 'bold' : 500,\n              fontSize: option.style === 'header-one' ? '1.4rem' : option.style === 'header-two' ? '1.2rem' : option.style === 'header-three' ? '1rem' : '0.85rem',\n              fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n              borderRadius: '8px',\n              margin: '2px 4px',\n              transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n              '&:hover': {\n                backgroundColor: alpha(theme.palette.primary.main, 0.08),\n                transform: 'translateX(4px)',\n              },\n              '&.Mui-selected': {\n                backgroundColor: alpha(theme.palette.primary.main, 0.12),\n                color: theme.palette.primary.main,\n                '&:hover': {\n                  backgroundColor: alpha(theme.palette.primary.main, 0.18),\n                }\n              }\n            }}\n          >\n            {option.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    );\n  };\n\n  // Render the floating toolbar\n  const renderFloatingToolbar = () => {\n    // Only render if toolbar should be visible and we have position data\n    if (!showFloatingToolbar || !floatingToolbarPosition) return null;\n\n    const currentStyles = editorState.getCurrentInlineStyle();\n    const currentBlockType = getCurrentBlockType(editorState);\n    const currentLink = getCurrentLink(editorState);\n\n    return (\n      // Using div for positioning\n      <div\n        style={{\n          position: 'absolute',\n          top: floatingToolbarPosition.top,\n          left: floatingToolbarPosition.left,\n          zIndex: 1300, // Ensure above editor content but below menus\n        }}\n        // Fade in/out via CSS animation on the Paper instead of Fade component\n      >\n        <MuiPaper\n          ref={toolbarRef}\n          onMouseDown={handleToolbarInteraction}\n          onTouchStart={handleToolbarInteraction}\n          elevation={0}\n          sx={{\n            borderRadius: '12px',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.mode === 'dark'\n              ? alpha(theme.palette.background.paper, 0.95)\n              : alpha(theme.palette.background.paper, 0.98),\n            backdropFilter: 'blur(20px)',\n            border: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\n            boxShadow: theme.palette.mode === 'dark'\n              ? `0 8px 32px ${alpha('#000000', 0.4)}, 0 2px 8px ${alpha('#000000', 0.2)}`\n              : `0 8px 32px ${alpha(theme.palette.primary.main, 0.15)}, 0 2px 8px ${alpha('#000000', 0.1)}`,\n            transition: 'opacity 0.15s ease-out, transform 0.15s ease-out',\n            animation: 'floatingToolbarFadeIn 0.15s ease-out forwards',\n            '@keyframes floatingToolbarFadeIn': {\n              '0%': { opacity: 0, transform: 'translateY(8px)' },\n              '100%': { opacity: 1, transform: 'translateY(0)' }\n            },\n            '&:hover': {\n              boxShadow: theme.palette.mode === 'dark'\n                ? `0 12px 40px ${alpha('#000000', 0.5)}, 0 4px 12px ${alpha('#000000', 0.3)}`\n                : `0 12px 40px ${alpha(theme.palette.primary.main, 0.2)}, 0 4px 12px ${alpha('#000000', 0.15)}`,\n              transform: 'translateY(-1px)',\n            }\n          }}\n          role=\"toolbar\"\n          aria-label=\"Text Formatting\"\n        >\n            <Toolbar\n              variant=\"dense\"\n              sx={{\n                p: 1,\n                minHeight: 'auto',\n                display: 'flex',\n                flexWrap: 'nowrap',\n                justifyContent: 'center',\n                gap: 0.5,\n                // Enhanced button styling\n                '& .MuiIconButton-root, & .MuiToggleButton-root': {\n                  color: theme.palette.text.secondary,\n                  borderRadius: '8px',\n                  transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                  position: 'relative',\n                  overflow: 'hidden',\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: 'transparent',\n                    transition: 'all 0.2s cubic-bezier(0.4, 0, 0.2, 1)',\n                    zIndex: -1,\n                  },\n                  '&:hover': {\n                    backgroundColor: alpha(theme.palette.primary.main, 0.08),\n                    color: theme.palette.primary.main,\n                    transform: 'translateY(-1px)',\n                    boxShadow: `0 4px 12px ${alpha(theme.palette.primary.main, 0.2)}`,\n                    '&::before': {\n                      background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.1)}, ${alpha(theme.palette.primary.light, 0.05)})`,\n                    }\n                  },\n                  '&.Mui-selected': {\n                    backgroundColor: alpha(theme.palette.primary.main, 0.12),\n                    color: theme.palette.primary.main,\n                    boxShadow: `0 2px 8px ${alpha(theme.palette.primary.main, 0.25)}`,\n                    '&::before': {\n                      background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.15)}, ${alpha(theme.palette.primary.light, 0.08)})`,\n                    },\n                    '&:hover': {\n                      backgroundColor: alpha(theme.palette.primary.main, 0.18),\n                      transform: 'translateY(-1px)',\n                      boxShadow: `0 6px 16px ${alpha(theme.palette.primary.main, 0.3)}`,\n                    }\n                  }\n                },\n                // Enhanced divider styling\n                '& .MuiDivider-root': {\n                  backgroundColor: alpha(theme.palette.divider, 0.3),\n                  margin: theme.spacing(0, 0.75),\n                  height: '24px',\n                  alignSelf: 'center',\n                }\n              }}\n            >\n              {/* Text Formatting */}\n              <ToggleButtonGroup\n                size=\"small\"\n                sx={{\n                  '& .MuiToggleButton-root': {\n                    border: 'none',\n                    margin: '0 2px',\n                    padding: '6px 8px',\n                    minWidth: '36px',\n                    height: '36px',\n                  }\n                }}\n              >\n                 <Tooltip title=\"Bold (Ctrl+B)\" placement=\"top\">\n                    <ToggleButton\n                        value=\"bold\"\n                        selected={currentStyles.has('BOLD')}\n                        onClick={() => handleToggleInlineStyle('BOLD')}\n                        disabled={disabled}\n                        aria-pressed={currentStyles.has('BOLD')}\n                        aria-label=\"Bold\"\n                    >\n                        <FormatBold fontSize=\"small\" />\n                    </ToggleButton>\n                 </Tooltip>\n                 <Tooltip title=\"Italic (Ctrl+I)\" placement=\"top\">\n                    <ToggleButton\n                        value=\"italic\"\n                        selected={currentStyles.has('ITALIC')}\n                        onClick={() => handleToggleInlineStyle('ITALIC')}\n                        disabled={disabled}\n                        aria-pressed={currentStyles.has('ITALIC')}\n                        aria-label=\"Italic\"\n                    >\n                        <FormatItalic fontSize=\"small\" />\n                    </ToggleButton>\n                 </Tooltip>\n                 <Tooltip title=\"Underline (Ctrl+U)\" placement=\"top\">\n                    <ToggleButton\n                        value=\"underline\"\n                        selected={currentStyles.has('UNDERLINE')}\n                        onClick={() => handleToggleInlineStyle('UNDERLINE')}\n                        disabled={disabled}\n                        aria-pressed={currentStyles.has('UNDERLINE')}\n                        aria-label=\"Underline\"\n                    >\n                        <FormatUnderlined fontSize=\"small\" />\n                    </ToggleButton>\n                 </Tooltip>\n              </ToggleButtonGroup>\n\n              <Divider orientation=\"vertical\" flexItem />\n\n              {/* Heading Menu */}\n              <Box>\n                <Tooltip title=\"Heading Style\" placement=\"top\">\n                    <IconButton\n                        size=\"small\"\n                        onClick={handleHeadingButtonClick}\n                        disabled={disabled}\n                        aria-haspopup=\"true\"\n                        aria-controls={headingMenuAnchor ? 'heading-menu' : undefined}\n                        aria-expanded={Boolean(headingMenuAnchor)}\n                        aria-label=\"Heading Style\"\n                        sx={{\n                          padding: '6px 8px',\n                          minWidth: '36px',\n                          height: '36px',\n                          margin: '0 2px',\n                        }}\n                    >\n                        <Title fontSize=\"small\" />\n                        <ArrowDropDown fontSize=\"inherit\" sx={{ ml: -0.5, fontSize: '16px' }}/>\n                    </IconButton>\n                 </Tooltip>\n              </Box>\n\n              <Divider orientation=\"vertical\" flexItem />\n\n              {/* List Formatting */}\n               <ToggleButtonGroup\n                 size=\"small\"\n                 sx={{\n                   '& .MuiToggleButton-root': {\n                     border: 'none',\n                     margin: '0 2px',\n                     padding: '6px 8px',\n                     minWidth: '36px',\n                     height: '36px',\n                   }\n                 }}\n               >\n                 <Tooltip title=\"Bullet List\" placement=\"top\">\n                    <ToggleButton\n                        value=\"bullet-list\"\n                        selected={currentBlockType === 'unordered-list-item'}\n                        onClick={() => handleToggleBlockType('unordered-list-item')}\n                        disabled={disabled}\n                        aria-pressed={currentBlockType === 'unordered-list-item'}\n                        aria-label=\"Bullet List\"\n                    >\n                        <FormatListBulleted fontSize=\"small\" />\n                    </ToggleButton>\n                 </Tooltip>\n                 <Tooltip title=\"Numbered List\" placement=\"top\">\n                    <ToggleButton\n                        value=\"number-list\"\n                        selected={currentBlockType === 'ordered-list-item'}\n                        onClick={() => handleToggleBlockType('ordered-list-item')}\n                        disabled={disabled}\n                        aria-pressed={currentBlockType === 'ordered-list-item'}\n                        aria-label=\"Numbered List\"\n                    >\n                        <FormatListNumbered fontSize=\"small\" />\n                    </ToggleButton>\n                 </Tooltip>\n               </ToggleButtonGroup>\n\n               <Divider orientation=\"vertical\" flexItem />\n\n               {/* Color Formatting */}\n               <Box>\n                 <Tooltip title=\"Text & Background Color\" placement=\"top\">\n                    <IconButton\n                        size=\"small\"\n                        onClick={handleColorButtonClick}\n                        disabled={disabled}\n                        aria-haspopup=\"true\"\n                        aria-controls={colorMenuAnchor ? 'color-menu' : undefined}\n                        aria-expanded={Boolean(colorMenuAnchor)}\n                        aria-label=\"Text and background color\"\n                        sx={{\n                          padding: '6px 8px',\n                          minWidth: '36px',\n                          height: '36px',\n                          margin: '0 2px',\n                        }}\n                    >\n                        <Palette fontSize=\"small\" />\n                    </IconButton>\n                 </Tooltip>\n               </Box>\n\n               <Divider orientation=\"vertical\" flexItem />\n\n               {/* Link and Clear Formatting */}\n               <ToggleButtonGroup\n                 size=\"small\"\n                 sx={{\n                   '& .MuiToggleButton-root, & .MuiIconButton-root': {\n                     border: 'none',\n                     margin: '0 2px',\n                     padding: '6px 8px',\n                     minWidth: '36px',\n                     height: '36px',\n                   }\n                 }}\n               >\n                 <Tooltip title={currentLink ? `Edit Link: ${currentLink.url}` : \"Insert Link (Ctrl+L)\"} placement=\"top\">\n                    <ToggleButton\n                        value=\"link\"\n                        selected={Boolean(currentLink)}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          handleLinkClick();\n                        }}\n                        onMouseDown={handleToolbarInteraction}\n                        onTouchStart={handleToolbarInteraction}\n                        disabled={disabled}\n                        aria-pressed={Boolean(currentLink)}\n                        aria-label={currentLink ? \"Edit Link\" : \"Insert Link\"}\n                    >\n                        <Link fontSize=\"small\" />\n                    </ToggleButton>\n                 </Tooltip>\n                 <Tooltip title=\"Clear Formatting (Ctrl+Shift+X)\" placement=\"top\">\n                    <IconButton\n                        size=\"small\"\n                        onClick={handleClearFormatting}\n                        disabled={disabled}\n                        aria-label=\"Clear Formatting\"\n                    >\n                        <FormatClear fontSize=\"small\" />\n                    </IconButton>\n                 </Tooltip>\n               </ToggleButtonGroup>\n\n\n            </Toolbar>\n        </MuiPaper>\n      </div>\n    );\n  };\n\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n      {label && (\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 0.5, fontWeight: 500 }}>\n          {label}\n        </Typography>\n      )}\n\n      {/* Main Editor Wrapper */}\n      <Box\n        sx={{\n          opacity: disabled ? 0.6 : 1,\n          position: 'relative', // Crucial for absolute positioning of toolbar\n\n          overflow: 'hidden', // Clip potential overflows (like toolbar if not positioned carefully)\n          transition: 'border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\n          \n        }}\n      >\n        {/* Editor Scrollable Area */}\n        <Box\n          ref={editorWrapperRef}\n          onClick={focusEditor}\n          sx={{\n            padding: theme.spacing(1.2, 1.8), // Reduced padding to match smaller text\n            minHeight,\n            maxHeight,\n            overflow: 'auto', // Keep scrolling internal to this Box\n            cursor: disabled ? 'not-allowed' : 'text',\n            position: 'relative', // Needed for placeholder positioning\n            ...scrollbarStyles(theme),\n\n            // --- Draft JS Editor Styles ---\n            '& .public-DraftEditorPlaceholder-root': {\n                color: theme.palette.text.disabled,\n                position: 'absolute',\n                top: theme.spacing(1.2), // Match reduced padding\n                left: theme.spacing(1.8), // Match reduced padding\n                zIndex: 0, // Below content\n                pointerEvents: 'none', // Don't interfere with clicks\n                opacity: 0.8,\n                fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n                fontWeight: 500, // Medium weight for thicker text\n            },\n            '& .public-DraftEditor-content': {\n              minHeight: typeof minHeight === 'number' ? `calc(${minHeight}px - ${theme.spacing(3)})` : `calc(${minHeight} - ${theme.spacing(3)})`, // Adjust minHeight based on padding\n              fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n              fontSize: '1rem',\n              lineHeight: 1.3, // Reduced line height to match the image\n              fontWeight: 500, // Medium weight for thicker text\n              color: theme.palette.text.primary,\n              position: 'relative',\n              zIndex: 1, // Above placeholder\n              // Selection color handled globally or via theme usually\n              '& *::selection': {\n                 backgroundColor: alpha(theme.palette.primary.main, 0.3),\n              },\n            },\n            // Custom Block Styles\n            '& .RichEditor-h1': {\n              fontSize: '1.4rem', fontWeight: 'bold', margin: '0.8rem 0 0.4rem',\n              fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n            },\n            '& .RichEditor-h2': {\n              fontSize: '1.2rem', fontWeight: 'bold', margin: '0.6rem 0 0.3rem',\n              fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n            },\n            '& .RichEditor-h3': {\n              fontSize: '1rem', fontWeight: 'bold', margin: '0.5rem 0 0.25rem', fontStyle: 'italic',\n              fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n            },\n            '& .RichEditor-ul, & .RichEditor-ol': {\n              marginLeft: '1.5rem', // Reduced indentation for lists\n              marginBlockStart: '0.4em',\n              marginBlockEnd: '0.4em',\n              paddingInlineStart: '0', // Reset browser default padding\n              fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n              fontWeight: 500, // Medium weight for thicker text\n            },\n            '& .RichEditor-ul li, & .RichEditor-ol li': {\n              margin: '0.2rem 0',\n              paddingLeft: '0.4rem', // Reduced space between bullet/number and text\n              fontFamily: \"'Segoe UI', 'Roboto', 'Helvetica', sans-serif\",\n              fontWeight: 500, // Medium weight for thicker text\n            },\n             '& .RichEditor-ul li::marker': { // Style bullets if needed\n                 // content: '\"• \"';\n                 // color: theme.palette.text.secondary;\n             },\n             '& .RichEditor-ol': { // Ensure ol counters work\n                 // listStyleType: 'decimal';\n             },\n             // Link styles - enhanced visual feedback\n             '& .rich-editor-link': {\n               color: `${theme.palette.primary.main} !important`,\n               textDecoration: 'underline !important',\n               cursor: 'pointer !important',\n               backgroundColor: `${alpha(theme.palette.primary.main, 0.08)} !important`,\n               padding: '2px 4px !important',\n               borderRadius: '4px !important',\n               border: `1px solid ${alpha(theme.palette.primary.main, 0.2)} !important`,\n               display: 'inline-block !important',\n               transition: 'all 0.2s ease-in-out !important',\n               margin: '0 1px !important',\n               fontWeight: '500 !important',\n               '&:hover': {\n                 color: `${theme.palette.primary.dark} !important`,\n                 backgroundColor: `${alpha(theme.palette.primary.main, 0.15)} !important`,\n                 borderColor: `${alpha(theme.palette.primary.main, 0.4)} !important`,\n                 transform: 'translateY(-1px) !important',\n                 boxShadow: `0 2px 8px ${alpha(theme.palette.primary.main, 0.25)} !important`,\n               },\n               '&:active': {\n                 transform: 'translateY(0px) !important',\n                 backgroundColor: `${alpha(theme.palette.primary.main, 0.2)} !important`,\n                 boxShadow: `0 1px 4px ${alpha(theme.palette.primary.main, 0.3)} !important`,\n               }\n             }\n          }}\n        >\n          <Editor\n            ref={editorRef}\n            editorState={editorState}\n            onChange={handleEditorChange}\n            placeholder={placeholder}\n            customStyleMap={styleMap}\n            blockStyleFn={blockStyleFn}\n            handleKeyCommand={handleKeyCommandWrapper}\n            keyBindingFn={keyBindingFn}\n            readOnly={disabled}\n            spellCheck={true}\n          />\n        </Box>\n\n        {/* Render the floating toolbar absolutely positioned relative to the main wrapper */}\n        {renderFloatingToolbar()}\n\n      </Box>\n\n      {/* Render the menus (outside the main editor box, managed by MUI Menu logic) */}\n      {renderHeadingMenu()}\n      {renderColorMenu()}\n\n      {/* Link Dialog */}\n      <Dialog\n        open={linkDialogOpen}\n        onClose={() => setLinkDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n        disableScrollLock={true}\n        disableEnforceFocus={false}\n        disableRestoreFocus={true}\n      >\n        <DialogTitle>{getCurrentLink(editorState) ? 'Edit Link' : 'Insert Link'}</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Link Text\"\n            fullWidth\n            variant=\"outlined\"\n            value={linkText}\n            onChange={(e) => setLinkText(e.target.value)}\n            sx={{ mb: 2 }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && linkUrl.trim()) {\n                e.preventDefault();\n                insertLink();\n              }\n            }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"URL\"\n            fullWidth\n            variant=\"outlined\"\n            value={linkUrl}\n            onChange={(e) => setLinkUrl(e.target.value)}\n            placeholder=\"https://example.com\"\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && linkUrl.trim()) {\n                e.preventDefault();\n                insertLink();\n              }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setLinkDialogOpen(false)}>\n            Cancel\n          </Button>\n          {getCurrentLink(editorState) && (\n            <Button\n              onClick={() => {\n                removeLink();\n                setLinkDialogOpen(false);\n                setLinkText('');\n                setLinkUrl('');\n              }}\n              color=\"error\"\n              variant=\"outlined\"\n            >\n              Remove Link\n            </Button>\n          )}\n          <Button\n            onClick={insertLink}\n            variant=\"contained\"\n            disabled={!linkUrl.trim()}\n          >\n            {getCurrentLink(editorState) ? 'Update Link' : 'Insert Link'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n      {/* Helper text and character count */}\n      {(helperText || !hideCharacterCount) && (\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 0.5 }}>\n          {helperText && (\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {helperText}\n            </Typography>\n          )}\n          {!hideCharacterCount && (() => {\n            const currentLength = editorState.getCurrentContent().getPlainText().length;\n            const isNearLimit = maxLength && currentLength > maxLength * 0.8;\n            const isAtLimit = maxLength && currentLength >= maxLength;\n\n            return (\n              <Typography\n                variant=\"caption\"\n                sx={{\n                  ml: 'auto',\n                  color: isAtLimit ? 'error.main' : isNearLimit ? 'warning.main' : 'text.secondary'\n                }}\n              >\n                {currentLength}{maxLength ? ` / ${maxLength}` : ''} characters\n              </Typography>\n            );\n          })()}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default RichTextEditor;","import React from 'react';\nimport { CompositeDecorator } from 'draft-js';\nimport { LinkComponent } from '../components/LinkComponent';\nimport { findLinkEntities } from './linkUtils';\n\n/**\n * Create decorator factory for links with props\n */\nexport const createDecorator = (\n  calendarId?: string, \n  trades?: Array<{ id: string; [key: string]: any }>, \n  onOpenGalleryMode?: (trades: any[], initialTradeId?: string, title?: string) => void\n) => {\n  return new CompositeDecorator([\n    {\n      strategy: findLinkEntities,\n      component: (props: any) => (\n        React.createElement(LinkComponent, {\n          ...props,\n          calendarId,\n          trades,\n          onOpenGalleryMode\n        })\n      ),\n    },\n  ]);\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { \n  loadRecentColors, \n  saveRecentColors, \n  updateRecentColors,\n  type ColorItem \n} from '../utils/localStorage';\nimport { STORAGE_KEYS } from '../constants/colors';\n\n/**\n * Custom hook to manage recently used colors\n */\nexport function useRecentColors() {\n  const [recentTextColors, setRecentTextColors] = useState<ColorItem[]>([]);\n  const [recentBgColors, setRecentBgColors] = useState<ColorItem[]>([]);\n\n  // Load recent colors on mount\n  useEffect(() => {\n    setRecentTextColors(loadRecentColors(STORAGE_KEYS.RECENT_TEXT_COLORS));\n    setRecentBgColors(loadRecentColors(STORAGE_KEYS.RECENT_BG_COLORS));\n  }, []);\n\n  // Add a text color to recent list\n  const addRecentTextColor = useCallback((color: ColorItem) => {\n    setRecentTextColors(prev => {\n      const newList = updateRecentColors(color, prev);\n      saveRecentColors(STORAGE_KEYS.RECENT_TEXT_COLORS, newList);\n      return newList;\n    });\n  }, []);\n\n  // Add a background color to recent list\n  const addRecentBgColor = useCallback((color: ColorItem) => {\n    setRecentBgColors(prev => {\n      const newList = updateRecentColors(color, prev);\n      saveRecentColors(STORAGE_KEYS.RECENT_BG_COLORS, newList);\n      return newList;\n    });\n  }, []);\n\n  return {\n    recentTextColors,\n    recentBgColors,\n    addRecentTextColor,\n    addRecentBgColor,\n  };\n}\n","import React from 'react';\n\n/**\n * Handle heading menu button clicks (toggle open/close)\n */\nexport const createHeadingButtonClickHandler = (\n  headingMenuAnchor: HTMLElement | null,\n  setHeadingMenuAnchor: (anchor: HTMLElement | null) => void,\n  editorRef: React.RefObject<any>\n) => {\n  return (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Store current scroll position before opening menu\n    const editorElement = editorRef.current?.editor;\n    const scrollTop = editorElement?.scrollTop || 0;\n\n    if (headingMenuAnchor) {\n      setHeadingMenuAnchor(null); // Close if already open\n      setTimeout(() => editorRef.current?.focus(), 0); // Refocus\n    } else {\n      setHeadingMenuAnchor(event.currentTarget); // Open if closed\n\n      // Restore scroll position after menu opens\n      setTimeout(() => {\n        if (editorElement) {\n          editorElement.scrollTop = scrollTop;\n        }\n      }, 0);\n    }\n  };\n};\n\n/**\n * Handle color menu button clicks (toggle open/close)\n */\nexport const createColorButtonClickHandler = (\n  colorMenuAnchor: HTMLElement | null,\n  setColorMenuAnchor: (anchor: HTMLElement | null) => void,\n  editorRef: React.RefObject<any>\n) => {\n  return (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Store current scroll position before opening menu\n    const editorElement = editorRef.current?.editor;\n    const scrollTop = editorElement?.scrollTop || 0;\n\n    if (colorMenuAnchor) {\n      setColorMenuAnchor(null); // Close if already open\n      setTimeout(() => editorRef.current?.focus(), 0); // Refocus\n    } else {\n      setColorMenuAnchor(event.currentTarget); // Open if closed\n\n      // Restore scroll position after menu opens\n      setTimeout(() => {\n        if (editorElement) {\n          editorElement.scrollTop = scrollTop;\n        }\n      }, 0);\n    }\n  };\n};\n\n/**\n * Create menu close handler with focus restoration\n */\nexport const createMenuCloseHandler = (\n  setMenuAnchor: (anchor: HTMLElement | null) => void,\n  editorState: any,\n  editorRef: React.RefObject<any>\n) => {\n  return () => {\n    setMenuAnchor(null);\n    // Don't check selection when menu closes to prevent unwanted scrolling\n    // The toolbar will be repositioned naturally when user interacts with editor again\n    // Refocus editor after closing menu only if editor still has focus logically\n    if (editorState.getSelection().getHasFocus()) {\n      setTimeout(() => editorRef.current?.focus(), 0);\n    }\n  };\n};\n","import React from 'react';\nimport { EditorState } from 'draft-js';\nimport { getCurrentLink, trimSelection } from './linkUtils';\n\n/**\n * Handle link dialog opening and populate fields\n */\nexport const handleLinkDialogOpen = (\n  editorState: EditorState,\n  editorWrapperRef: React.RefObject<HTMLDivElement | null>,\n  savedScrollPositionRef: React.MutableRefObject<number>,\n  setLinkText: (text: string) => void,\n  setLinkUrl: (url: string) => void,\n  setLinkDialogOpen: (open: boolean) => void\n) => {\n  // Store current scroll position before opening dialog\n  const editorElement = editorWrapperRef.current;\n  if (editorElement) {\n    savedScrollPositionRef.current = editorElement.scrollTop;\n  }\n\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n\n  // Check if we're editing an existing link\n  const currentLink = getCurrentLink(editorState);\n  if (currentLink) {\n    // Editing existing link - populate with current values\n    const startKey = selection.getStartKey();\n    const endKey = selection.getEndKey();\n\n    if (startKey === endKey) {\n      const block = contentState.getBlockForKey(startKey);\n      const blockText = block.getText();\n\n      // Find the extent of the link entity\n      let linkStart = selection.getStartOffset();\n      let linkEnd = selection.getEndOffset();\n\n      // Expand selection to cover the entire link\n      while (linkStart > 0 && block.getEntityAt(linkStart - 1) === currentLink.entityKey) {\n        linkStart--;\n      }\n      while (linkEnd < blockText.length && block.getEntityAt(linkEnd) === currentLink.entityKey) {\n        linkEnd++;\n      }\n\n      const linkText = blockText.slice(linkStart, linkEnd);\n      setLinkText(linkText);\n    } else {\n      setLinkText(''); // Multi-block links are complex, let user re-enter\n    }\n    setLinkUrl(currentLink.url);\n  } else if (selection.isCollapsed()) {\n    // No text selected, open dialog for new link\n    setLinkText('');\n    setLinkUrl('');\n  } else {\n    // Text selected, use it as link text (trim whitespace)\n    const { text: trimmedText } = trimSelection(selection, contentState);\n    setLinkText(trimmedText);\n    setLinkUrl('');\n  }\n\n  // Small delay to ensure scroll position is captured before dialog opens\n  setTimeout(() => {\n    setLinkDialogOpen(true);\n  }, 10);\n};\n\n/**\n * Handle link dialog close and cleanup\n */\nexport const handleLinkDialogClose = (\n  setLinkDialogOpen: (open: boolean) => void,\n  setLinkText: (text: string) => void,\n  setLinkUrl: (url: string) => void\n) => {\n  setLinkDialogOpen(false);\n  setLinkText('');\n  setLinkUrl('');\n};\n","import { Theme } from '@mui/material/styles';\r\n\r\n/**\r\n * Creates consistent scrollbar styles for use throughout the application\r\n * @param theme The current MUI theme\r\n * @returns An object containing scrollbar styles that can be spread into sx props\r\n */\r\nexport const scrollbarStyles = (theme: Theme) => ({\r\n  '&::-webkit-scrollbar': {\r\n    width: '8px',\r\n    height: '8px'\r\n  },\r\n  '&::-webkit-scrollbar-track': {\r\n    background: 'transparent'\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    background: theme.palette.mode === 'dark'\r\n      ? 'rgba(255, 255, 255, 0.2)'\r\n      : 'rgba(0, 0, 0, 0.2)',\r\n    borderRadius: '4px',\r\n    '&:hover': {\r\n      background: theme.palette.mode === 'dark'\r\n        ? 'rgba(255, 255, 255, 0.3)'\r\n        : 'rgba(0, 0, 0, 0.3)'\r\n    }\r\n  }\r\n});","import { styled, alpha } from '@mui/material/styles';\r\nimport { Paper, Box, Typography, Button, IconButton, Chip, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\n\r\nexport type DayStatus = 'win' | 'loss' | 'neutral' | 'breakeven';\r\n\r\n// Calendar day styled component\r\nexport const StyledCalendarDay = styled(Box)<{\r\n  $isCurrentMonth: boolean;\r\n  $dayStatus: DayStatus;\r\n}>(({ theme, $isCurrentMonth, $dayStatus }) => ({\r\n  padding: theme.spacing(1),\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  borderRadius: theme.shape.borderRadius,\r\n  transition: 'all 0.1s ease-in-out',\r\n  opacity: $isCurrentMonth ? 1 : 0.5,\r\n  backgroundColor: $dayStatus === 'win'\r\n    ? alpha(theme.palette.success.main, 0.1)\r\n    : $dayStatus === 'loss'\r\n      ? alpha(theme.palette.error.main, 0.1)\r\n      : theme.palette.background.paper\r\n}));\r\n\r\nexport const CalendarCell = styled(Box)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  overflow: 'hidden',\r\n  backgroundColor: alpha(theme.palette.background.paper, 0.05),\r\n  border: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n}));\r\n\r\nexport const WeekdayHeader = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  backgroundColor: alpha(theme.palette.background.paper, 0.05),\r\n  borderRadius: theme.shape.borderRadius,\r\n}));\r\n\r\n// Day number styled component\r\nexport const DayNumber = styled(Typography)<{ $isCurrentMonth: boolean }>(({ theme, $isCurrentMonth }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  color: $isCurrentMonth ? theme.palette.text.primary : theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(0.5)\r\n}));\r\n\r\n// Trade amount styled component\r\nexport const TradeAmount = styled(Typography)<{ $dayStatus: 'win' | 'loss' | 'neutral' | 'breakeven' }>(({ theme, $dayStatus }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 600,\r\n  color: $dayStatus === 'win'\r\n    ? theme.palette.success.main\r\n    : $dayStatus === 'loss'\r\n      ? theme.palette.error.main\r\n      : theme.palette.text.primary\r\n}));\r\n\r\n// Trade count styled component\r\nexport const TradeCount = styled(Typography)(({ theme }) => ({\r\n  fontSize: '0.75rem',\r\n  color: theme.palette.text.secondary,\r\n  fontWeight: 500\r\n}));\r\n\r\n// Action button styled component\r\nexport const ActionButton = styled(IconButton)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.common.white, 0.1)\r\n    : alpha(theme.palette.common.black, 0.05),\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.mode === 'dark'\r\n      ? alpha(theme.palette.common.white, 0.2)\r\n      : alpha(theme.palette.common.black, 0.1),\r\n  },\r\n  width: 32,\r\n  height: 32,\r\n}));\r\n\r\n// Status chip styled component\r\nexport const StatusChip = styled(Chip)(({ theme }) => ({\r\n  fontWeight: 600,\r\n  borderRadius: 16,\r\n  '&.win': {\r\n    backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n    color: theme.palette.success.main,\r\n    border: `1px solid ${alpha(theme.palette.success.main, 0.3)}`,\r\n  },\r\n  '&.loss': {\r\n    backgroundColor: alpha(theme.palette.error.main, 0.1),\r\n    color: theme.palette.error.main,\r\n    border: `1px solid ${alpha(theme.palette.error.main, 0.3)}`,\r\n  },\r\n}));\r\n\r\n// Card container styled component\r\nexport const CardContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[2],\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.7)\r\n    : theme.palette.background.paper,\r\n  transition: 'all 0.3s ease-in-out',\r\n  '&:hover': {\r\n    boxShadow: theme.shadows[4],\r\n  },\r\n}));\r\n\r\n// Stats container styled component\r\nexport const StatsContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: theme.spacing(2),\r\n  padding: theme.spacing(2),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.5)\r\n    : alpha(theme.palette.background.default, 0.7),\r\n  border: `1px solid ${theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.common.white, 0.1)\r\n    : alpha(theme.palette.common.black, 0.1)}`,\r\n}));\r\n\r\n// Stat item styled component\r\nexport const StatItem = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(1),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.7)\r\n    : theme.palette.background.paper,\r\n  boxShadow: theme.shadows[1],\r\n}));\r\n\r\n// Stat label styled component\r\nexport const StatLabel = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// Stat value styled component\r\nexport const StatValue = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 700,\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\n// Primary button styled component\r\nexport const PrimaryButton = styled(Button)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(1, 2),\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  boxShadow: 'none',\r\n  '&:hover': {\r\n    boxShadow: theme.shadows[2],\r\n  },\r\n}));\r\n\r\n// Secondary button styled component\r\nexport const SecondaryButton = styled(Button)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(1, 2),\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  borderWidth: 2,\r\n  '&:hover': {\r\n    borderWidth: 2,\r\n  },\r\n}));\r\n\r\n// Dialog title styled component\r\nexport const DialogTitleStyled = styled(DialogTitle)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(2),\r\n  borderBottom: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// Dialog content styled component\r\nexport const DialogContentStyled = styled(DialogContent)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: theme.spacing(2)\r\n}));\r\n\r\n// Dialog actions styled component\r\nexport const DialogActionsStyled = styled(DialogActions)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// Form field styled component\r\nexport const FormField = styled(Box)(({ theme }) => ({\r\n  marginBottom: theme.spacing(2)\r\n}));\r\n\r\n// Trade list item styled component\r\nexport const TradeListItem = styled(Box)<{ $type?: 'win' | 'loss' | 'breakeven' }>(({ theme, $type }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(1.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: $type === 'win'\r\n    ? alpha(theme.palette.success.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n    : $type === 'loss'\r\n      ? alpha(theme.palette.error.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n      : $type === 'breakeven'\r\n        ? alpha(theme.palette.info.main, theme.palette.mode === 'dark' ? 0.1 : 0.05)\r\n        : theme.palette.background.paper,\r\n  border: '1px solid',\r\n  borderColor: $type === 'win'\r\n    ? alpha(theme.palette.success.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n    : $type === 'loss'\r\n      ? alpha(theme.palette.error.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n      : $type === 'breakeven'\r\n        ? alpha(theme.palette.info.main, theme.palette.mode === 'dark' ? 0.2 : 0.1)\r\n        : theme.palette.divider,\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-1px)',\r\n    boxShadow: `0 2px 8px ${alpha(\r\n      $type === 'win'\r\n        ? theme.palette.success.main\r\n        : $type === 'loss'\r\n          ? theme.palette.error.main\r\n          : theme.palette.primary.main,\r\n      0.15\r\n    )}`,\r\n    borderColor: $type === 'win'\r\n      ? theme.palette.success.main\r\n      : $type === 'loss'\r\n        ? theme.palette.error.main\r\n        : theme.palette.primary.main\r\n  }\r\n}));\r\n\r\n// Trade info styled component\r\nexport const TradeInfo = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flex: 1,\r\n  alignItems: 'center',\r\n  gap: theme.spacing(2)\r\n}));\r\n\r\n// Trade actions styled component\r\nexport const TradeActions = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  gap: theme.spacing(1)\r\n}));\r\n\r\n// Calendar header styled component\r\nexport const CalendarHeader = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(2),\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\n// Calendar grid styled component\r\nexport const CalendarGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(7, 1fr)',\r\n  gap: theme.spacing(1),\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\n// Calendar weekday header styled component\r\nexport const CalendarWeekdayHeader = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(7, 1fr)',\r\n  gap: theme.spacing(1),\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// Calendar weekday styled component\r\nexport const CalendarWeekday = styled(Typography)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// Account balance card styled component\r\nexport const AccountBalanceCard = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  marginBottom: theme.spacing(2),\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.8)\r\n    : theme.palette.background.paper,\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[2],\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: theme.shadows[4],\r\n  },\r\n}));\r\n\r\n// Account balance title styled component\r\nexport const AccountBalanceTitle = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// Account balance amount styled component\r\nexport const AccountBalanceAmount = styled(Typography)(({ theme }) => ({\r\n  fontSize: '2rem',\r\n  fontWeight: 700,\r\n  color: theme.palette.text.primary,\r\n  textAlign: 'center',\r\n  marginBottom: theme.spacing(0.5),\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '1.5rem',\r\n  },\r\n}));\r\n\r\n// Account balance change styled component\r\nexport const AccountBalanceChange = styled(Typography)(({ theme }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: 500,\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '0.875rem',\r\n  },\r\n}));\r\n\r\n// Monthly stats card styled component\r\nexport const MonthlyStatsCard = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  background: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.8)\r\n    : theme.palette.background.paper,\r\n  backdropFilter: 'blur(10px)',\r\n  borderRadius: theme.shape.borderRadius * 2,\r\n  boxShadow: theme.shadows[4],\r\n}));\r\n\r\n// Monthly stats title styled component\r\nexport const MonthlyStatsTitle = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\n// Monthly stats grid styled component\r\nexport const MonthlyStatsGrid = styled(Box)(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\r\n  gap: theme.spacing(2),\r\n}));\r\n\r\n// Monthly stat item styled component\r\nexport const MonthlyStatItem = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1.5),\r\n  backgroundColor: theme.palette.mode === 'dark'\r\n    ? alpha(theme.palette.background.paper, 0.6)\r\n    : theme.palette.background.paper,\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[1],\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: theme.shadows[3],\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// Monthly stat label styled component\r\nexport const MonthlyStatLabel = styled(Typography)(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(0.5),\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '0.75rem',\r\n  },\r\n}));\r\n\r\n// Monthly stat value styled component\r\nexport const MonthlyStatValue = styled(Typography)(({ theme }) => ({\r\n  fontSize: '1.25rem',\r\n  fontWeight: 600,\r\n  color: theme.palette.text.primary,\r\n  textAlign: 'center',\r\n  [theme.breakpoints.down('sm')]: {\r\n    fontSize: '1rem',\r\n  },\r\n}));\r\n\r\n// Journal link styled component\r\nexport const JournalLink = styled('a')(({ theme }) => ({\r\n  color: theme.palette.primary.main,\r\n  textDecoration: 'none',\r\n  fontSize: '0.875rem',\r\n  '&:hover': {\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\n// Animated pulse styled component\r\nexport const AnimatedPulse = styled(Box)(({ theme }) => ({\r\n  animation: `pulse 2s ${theme.transitions.easing.easeInOut} infinite`\r\n}));","import { SxProps, Theme } from '@mui/material';\r\n\r\nexport const dialogProps = {\r\n  PaperProps: {\r\n    sx: {\r\n      bgcolor: 'background.paper',\r\n      borderRadius: 2,\r\n      boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.15)'\r\n    }\r\n  },\r\n  sx: {\r\n    '& .MuiBackdrop-root': {\r\n      backdropFilter: 'blur(4px)',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n    }\r\n  }\r\n} as const;\r\n\r\n// Helper function to merge additional styles with default dialog styles\r\nexport const mergeDialogStyles = (additionalSx?: SxProps<Theme>) => ({\r\n  ...dialogProps,\r\n  sx: {\r\n    ...dialogProps.sx,\r\n    ...(additionalSx || {})\r\n  }\r\n}); ","/**\n * Utility functions for generating consistent colors for tags\n * Supports grouped tags in format \"Group:Tag\" (e.g., \"Strategy:Volume\")\n */\n\nimport { alpha } from '@mui/material/styles';\nimport { Theme } from '@mui/material';\n\n// Predefined color palette for better visual consistency\nconst TAG_COLORS = [\n  '#1565C0', // Dark Blue\n  '#2E7D32', // Dark Green\n  '#EF6C00', // Dark Orange\n  '#6A1B9A', // Dark Purple\n  '#AD1457', // Dark Pink\n  '#00838F', // Dark Cyan\n  '#FFA000', // Dark Amber\n  '#4E342E', // Dark Brown\n  '#455A64', // Dark Blue Grey\n  '#558B2F', // Dark Light Green\n  '#D84315', // Dark Deep Orange\n  '#4527A0', // Dark Deep Purple\n  '#283593', // Dark Indigo\n  '#00695C', // Dark Teal\n  '#9E9D24', // Dark Lime\n  '#F9A825', // Dark Yellow\n];\n\n/**\n * Generates a consistent color hash from a string\n * @param str The string to generate a color for\n * @returns A number between 0 and TAG_COLORS.length\n */\nconst hashString = (str: string): number => {\n  // Simple but effective string hash function\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  // Make sure we get a positive number and map it directly to our color array length\n  return Math.abs(hash) % TAG_COLORS.length;\n};\n\n/**\n * Checks if a tag is a grouped tag (contains a colon)\n * @param tag The tag to check\n * @returns True if the tag is grouped\n */\nexport const isGroupedTag = (tag: string): boolean => {\n  return tag.includes(':');\n};\n\n/**\n * Gets the group name from a grouped tag\n * @param tag The grouped tag (e.g., \"Strategy:Volume\")\n * @returns The group name (e.g., \"Strategy\")\n */\nexport const getTagGroup = (tag: string): string => {\n  if (!isGroupedTag(tag)) return '';\n  return tag.split(':')[0];\n};\n\n/**\n * Gets the tag name without the group prefix\n * @param tag The grouped tag (e.g., \"Strategy:Volume\")\n * @returns The tag name without group (e.g., \"Volume\")\n */\nexport const getTagName = (tag: string): string => {\n  if (!isGroupedTag(tag)) return tag;\n  const parts = tag.split(':');\n  return parts.length > 1 ? parts[1] : parts[0];\n};\n\n/**\n * Gets a consistent color for a tag\n * For grouped tags, the color is based on the group name\n * @param tag The tag name\n * @returns A hex color code\n */\nexport const getTagColor = (tag: string): string => {\n  // For grouped tags, use the group name for color consistency within groups\n  const colorKey = isGroupedTag(tag) ? getTagGroup(tag) : tag;\n  // Get the index directly from the hash function\n  const index = hashString(colorKey);\n  return TAG_COLORS[index];\n};\n\n/**\n * Gets tag chip styles for consistent appearance across the app\n * @param tag The tag name\n * @param theme The current theme\n * @returns Style object for the tag chip\n */\nexport const getTagChipStyles = (tag: string, theme: Theme) => {\n  const color = getTagColor(tag);\n  return {\n    backgroundColor: alpha(color, 0.8),\n    color: alpha(\"#ffffff\", 0.8),\n    fontWeight: 500,\n    '& .MuiChip-deleteIcon': {\n      color: '#ffffff',\n      '&:hover': {\n        color: alpha('#ffffff', 0.8)\n      }\n    }\n  };\n};\n\n/**\n * Filters tags by group name\n * @param tags Array of tags to filter\n * @param group Group name to filter by\n * @returns Array of tags that belong to the specified group\n */\nexport const filterTagsByGroup = (tags: string[], group: string): string[] => {\n  return tags.filter(tag => isGroupedTag(tag) && getTagGroup(tag) === group);\n};\n\n/**\n * Gets all unique group names from an array of tags\n * @param tags Array of tags to extract groups from\n * @returns Array of unique group names\n */\nexport const getUniqueTagGroups = (tags: string[]): string[] => {\n  const groups = new Set<string>();\n\n  tags.forEach(tag => {\n    if (isGroupedTag(tag)) {\n      groups.add(getTagGroup(tag));\n    }\n  });\n\n  return Array.from(groups).sort();\n};\n\n/**\n * Formats a tag for display, optionally hiding the group prefix\n * @param tag The tag to format\n * @param hideGroup Whether to hide the group prefix\n * @returns Formatted tag for display\n */\nexport const formatTagForDisplay = (tag: string, hideGroup: boolean = false): string => {\n  if (!isGroupedTag(tag) || !hideGroup) return tag;\n  return getTagName(tag);\n};\n"],"names":["_ref","onToggleTheme","mode","title","showBackButton","backButtonPath","onBackClick","theme","useTheme","navigate","useNavigate","user","signOut","signInWithGoogle","useAuth","_jsx","AppBar","position","color","elevation","sx","backdropFilter","backgroundColor","alpha","palette","background","default","borderBottom","divider","zIndex","drawer","children","_jsxs","Toolbar","px","xs","sm","Box","display","alignItems","gap","flexGrow","minWidth","IconButton","onClick","handleBackButtonClick","size","bgcolor","primary","main","ArrowBackIcon","Typography","variant","component","fontSize","fontWeight","overflow","textOverflow","whiteSpace","Stack","direction","spacing","LightModeIcon","DarkModeIcon","maxWidth","email","Avatar","src","photoURL","undefined","width","height","toUpperCase","Button","async","error","console","LogoutIcon","GoogleIcon","fadeIn","keyframes","slideUp","slideDown","slideLeft","slideRight","scaleUp","shake","bounce","rotate","AnimatedDropdown","styled","animation","Paper","_ref2","from","opacity","transform","to","_ref3","_ref4","_ref5","_ref6","transformOrigin","maxHeight","_ref7","_ref8","animationDelay","_ref9","_ref10","_ref11","trade","calendarId","onTradeUpdated","onUpdateTradeProperty","anchorEl","setAnchorEl","useState","isSharing","setIsSharing","shareDialogOpen","setShareDialogOpen","shareLink","setShareLink","snackbar","setSnackbar","open","message","severity","handleClose","showSnackbar","handleSnackbarClose","prev","isCurrentlyShared","isShared","_Fragment","Tooltip","event","currentTarget","disabled","CircularProgress","ShareIcon","Menu","Boolean","onClose","anchorOrigin","vertical","horizontal","MenuItem","ListItemIcon","CopyIcon","ListItemText","shareId","functions","getFunctions","deactivateShareFunction","httpsCallable","updatedTrade","id","currentTrade","UnshareIcon","generateShareLink","data","tradeId","directLink","sharedAt","Date","LinkIcon","Dialog","fullWidth","DialogTitle","DialogContent","mb","gutterBottom","TextField","value","InputProps","readOnly","mt","DialogActions","navigator","clipboard","writeText","startIcon","Snackbar","autoHideDuration","Alert","imageLoadCache","Set","shimmer","isPendingImage","image","pending","isImageLoading","loadingState","tradeData","isExpanded","setZoomedImage","trades","onOpenGalleryMode","setTrade","isToggling","setIsToggling","isPinning","setIsPinning","loadingImages","setLoadingImages","showTagGroups","setShowTagGroups","saved","localStorage","getItem","JSON","parse","useEffect","images","length","initialLoadingState","forEach","has","url","img","Image","onload","add","onerror","p","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","borderLeft","borderRight","borderTop","paper","justifyContent","flex","name","ShareTradeButton","result","isPinned","UnpinIcon","PinIcon","gridTemplateColumns","entry","exit","borderRadius","info","border","flexDirection","gridColumn","amount","success","grey","MoneyIcon","toFixed","type","Math","abs","left","CalendarIcon","format","date","riskToReward","warning","RiskIcon","session","SessionIcon","Divider","my","ImageIcon","imagesByRow","row","push","Object","entries","sort","a","b","Number","map","_","rowImages","rowIndex","column","colIndex","columnWidth","paddingTop","top","cursor","baseColor","backgroundSize","willChange","alt","caption","style","objectFit","transition","onLoad","className","right","bottom","_trade$images","allImageUrls","filter","currentIndex","findIndex","ZoomInIcon","lineHeight","notes","NoteIcon","RichTextEditor","hideCharacterCount","minHeight","handleToggleTagGroups","newValue","setItem","stringify","ViewListIcon","CategoryIcon","pl","TagsDisplay","tags","showGroups","chipSize","confirmText","cancelText","onConfirm","onCancel","isSubmitting","confirmColor","imageProp","allImages","imageUrl","selectetdImageIndex","imageArray","imageData","setImageData","scale","setScale","setPosition","x","y","isDragging","setIsDragging","dragStart","setDragStart","imageRef","useRef","containerRef","resetZoom","navigateNext","useCallback","navigatePrevious","handleKeyDown","e","key","window","addEventListener","removeEventListener","handleGlobalMouseUp","document","PaperProps","boxShadow","scrollbarStyles","ArrowForwardIcon","py","ref","onWheel","preventDefault","newScale","deltaY","max","min","onMouseDown","clientX","clientY","onMouseMove","newX","newY","current","imageRect","getBoundingClientRect","maxX","maxY","boundedX","boundedY","onMouseUp","onMouseLeave","userSelect","pointerEvents","RestartAltIcon","CloseIcon","actions","hideCloseButton","hideFooterCancelButton","cancelButtonText","cancelButtonAction","primaryButtonText","primaryButtonAction","contentSx","rest","dialogProps","slotProps","DialogTitleStyled","DialogContentStyled","DialogActionsStyled","onTagClick","onTagDelete","filteredTags","tag","startsWith","organizedTags","useMemo","groups","ungroupedTags","getUniqueTagGroups","group","filterTagsByGroup","isGroupedTag","overflowY","keys","groupTags","flexWrap","Chip","label","getTagName","onDelete","getTagChipStyles","formatTagForDisplay","SelectInput","options","helperText","FormControl","InputLabel","Select","option","createEditorStateFromValue","EditorState","createEmpty","rawContent","Array","isArray","blocks","entityMap","contentState","convertFromRaw","createWithContent","ContentState","createFromText","warn","TEXT_COLORS","BACKGROUND_COLORS","STORAGE_KEYS","HEADING_OPTIONS","updateRecentColors","newColor","currentList","maxItems","arguments","filtered","c","slice","loadRecentColors","defaultValue","item","safeGetLocalStorage","saveRecentColors","colors","safeSetLocalStorage","hasValidSelection","selection","getSelection","isCollapsed","rangeCount","isClickOutside","target","elements","every","element","contains","useFloatingToolbar","editorWrapperRef","toolbarRef","colorMenuAnchor","headingMenuAnchor","linkDialogOpen","showFloatingToolbar","setShowFloatingToolbar","floatingToolbarPosition","setFloatingToolbarPosition","checkSelectionAndPositionToolbar","selectionRect","rect","getRangeAt","getSelectionRect","editorRect","editorScrollTop","scrollTop","editorScrollLeft","scrollLeft","getPositionWithDimensions","toolbarDimensions","toolbarElement","offsetWidth","offsetHeight","getToolbarDimensions","safeTopBoundary","safeBottomBoundaryForTopPositioning","minLeftBoundary","maxRightBoundary","round","calculateToolbarPosition","requestAnimationFrame","debouncedCheckSelection","func","wait","immediate","timeout","_len","args","_key","callNow","clearTimeout","setTimeout","later","debounce","editorElement","handleMouseUp","handleTouchEnd","handleKeyUp","includes","shiftKey","handleClickOutside","isOutsideElements","isInternalTradeLink","pathname","URL","location","origin","calendarMatch","match","sharedMatch","shareIdParts","split","getCurrentLink","editorState","getCurrentContent","startKey","getStartKey","startOffset","getStartOffset","linkKey","getBlockForKey","getEntityAt","linkInstance","getEntity","getType","entityKey","getData","trimSelection","text","endKey","getEndKey","endOffset","getEndOffset","selectedText","getText","trimmedText","trim","leadingWhitespace","trimStart","trailingWhitespace","trimEnd","merge","anchorOffset","focusOffset","getBlocksAsArray","startIndex","block","getKey","endIndex","fullText","i","blockText","findLinkEntities","contentBlock","callback","findEntityRanges","character","getCurrentBlockType","getHasFocus","blockStyleFn","restoreScrollAndFocus","editorRef","_editorRef$current7","_editorRef$current8","editor","focus","keyBindingFn","ctrlKey","metaKey","getDefaultKeyBinding","handleToolbarInteraction","LinkComponent","isInternal","stopPropagation","linkInfo","find","currentPath","state","referrer","referrerCalendarId","textDecoration","textDecorationColor","textUnderlineOffset","onChange","placeholder","maxLength","previousValueRef","savedScrollPositionRef","decorator","createDecorator","CompositeDecorator","strategy","props","React","setEditorState","initialState","set","setHeadingMenuAnchor","setColorMenuAnchor","setLinkDialogOpen","linkUrl","setLinkUrl","linkText","setLinkText","newEditorState","newEditorStateWithDecorator","currentContent","convertToRaw","newContent","recentTextColors","recentBgColors","addRecentTextColor","addRecentBgColor","setRecentTextColors","setRecentBgColors","newList","useRecentColors","handleEditorChange","prevContentState","newContentState","getPlainText","prevRaw","newRaw","handleToggleInlineStyle","newState","toggleInlineStyle","RichUtils","_editorRef$current","handleToggleBlockType","blockType","toggleBlockType","currentStyles","getCurrentInlineStyle","nextEditorState","toArray","_editorRef$current2","handleApplyTextColor","applyTextColor","_editorRef$current3","currentStyle","newStyle","replace","colorObj","handleApplyBackgroundColor","applyBackgroundColor","_editorRef$current4","handleHeadingButtonClick","createHeadingButtonClickHandler","handleColorButtonClick","createColorButtonClickHandler","handleApplyHeading","headingStyle","applyHeading","_editorRef$current5","handleClearFormatting","clearFormatting","Modifier","removeInlineStyle","_editorRef$current6","handleLinkClick","handleLinkDialogOpen","currentLink","linkStart","linkEnd","insertLink","createLinkEntity","contentStateWithEntity","createEntity","getLastCreatedEntityKey","textToInsert","insertText","trimmedSelection","replaceText","handleLinkDialogClose","removeLink","applyEntity","linkSelection","removeLinkEntity","styleMap","createStyleMap","finalColor","textColor","padding","focusEditor","fontFamily","margin","fontStyle","marginLeft","marginBlockStart","marginBlockEnd","paddingInlineStart","paddingLeft","dark","borderColor","Editor","customStyleMap","handleKeyCommand","handleKeyCommandWrapper","command","handlers","undoState","undo","redoState","redo","spellCheck","renderFloatingToolbar","currentBlockType","MuiPaper","onTouchStart","role","secondary","content","light","alignSelf","ToggleButtonGroup","placement","ToggleButton","selected","FormatBold","FormatItalic","FormatUnderlined","orientation","flexItem","Title","ArrowDropDown","ml","FormatListBulleted","FormatListNumbered","Palette","Link","FormatClear","renderHeadingMenu","currentBlock","disablePortal","disableScrollLock","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","textTransform","letterSpacing","backgroundImage","autoFocus","onKeyDown","currentLength","isNearLimit","isAtLimit","StyledCalendarDay","$isCurrentMonth","$dayStatus","shape","DayNumber","textAlign","marginBottom","TradeAmount","TradeCount","common","white","black","shadows","_ref12","_ref13","_ref14","_ref15","borderWidth","_ref16","_ref17","_ref18","FormField","_ref19","TradeListItem","_ref20","$type","TradeInfo","_ref21","TradeActions","_ref22","AnimatedPulse","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","breakpoints","down","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","transitions","easing","easeInOut","TAG_COLORS","getTagGroup","parts","getTagColor","index","str","hash","charCodeAt","hashString","hideGroup"],"sourceRoot":""}