{"version":3,"file":"static/js/415.fc95e4f7.chunk.js","mappings":"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","sources":["components/CalendarFormDialog.tsx","../node_modules/@mui/icons-material/esm/BarChart.js","../node_modules/@mui/icons-material/esm/MoreVert.js","components/CalendarHome.tsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/esm/Container/Container.js","components/Shimmer.tsx","../node_modules/@mui/material/esm/CardActions/cardActionsClasses.js","../node_modules/@mui/material/esm/CardActions/CardActions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Stack,\r\n  Box,\r\n  CircularProgress,\r\n  Typography,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@mui/material';\r\nimport { Calendar } from '../types/calendar';\r\nimport { BaseDialog } from './common';\r\n\r\nexport interface CalendarFormData {\r\n  name: string;\r\n  accountBalance: number;\r\n  maxDailyDrawdown: number;\r\n  weeklyTarget?: number;\r\n  monthlyTarget?: number;\r\n  yearlyTarget?: number;\r\n  riskPerTrade?: number;\r\n  dynamicRiskEnabled?: boolean;\r\n  increasedRiskPercentage?: number;\r\n  profitThresholdPercentage?: number;\r\n}\r\n\r\ninterface CalendarFormDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (calendarData: CalendarFormData) => Promise<void>;\r\n  initialData?: Partial<Calendar>;\r\n  isSubmitting: boolean;\r\n  mode: 'create' | 'edit';\r\n  title: string;\r\n  submitButtonText: string;\r\n}\r\n\r\nexport const CalendarFormDialog: React.FC<CalendarFormDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  initialData,\r\n  isSubmitting,\r\n  mode,\r\n  title,\r\n  submitButtonText\r\n}) => {\r\n  // Form state\r\n  const [name, setName] = useState('');\r\n  const [accountBalance, setAccountBalance] = useState('');\r\n  const [maxDailyDrawdown, setMaxDailyDrawdown] = useState('');\r\n  const [weeklyTarget, setWeeklyTarget] = useState('');\r\n  const [monthlyTarget, setMonthlyTarget] = useState('');\r\n  const [yearlyTarget, setYearlyTarget] = useState('');\r\n  const [riskPerTrade, setRiskPerTrade] = useState('');\r\n  const [dynamicRiskEnabled, setDynamicRiskEnabled] = useState(false);\r\n  const [increasedRiskPercentage, setIncreasedRiskPercentage] = useState('');\r\n  const [profitThresholdPercentage, setProfitThresholdPercentage] = useState('');\r\n\r\n  // Initialize form with initial data when in edit mode or when initial data is provided, or reset when dialog opens/closes\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (initialData) {\r\n        setName(initialData.name || '');\r\n        setAccountBalance(initialData.accountBalance?.toString() || '');\r\n        setMaxDailyDrawdown(initialData.maxDailyDrawdown?.toString() || '');\r\n        setWeeklyTarget(initialData.weeklyTarget?.toString() || '');\r\n        setMonthlyTarget(initialData.monthlyTarget?.toString() || '');\r\n        setYearlyTarget(initialData.yearlyTarget?.toString() || '');\r\n        setRiskPerTrade(initialData.riskPerTrade?.toString() || '');\r\n        setDynamicRiskEnabled(initialData.dynamicRiskEnabled || false);\r\n        setIncreasedRiskPercentage(initialData.increasedRiskPercentage?.toString() || '');\r\n        setProfitThresholdPercentage(initialData.profitThresholdPercentage?.toString() || '');\r\n      } else {\r\n        // Reset form for create mode without initial data\r\n        resetForm();\r\n      }\r\n    }\r\n  }, [open, initialData, mode]);\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setAccountBalance('');\r\n    setMaxDailyDrawdown('');\r\n    setWeeklyTarget('');\r\n    setMonthlyTarget('');\r\n    setYearlyTarget('');\r\n    setRiskPerTrade('');\r\n    setDynamicRiskEnabled(false);\r\n    setIncreasedRiskPercentage('');\r\n    setProfitThresholdPercentage('');\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (name.trim() && accountBalance.trim() && maxDailyDrawdown.trim()) {\r\n      const balance = parseFloat(accountBalance);\r\n      const maxDrawdown = parseFloat(maxDailyDrawdown);\r\n      const weeklyTargetValue = weeklyTarget.trim() ? parseFloat(weeklyTarget) : undefined;\r\n      const monthlyTargetValue = monthlyTarget.trim() ? parseFloat(monthlyTarget) : undefined;\r\n      const yearlyTargetValue = yearlyTarget.trim() ? parseFloat(yearlyTarget) : undefined;\r\n      const riskPerTradeValue = riskPerTrade.trim() ? parseFloat(riskPerTrade) : undefined;\r\n      const increasedRiskValue = increasedRiskPercentage.trim() ? parseFloat(increasedRiskPercentage) : undefined;\r\n      const profitThresholdValue = profitThresholdPercentage.trim() ? parseFloat(profitThresholdPercentage) : undefined;\r\n\r\n      if (!isNaN(balance) && balance >= 0 && !isNaN(maxDrawdown) && maxDrawdown > 0 &&\r\n          (weeklyTargetValue === undefined || (!isNaN(weeklyTargetValue) && weeklyTargetValue > 0)) &&\r\n          (monthlyTargetValue === undefined || (!isNaN(monthlyTargetValue) && monthlyTargetValue > 0)) &&\r\n          (yearlyTargetValue === undefined || (!isNaN(yearlyTargetValue) && yearlyTargetValue > 0)) &&\r\n          (riskPerTradeValue === undefined || (!isNaN(riskPerTradeValue) && riskPerTradeValue > 0)) &&\r\n          (increasedRiskValue === undefined || (!isNaN(increasedRiskValue) && increasedRiskValue > 0)) &&\r\n          (profitThresholdValue === undefined || (!isNaN(profitThresholdValue) && profitThresholdValue > 0))) {\r\n\r\n        await onSubmit({\r\n          name: name.trim(),\r\n          accountBalance: balance,\r\n          maxDailyDrawdown: maxDrawdown,\r\n          weeklyTarget: weeklyTargetValue,\r\n          monthlyTarget: monthlyTargetValue,\r\n          yearlyTarget: yearlyTargetValue,\r\n          riskPerTrade: riskPerTradeValue,\r\n          dynamicRiskEnabled,\r\n          increasedRiskPercentage: increasedRiskValue,\r\n          profitThresholdPercentage: profitThresholdValue\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const isFormValid = name.trim() && accountBalance.trim() && maxDailyDrawdown.trim();\r\n\r\n  const dialogTitle = title;\r\n\r\n  const dialogActions = (\r\n    <>\r\n      <Button\r\n        onClick={onClose}\r\n        disabled={isSubmitting}\r\n      >\r\n        Cancel\r\n      </Button>\r\n      <Button\r\n        onClick={handleSubmit}\r\n        variant=\"contained\"\r\n        disabled={!isFormValid || isSubmitting}\r\n        sx={{\r\n          minWidth: 100,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 1\r\n        }}\r\n      >\r\n        {submitButtonText}\r\n        {isSubmitting && (\r\n          <CircularProgress\r\n            size={20}\r\n            color=\"inherit\"\r\n          />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <BaseDialog\r\n      open={open}\r\n      onClose={() => !isSubmitting && onClose()}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n      title={dialogTitle}\r\n      actions={dialogActions}\r\n      hideFooterCancelButton={true}\r\n    >\r\n      <Stack spacing={2} sx={{ mt: 1 }}>\r\n          <TextField\r\n            label=\"Calendar Name\"\r\n            fullWidth\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            label={mode === 'create' ? \"Initial Account Balance\" : \"Account Balance\"}\r\n            fullWidth\r\n            value={accountBalance}\r\n            onChange={(e) => {\r\n              const value = e.target.value;\r\n              if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                setAccountBalance(value);\r\n              }\r\n            }}\r\n            type=\"number\"\r\n            InputProps={{\r\n              startAdornment: <Box component=\"span\" sx={{ mr: 1 }}>$</Box>\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Max Daily Drawdown (%)\"\r\n            fullWidth\r\n            value={maxDailyDrawdown}\r\n            onChange={(e) => {\r\n              const value = e.target.value;\r\n              if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                setMaxDailyDrawdown(value);\r\n              }\r\n            }}\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: <Box component=\"span\" sx={{ ml: 1 }}>%</Box>\r\n            }}\r\n            helperText=\"Maximum allowed loss percentage per day\"\r\n          />\r\n          <TextField\r\n            label=\"Weekly Target (%)\"\r\n            fullWidth\r\n            value={weeklyTarget}\r\n            onChange={(e) => {\r\n              const value = e.target.value;\r\n              if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                setWeeklyTarget(value);\r\n              }\r\n            }}\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: <Box component=\"span\" sx={{ ml: 1 }}>%</Box>\r\n            }}\r\n            helperText=\"Target profit percentage per week\"\r\n          />\r\n          <TextField\r\n            label=\"Monthly Target (%)\"\r\n            fullWidth\r\n            value={monthlyTarget}\r\n            onChange={(e) => {\r\n              const value = e.target.value;\r\n              if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                setMonthlyTarget(value);\r\n              }\r\n            }}\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: <Box component=\"span\" sx={{ ml: 1 }}>%</Box>\r\n            }}\r\n            helperText=\"Target profit percentage per month\"\r\n          />\r\n          <TextField\r\n            label=\"Yearly Target (%)\"\r\n            fullWidth\r\n            value={yearlyTarget}\r\n            onChange={(e) => {\r\n              const value = e.target.value;\r\n              if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                setYearlyTarget(value);\r\n              }\r\n            }}\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: <Box component=\"span\" sx={{ ml: 1 }}>%</Box>\r\n            }}\r\n            helperText=\"Target profit percentage per year\"\r\n          />\r\n          <TextField\r\n            label=\"Risk Per Trade (%)\"\r\n            fullWidth\r\n            value={riskPerTrade}\r\n            onChange={(e) => {\r\n              const value = e.target.value;\r\n              if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                setRiskPerTrade(value);\r\n              }\r\n            }}\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: <Box component=\"span\" sx={{ ml: 1 }}>%</Box>\r\n            }}\r\n            helperText=\"Percentage of account balance to risk per trade (optional)\"\r\n          />\r\n\r\n          {riskPerTrade && (\r\n            <Box sx={{ border: '1px solid', borderColor: 'divider', borderRadius: 1, p: 2, mt: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 1.5, fontWeight: 600 }}>\r\n                Dynamic Risk Settings\r\n              </Typography>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={dynamicRiskEnabled}\r\n                    onChange={(e) => setDynamicRiskEnabled(e.target.checked)}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Enable Dynamic Risk\"\r\n                sx={{ mb: 1.5 }}\r\n              />\r\n\r\n              {dynamicRiskEnabled && (\r\n                <Stack spacing={2}>\r\n                  <TextField\r\n                    label=\"Profit Threshold (%)\"\r\n                    fullWidth\r\n                    value={profitThresholdPercentage}\r\n                    onChange={(e) => {\r\n                      const value = e.target.value;\r\n                      if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                        setProfitThresholdPercentage(value);\r\n                      }\r\n                    }}\r\n                    type=\"number\"\r\n                    InputProps={{\r\n                      endAdornment: <Box component=\"span\" sx={{ ml: 1 }}>%</Box>\r\n                    }}\r\n                    helperText=\"Increase risk when profit exceeds this percentage\"\r\n                    size=\"small\"\r\n                  />\r\n\r\n                  <TextField\r\n                    label=\"Increased Risk (%)\"\r\n                    fullWidth\r\n                    value={increasedRiskPercentage}\r\n                    onChange={(e) => {\r\n                      const value = e.target.value;\r\n                      if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\r\n                        setIncreasedRiskPercentage(value);\r\n                      }\r\n                    }}\r\n                    type=\"number\"\r\n                    InputProps={{\r\n                      endAdornment: <Box component=\"span\" sx={{ ml: 1 }}>%</Box>\r\n                    }}\r\n                    helperText=\"New risk percentage when profit threshold is exceeded\"\r\n                    size=\"small\"\r\n                  />\r\n                </Stack>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Stack>\r\n    </BaseDialog>\r\n  );\r\n};\r\n\r\nexport default CalendarFormDialog;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 9h4v11H4zm12 4h4v7h-4zm-6-9h4v16h-4z\"\n}), 'BarChart');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'MoreVert');","import React, { useState, useMemo, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  useTheme,\r\n  alpha,\r\n  Container,\r\n  Stack,\r\n  Divider,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  AppBar,\r\n  Toolbar,\r\n  Avatar,\r\n  CircularProgress,\r\n  Menu,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from '@mui/material';\r\nimport CalendarFormDialog, { CalendarFormData } from './CalendarFormDialog';\r\nimport {\r\n  Add as AddIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Delete as DeleteIcon,\r\n  TrendingUp,\r\n  CalendarMonth,\r\n  Edit as EditIcon,\r\n  TrendingDown,\r\n  InfoOutlined,\r\n  BarChart as ChartIcon,\r\n  Google as GoogleIcon,\r\n  Logout as LogoutIcon,\r\n  Brightness4 as DarkModeIcon,\r\n  Brightness7 as LightModeIcon,\r\n  ExpandMore,\r\n  ExpandLess,\r\n  ContentCopy as CopyIcon,\r\n  MoreVert as MoreVertIcon,\r\n  Delete as TrashIcon\r\n} from '@mui/icons-material';\r\nimport { format } from 'date-fns';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Calendar } from '../types/calendar';\r\nimport { formatCurrency } from '../utils/formatters';\r\nimport { dialogProps } from '../styles/dialogStyles';\r\nimport { scrollbarStyles } from '../styles/scrollbarStyles';\r\nimport PerformanceCharts from './PerformanceCharts';\r\nimport SelectDateDialog from './SelectDateDialog';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getCalendarStats } from '../services/calendarService';\r\nimport Shimmer from './Shimmer';\r\nimport AppHeader from './common/AppHeader';\r\n// TradeDetailDialog has been removed\r\n\r\ninterface CalendarHomeProps {\r\n  calendars: Calendar[];\r\n  onCreateCalendar: (name: string, accountBalance: number, maxDailyDrawdown: number, weeklyTarget?: number, monthlyTarget?: number, yearlyTarget?: number, riskPerTrade?: number, dynamicRiskEnabled?: boolean, increasedRiskPercentage?: number, profitThresholdPercentage?: number) => void;\r\n  onDuplicateCalendar: (sourceCalendarId: string, newName: string, includeContent?: boolean) => void;\r\n  onDeleteCalendar: (id: string) => void;\r\n  onUpdateCalendar: (id: string, updates: Partial<Calendar>) => void;\r\n  onToggleTheme: () => void;\r\n  mode: 'light' | 'dark';\r\n  isLoading?: boolean;\r\n  loadAllTrades?: (calendarId: string) => Promise<void>;\r\n}\r\n\r\nconst CalendarSkeleton = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        height: '100%',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        transition: 'transform 0.3s ease-in-out',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: '4px',\r\n          background: alpha(theme.palette.primary.main, 0.3),\r\n          zIndex: 1\r\n        }\r\n      }}\r\n    >\r\n      <CardContent sx={{ p: 3 }}>\r\n        <Box sx={{ mb: 2.5 }}>\r\n          {/* Title shimmer */}\r\n          <Shimmer\r\n            height={28}\r\n            width=\"60%\"\r\n            borderRadius={8}\r\n            variant=\"wave\"\r\n            intensity=\"medium\"\r\n            sx={{ mb: 1 }}\r\n          />\r\n\r\n          {/* Date shimmer */}\r\n          <Stack direction=\"row\" spacing={2} sx={{ mb: 1 }}>\r\n            <Shimmer\r\n              height={20}\r\n              width=\"30%\"\r\n              borderRadius={4}\r\n              variant=\"default\"\r\n              intensity=\"low\"\r\n            />\r\n            <Shimmer\r\n              height={20}\r\n              width=\"30%\"\r\n              borderRadius={4}\r\n              variant=\"default\"\r\n              intensity=\"low\"\r\n            />\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 2, opacity: 0.6 }} />\r\n\r\n        {/* Stats shimmer */}\r\n        <Stack spacing={2}>\r\n          {/* Main stats box with gradient */}\r\n          <Box\r\n            sx={{\r\n              p: 1.5,\r\n              borderRadius: 1,\r\n              bgcolor: alpha(theme.palette.background.default, 0.6),\r\n              mb: 1\r\n            }}\r\n          >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>\r\n              <Shimmer\r\n                height={40}\r\n                width={40}\r\n                borderRadius=\"50%\"\r\n                variant=\"pulse\"\r\n                intensity=\"medium\"\r\n              />\r\n              <Box sx={{ width: '100%' }}>\r\n                <Shimmer\r\n                  height={24}\r\n                  width=\"40%\"\r\n                  borderRadius={6}\r\n                  variant=\"wave\"\r\n                  intensity=\"high\"\r\n                  sx={{ mb: 1 }}\r\n                />\r\n                <Shimmer\r\n                  height={16}\r\n                  width=\"30%\"\r\n                  borderRadius={4}\r\n                  variant=\"default\"\r\n                  intensity=\"low\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Grid stats */}\r\n          <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: 2 }}>\r\n            <Box sx={{ p: 1.5, borderRadius: 1, bgcolor: alpha(theme.palette.background.default, 0.6) }}>\r\n              <Shimmer\r\n                height={16}\r\n                width=\"60%\"\r\n                borderRadius={4}\r\n                variant=\"default\"\r\n                intensity=\"low\"\r\n                sx={{ mb: 1 }}\r\n              />\r\n              <Shimmer\r\n                height={24}\r\n                width=\"40%\"\r\n                borderRadius={6}\r\n                variant=\"wave\"\r\n                intensity=\"medium\"\r\n              />\r\n            </Box>\r\n            <Box sx={{ p: 1.5, borderRadius: 1, bgcolor: alpha(theme.palette.background.default, 0.6) }}>\r\n              <Shimmer\r\n                height={16}\r\n                width=\"60%\"\r\n                borderRadius={4}\r\n                variant=\"default\"\r\n                intensity=\"low\"\r\n                sx={{ mb: 1 }}\r\n              />\r\n              <Shimmer\r\n                height={24}\r\n                width=\"40%\"\r\n                borderRadius={6}\r\n                variant=\"wave\"\r\n                intensity=\"medium\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Additional stats */}\r\n          <Box sx={{ p: 1.5, borderRadius: 1, bgcolor: alpha(theme.palette.background.default, 0.6) }}>\r\n            <Shimmer\r\n              height={16}\r\n              width=\"40%\"\r\n              borderRadius={4}\r\n              variant=\"default\"\r\n              intensity=\"low\"\r\n              sx={{ mb: 1 }}\r\n            />\r\n            <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: 1 }}>\r\n              {[1, 2, 3].map((i) => (\r\n                <Box key={i}>\r\n                  <Shimmer\r\n                    height={14}\r\n                    width=\"70%\"\r\n                    borderRadius={4}\r\n                    variant=\"default\"\r\n                    intensity=\"low\"\r\n                    sx={{ mb: 0.5 }}\r\n                  />\r\n                  <Shimmer\r\n                    height={20}\r\n                    width=\"50%\"\r\n                    borderRadius={6}\r\n                    variant={i === 2 ? \"pulse\" : \"default\"}\r\n                    intensity=\"medium\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Stack>\r\n      </CardContent>\r\n\r\n      <CardActions sx={{\r\n        justifyContent: 'flex-end',\r\n        p: 2,\r\n        pt: 1,\r\n        borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`\r\n      }}>\r\n        {/* Action buttons shimmer */}\r\n        <Stack direction=\"row\" spacing={1}>\r\n          {[1, 2, 3].map((i) => (\r\n            <Shimmer\r\n              key={i}\r\n              height={32}\r\n              width={80}\r\n              borderRadius={8}\r\n              variant={i === 1 ? \"pulse\" : \"default\"}\r\n              intensity={i === 1 ? \"high\" : \"medium\"}\r\n            />\r\n          ))}\r\n        </Stack>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const CalendarHome: React.FC<CalendarHomeProps> = ({\r\n  calendars,\r\n  onCreateCalendar,\r\n  onDuplicateCalendar,\r\n  onDeleteCalendar,\r\n  onUpdateCalendar,\r\n  onToggleTheme,\r\n  mode,\r\n  isLoading: externalLoading,\r\n  loadAllTrades\r\n}) => {\r\n  const { user, signInWithGoogle, signOut } = useAuth();\r\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\r\n  const [isDuplicateOptionsDialogOpen, setIsDuplicateOptionsDialogOpen] = useState(false);\r\n  const [calendarToDelete, setCalendarToDelete] = useState<string | null>(null);\r\n  const [calendarToEdit, setCalendarToEdit] = useState<Calendar | null>(null);\r\n  const [calendarToDuplicate, setCalendarToDuplicate] = useState<Calendar | null>(null);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isDuplicating, setIsDuplicating] = useState(false);\r\n  const [expandedCalendars, setExpandedCalendars] = useState<{[key: string]: boolean}>({});\r\n  const [menuAnchorEl, setMenuAnchorEl] = useState<{[key: string]: HTMLElement | null}>({});\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [selectedCalendarForCharts, setSelectedCalendarForCharts] = useState<Calendar | null>(null);\r\n  const [selectedMonth, setSelectedMonth] = useState<Date>(new Date());\r\n  const [isDateDialogOpen, setIsDateDialogOpen] = useState(false);\r\n  const [currentTimePeriod, setCurrentTimePeriod] = useState<'month' | 'year' | 'all'>('month');\r\n  // Track which calendars we've attempted to load trades for\r\n  const [loadAttempted, setLoadAttempted] = useState<{[key: string]: boolean}>({});\r\n  // We no longer need selectedTrade state since TradeDetailDialog has been removed\r\n\r\n  // Use external loading state if provided, otherwise use internal loading state\r\n  const isLoading = externalLoading !== undefined ? externalLoading : false;\r\n\r\n  // Update selectedCalendarForCharts when calendars change and a calendar is selected\r\n  useEffect(() => {\r\n    if (selectedCalendarForCharts && calendars.length > 0) {\r\n      const updatedCalendar = calendars.find(c => c.id === selectedCalendarForCharts.id);\r\n      if (updatedCalendar && updatedCalendar.cachedTrades.length > 0) {\r\n        setSelectedCalendarForCharts(updatedCalendar);\r\n      }\r\n    }\r\n  }, [calendars, selectedCalendarForCharts]);\r\n\r\n  const handleCreateCalendarSubmit = async (data: CalendarFormData) => {\r\n    setIsCreating(true);\r\n    try {\r\n      await onCreateCalendar(\r\n        data.name,\r\n        data.accountBalance,\r\n        data.maxDailyDrawdown,\r\n        data.weeklyTarget,\r\n        data.monthlyTarget,\r\n        data.yearlyTarget,\r\n        data.riskPerTrade,\r\n        data.dynamicRiskEnabled,\r\n        data.increasedRiskPercentage,\r\n        data.profitThresholdPercentage\r\n      );\r\n      setIsCreateDialogOpen(false);\r\n    } catch (error) {\r\n      console.error('Error creating calendar:', error);\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleEditCalendarSubmit = async (data: CalendarFormData) => {\r\n    if (!calendarToEdit) return;\r\n\r\n    setIsEditing(true);\r\n    try {\r\n      const updates: Partial<Calendar> = {\r\n        name: data.name,\r\n        accountBalance: data.accountBalance,\r\n        maxDailyDrawdown: data.maxDailyDrawdown,\r\n        weeklyTarget: data.weeklyTarget,\r\n        monthlyTarget: data.monthlyTarget,\r\n        yearlyTarget: data.yearlyTarget,\r\n        riskPerTrade: data.riskPerTrade,\r\n        dynamicRiskEnabled: data.dynamicRiskEnabled,\r\n        increasedRiskPercentage: data.increasedRiskPercentage,\r\n        profitThresholdPercentage: data.profitThresholdPercentage\r\n      };\r\n\r\n      await onUpdateCalendar(calendarToEdit.id, updates);\r\n      setIsEditDialogOpen(false);\r\n    } catch (error) {\r\n      console.error('Error updating calendar:', error);\r\n    } finally {\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleCalendarClick = async (calendarId: string) => {\r\n    // Load all trades for the calendar if loadAllTrades is provided\r\n    if (loadAllTrades) {\r\n      const calendar = calendars.find(c => c.id === calendarId);\r\n      if (calendar && calendar.loadedYears.length === 0 && !loadAttempted[calendarId]) {\r\n        // Mark that we've attempted to load trades for this calendar\r\n        setLoadAttempted(prev => ({ ...prev, [calendarId]: true }));\r\n        await loadAllTrades(calendarId);\r\n      }\r\n    }\r\n\r\n    navigate(`/calendar/${calendarId}`);\r\n  };\r\n\r\n\r\n\r\n  // Menu item handlers that don't need event parameter\r\n  const handleEditCalendar = (calendar: Calendar) => {\r\n    setCalendarToEdit(calendar);\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  const handleDuplicateCalendar = (calendar: Calendar) => {\r\n    setCalendarToDuplicate(calendar);\r\n    setIsDuplicateOptionsDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteCalendar = (calendarId: string) => {\r\n    setCalendarToDelete(calendarId);\r\n    setIsDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDuplicateOptionSelect = async (withContent: boolean) => {\r\n    if (!calendarToDuplicate) return;\r\n\r\n    setIsDuplicating(true);\r\n    try {\r\n      const newName = `${calendarToDuplicate.name} (Copy)`;\r\n      await onDuplicateCalendar(calendarToDuplicate.id, newName, withContent);\r\n      setIsDuplicateOptionsDialogOpen(false);\r\n      setCalendarToDuplicate(null);\r\n    } catch (error) {\r\n      console.error('Error duplicating calendar:', error);\r\n    } finally {\r\n      setIsDuplicating(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleDeleteConfirm = () => {\r\n    if (calendarToDelete) {\r\n      onDeleteCalendar(calendarToDelete);\r\n      setCalendarToDelete(null);\r\n    }\r\n    setIsDeleteDialogOpen(false);\r\n  };\r\n\r\n  const handleToggleExpand = (e: React.MouseEvent, calendarId: string) => {\r\n    e.stopPropagation(); // Prevent calendar click navigation\r\n    setExpandedCalendars(prev => ({\r\n      ...prev,\r\n      [calendarId]: !prev[calendarId]\r\n    }));\r\n  };\r\n\r\n  const handleMenuClick = (e: React.MouseEvent, calendarId: string) => {\r\n    e.stopPropagation();\r\n    setMenuAnchorEl(prev => ({\r\n      ...prev,\r\n      [calendarId]: e.currentTarget as HTMLElement\r\n    }));\r\n  };\r\n\r\n  const handleMenuClose = (calendarId: string) => {\r\n    setMenuAnchorEl(prev => ({\r\n      ...prev,\r\n      [calendarId]: null\r\n    }));\r\n  };\r\n\r\n  const handleMenuItemClick = (calendarId: string, action: () => void) => {\r\n    handleMenuClose(calendarId);\r\n    action();\r\n  };\r\n\r\n  const handleViewCharts = async (e: React.MouseEvent, calendar: Calendar) => {\r\n    e.stopPropagation();\r\n\r\n    // First, set the calendar to show the dialog immediately\r\n    setSelectedCalendarForCharts(calendar);\r\n\r\n    // Then load all trades for the calendar if needed\r\n    if (loadAllTrades && (calendar.loadedYears.length === 0 || calendar.cachedTrades.length === 0)) {\r\n      // Mark that we've attempted to load trades for this calendar\r\n      setLoadAttempted(prev => ({ ...prev, [calendar.id]: true }));\r\n\r\n      // Load the trades\r\n      await loadAllTrades(calendar.id);\r\n\r\n      // After loading, update with the latest calendar data that includes the trades\r\n      const updatedCalendar = calendars.find(c => c.id === calendar.id);\r\n      if (updatedCalendar) {\r\n        setSelectedCalendarForCharts(updatedCalendar);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCloseCharts = () => {\r\n    setSelectedCalendarForCharts(null);\r\n  };\r\n\r\n  const handleMonthChange = (event: any) => {\r\n    setSelectedMonth(new Date(event.target.value));\r\n  };\r\n\r\n  const handleTimePeriodChange = (period: 'month' | 'year' | 'all') => {\r\n    setCurrentTimePeriod(period);\r\n  };\r\n\r\n  const handleYearChange = (year: number) => {\r\n    const newDate = new Date(year, selectedMonth.getMonth(), 1);\r\n    setSelectedMonth(newDate);\r\n  };\r\n\r\n  // Create a wrapper function for calendar updates that matches the expected signature\r\n  const handleUpdateCalendarProperty = async (calendarId: string, updateCallback: (calendar: Calendar) => Calendar): Promise<void> => {\r\n    const calendar = calendars.find(c => c.id === calendarId);\r\n    if (!calendar) return;\r\n\r\n    const updatedCalendar = updateCallback(calendar);\r\n    const updates: Partial<Calendar> = {\r\n      scoreSettings: updatedCalendar.scoreSettings\r\n    };\r\n\r\n    await onUpdateCalendar(calendarId, updates);\r\n  };\r\n\r\n  // Get available months for the selected calendar\r\n  const availableMonths = useMemo(() => {\r\n    if (!selectedCalendarForCharts) return [];\r\n\r\n    const trades = selectedCalendarForCharts.cachedTrades || [];\r\n    if (trades.length === 0) return [new Date()];\r\n\r\n    const dates = trades.map(trade => new Date(trade.date));\r\n    const minDate = new Date(Math.min(...dates.map(d => d.getTime())));\r\n    const maxDate = new Date(Math.max(...dates.map(d => d.getTime())));\r\n\r\n    // Create an array of months between min and max date\r\n    const months: Date[] = [];\r\n    let currentDate = new Date(minDate.getFullYear(), minDate.getMonth(), 1);\r\n    const endDate = new Date(maxDate.getFullYear(), maxDate.getMonth(), 1);\r\n\r\n    while (currentDate <= endDate) {\r\n      months.push(new Date(currentDate));\r\n      currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);\r\n    }\r\n\r\n    return months;\r\n  }, [selectedCalendarForCharts]);\r\n\r\n\r\n\r\n  const handleSignIn = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.error('Failed to sign in:', error);\r\n    }\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      await signOut();\r\n    } catch (error) {\r\n      console.error('Failed to sign out:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Box>\r\n\r\n      <AppHeader\r\n        onToggleTheme={onToggleTheme}\r\n        mode={mode}\r\n      />\r\n      <Toolbar />\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n        {user ? (\r\n          <>\r\n            <Box sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <Box>\r\n                <Typography variant=\"h4\" component=\"h2\">\r\n                  Your Calendars\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"row\" spacing={2}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  startIcon={<TrashIcon />}\r\n                  onClick={() => navigate('/trash')}\r\n                  sx={{ color: 'text.secondary' }}\r\n                >\r\n                  Trash\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<AddIcon />}\r\n                  onClick={() => setIsCreateDialogOpen(true)}\r\n                >\r\n                  Create Calendar\r\n                </Button>\r\n              </Stack>\r\n            </Box>\r\n\r\n            {calendars.length === 0 && !isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  py: 8,\r\n                  bgcolor: 'background.paper',\r\n                  borderRadius: 2,\r\n                  boxShadow: 1\r\n                }}\r\n              >\r\n                <CalendarIcon sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\r\n                <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n                  No calendars yet\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mb: 3 }}>\r\n                  Create your first trading calendar to start tracking your trades\r\n                </Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<AddIcon />}\r\n                  onClick={() => setIsCreateDialogOpen(true)}\r\n                >\r\n                  Create Calendar\r\n                </Button>\r\n              </Box>\r\n            ) : (\r\n              <Box sx={{\r\n                display: 'grid',\r\n                gridTemplateColumns: {\r\n                  xs: '1fr',\r\n                  sm: 'repeat(2, 1fr)',\r\n                  md: 'repeat(3, 1fr)'\r\n                },\r\n                gap: 2\r\n              }}>\r\n                {isLoading ? (\r\n                  // Show shimmer skeletons while loading\r\n                  Array.from({ length: 3 }).map((_, index) => (\r\n                    <CalendarSkeleton key={index} />\r\n                  ))\r\n                ) : (\r\n                  // Show actual calendars\r\n                  calendars.map(calendar => {\r\n                    // Use the imported getCalendarStats function from calendarService\r\n                    const stats = getCalendarStats(calendar);\r\n                    return (\r\n                      <Card\r\n                        key={calendar.id}\r\n                        sx={{\r\n                          cursor: 'pointer',\r\n                          transition: 'all 0.3s ease',\r\n                          position: 'relative',\r\n                          overflow: 'hidden',\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          height: expandedCalendars[calendar.id] ? 'auto' : '360px',\r\n                          '&:hover': {\r\n                            transform: 'translateY(-4px)',\r\n                            boxShadow: theme.shadows[8],\r\n                            '& .calendar-gradient': {\r\n                              opacity: 1\r\n                            }\r\n                          },\r\n                          '&::before': {\r\n                            content: '\"\"',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            height: '4px',\r\n                          }\r\n                        }}\r\n                        onClick={() => handleCalendarClick(calendar.id)}\r\n                      >\r\n                        <Box\r\n                          className=\"calendar-gradient\"\r\n                          sx={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.05)}, ${alpha(theme.palette.primary.light, 0.02)})`,\r\n                            opacity: 0,\r\n                            transition: 'opacity 0.3s ease',\r\n                            pointerEvents: 'none'\r\n                          }}\r\n                        />\r\n                        <CardContent sx={{ p: 3, display: 'flex', flexDirection: 'column', flexGrow: 1, maxHeight: expandedCalendars[calendar.id] ? 'none' : 'calc(100% - 60px)' }}>\r\n                          <Box sx={{ mb: 1.5 }}>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center',\r\n                                mb: 1,\r\n                                cursor: 'pointer'\r\n                              }}\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleToggleExpand(e, calendar.id);\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                variant=\"h6\"\r\n                                gutterBottom\r\n                                sx={{\r\n                                  fontWeight: 600,\r\n                                  color: 'text.primary',\r\n                                  display: 'flex',\r\n                                  alignItems: 'center',\r\n                                  gap: 1,\r\n                                  mb: 0\r\n                                }}\r\n                              >\r\n                                {calendar.name}\r\n                                {stats.totalPnL > 0 && (\r\n                                  <TrendingUp sx={{ fontSize: '1.2rem', color: 'success.main' }} />\r\n                                )}\r\n                                {stats.totalPnL < 0 && (\r\n                                  <TrendingDown sx={{ fontSize: '1.2rem', color: 'error.main' }} />\r\n                                )}\r\n                              </Typography>\r\n                              <IconButton\r\n                                size=\"small\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  handleToggleExpand(e, calendar.id);\r\n                                }}\r\n                                sx={{ color: 'text.secondary' }}\r\n                              >\r\n                                {expandedCalendars[calendar.id] ? <ExpandLess /> : <ExpandMore />}\r\n                              </IconButton>\r\n                            </Box>\r\n                            <Stack direction=\"row\" spacing={2} sx={{ mb: 1 }}>\r\n                              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                                <CalendarIcon sx={{ fontSize: '1rem' }} />\r\n                                {format(calendar.createdAt, 'MMM d, yyyy')}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                                <EditIcon sx={{ fontSize: '1rem' }} />\r\n                                {format(calendar.lastModified, 'MMM d, yyyy')}\r\n                              </Typography>\r\n                            </Stack>\r\n                          </Box>\r\n                          <Divider sx={{ my: 1, opacity: 0.6 }} />\r\n\r\n                          <Box sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            mb: 1.5,\r\n                            px: 0.5\r\n                          }}>\r\n                            {!expandedCalendars[calendar.id] && <Box>\r\n                              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                Initial Balance\r\n                              </Typography>\r\n                              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                                {formatCurrency(calendar.accountBalance)}\r\n                              </Typography>\r\n                            </Box>}\r\n                            {!expandedCalendars[calendar.id] && <Box>\r\n                              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                Win Rate\r\n                              </Typography>\r\n                              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                                {stats.winRate.toFixed(1)}%\r\n                              </Typography>\r\n                            </Box>}\r\n                          </Box>\r\n\r\n                          <Stack spacing={2} sx={{\r\n                            maxHeight: expandedCalendars[calendar.id] ? 'none' : '180px',\r\n                            overflow: 'hidden',\r\n                            transition: 'max-height 0.3s ease-in-out',\r\n                            flexGrow: 0,\r\n                            mb: 2\r\n                          }}>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: 1.5,\r\n                                p: 1.5,\r\n                                borderRadius: 1,\r\n                                bgcolor: alpha(theme.palette.background.default, 0.6)\r\n                              }}\r\n                            >\r\n                              <Box\r\n                                sx={{\r\n                                  width: 40,\r\n                                  height: 40,\r\n                                  borderRadius: '50%',\r\n                                  display: 'flex',\r\n                                  alignItems: 'center',\r\n                                  justifyContent: 'center',\r\n                                  bgcolor: stats.totalPnL > 0\r\n                                    ? alpha(theme.palette.success.main, 0.1)\r\n                                    : stats.totalPnL < 0\r\n                                    ? alpha(theme.palette.error.main, 0.1)\r\n                                    : alpha(theme.palette.grey[500], 0.1)\r\n                                }}\r\n                              >\r\n                                <TrendingUp sx={{\r\n                                  fontSize: '1.2rem',\r\n                                  color: stats.totalPnL > 0\r\n                                    ? theme.palette.success.main\r\n                                    : stats.totalPnL < 0\r\n                                    ? theme.palette.error.main\r\n                                    : theme.palette.grey[500]\r\n                                }} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography variant=\"h6\" sx={{\r\n                                  color: stats.totalPnL > 0\r\n                                    ? 'success.main'\r\n                                    : stats.totalPnL < 0\r\n                                    ? 'error.main'\r\n                                    : 'text.secondary',\r\n                                  fontWeight: 600\r\n                                }}>\r\n                                  {formatCurrency(stats.totalPnL)}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  Growth: {stats.growthPercentage.toFixed(2)}%\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box sx={{\r\n                              display: 'grid',\r\n                              gridTemplateColumns: 'repeat(2, 1fr)',\r\n                              gap: 2\r\n                            }}>\r\n                              <Box sx={{\r\n                                p: 1.5,\r\n                                borderRadius: 1,\r\n                                bgcolor: alpha(theme.palette.background.default, 0.6),\r\n                                opacity: expandedCalendars[calendar.id] ? 1 : 0,\r\n                              }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                  Initial Balance\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                                  {formatCurrency(stats.initialBalance)}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  Current: {formatCurrency(stats.initialBalance + stats.totalPnL)}\r\n                                </Typography>\r\n                              </Box>\r\n\r\n                              <Box sx={{\r\n                                p: 1.5,\r\n                                borderRadius: 1,\r\n                                bgcolor: alpha(theme.palette.background.default, 0.6),\r\n                                opacity: expandedCalendars[calendar.id] ? 1 : 0,\r\n                              }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                  Win Rate\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                                  {stats.winRate.toFixed(1)}%\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  {stats.winCount}W - {stats.lossCount}L\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            <Box sx={{\r\n                              display: 'grid',\r\n                              gridTemplateColumns: 'repeat(2, 1fr)',\r\n                              gap: 2\r\n                            }}>\r\n                              <Box sx={{\r\n                                p: 1.5,\r\n                                borderRadius: 1,\r\n                                bgcolor: alpha(theme.palette.background.default, 0.6)\r\n                              }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                  Profit Factor\r\n                                </Typography>\r\n                                <Tooltip\r\n                                  title={\r\n                                    <Box sx={{ p: 1, maxWidth: 300 }}>\r\n                                      <Typography variant=\"body2\" gutterBottom>\r\n                                        Profit Factor is the ratio of gross profit to gross loss. A value greater than 1 indicates profitable trading.\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                                        • Value &gt; 3: Excellent\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\">\r\n                                        • Value 2-3: Very Good\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\">\r\n                                        • Value 1.5-2: Good\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\">\r\n                                        • Value 1-1.5: Marginal\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\">\r\n                                        • Value &lt; 1: Unprofitable\r\n                                      </Typography>\r\n                                    </Box>\r\n                                  }\r\n                                  arrow\r\n                                  placement=\"top\"\r\n                                >\r\n                                  <Typography variant=\"h6\" sx={{ fontWeight: 600, cursor: 'help' }}>\r\n                                  <InfoOutlined sx={{ fontSize: '1rem', mr: 0.5 }} />\r\n                                    {stats.profitFactor.toFixed(2)}\r\n                                  </Typography>\r\n                                </Tooltip>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.75rem' }}>\r\n                                  Avg Win: {formatCurrency(stats.avgWin)}\r\n                                </Typography>\r\n\r\n                              </Box>\r\n\r\n                              <Box sx={{\r\n                                p: 1.5,\r\n                                borderRadius: 1,\r\n                                bgcolor: alpha(theme.palette.background.default, 0.6)\r\n                              }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                  Max Drawdown\r\n                                </Typography>\r\n\r\n\r\n                                <Tooltip\r\n                                  title={\r\n                                    <Box sx={{ p: 1, maxWidth: 300 }}>\r\n                                      <Typography variant=\"body2\" gutterBottom>\r\n                                        Maximum drawdown represents the largest peak-to-trough decline in your account balance.\r\n                                      </Typography>\r\n                                      {stats.maxDrawdown > 0 && (\r\n                                        <>\r\n                                          <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                                            Recovery needed: {stats.drawdownRecoveryNeeded.toFixed(1)}%\r\n                                          </Typography>\r\n                                          <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                                            Duration: {stats.drawdownDuration} days\r\n                                          </Typography>\r\n                                          {stats.drawdownStartDate && stats.drawdownEndDate && (\r\n                                            <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                                              Period: {format(stats.drawdownStartDate, 'MMM d')} - {format(stats.drawdownEndDate, 'MMM d')}\r\n                                            </Typography>\r\n                                          )}\r\n                                        </>\r\n                                      )}\r\n                                    </Box>\r\n                                  }\r\n                                  arrow\r\n                                  placement=\"top\"\r\n                                >\r\n                                 <Typography variant=\"h6\" sx={{ fontWeight: 600, cursor: 'help' }}>\r\n                                 <InfoOutlined sx={{ fontSize: '1rem', mr: 0.5 }} />\r\n                                  {stats.maxDrawdown.toFixed(1)}%\r\n                                </Typography>\r\n                                </Tooltip>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.75rem', mt: 0.5 }}>\r\n                                  Avg Loss: {formatCurrency(stats.avgLoss)}\r\n                                </Typography>\r\n\r\n                              </Box>\r\n                            </Box>\r\n\r\n                            {(calendar.weeklyTarget || calendar.monthlyTarget || calendar.yearlyTarget) && (\r\n                              <Box sx={{\r\n                                p: 1.5,\r\n                                borderRadius: 1,\r\n                                bgcolor: alpha(theme.palette.background.default, 0.6)\r\n                              }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                  Target Progress\r\n                                </Typography>\r\n                                <Box sx={{\r\n                                  display: 'grid',\r\n                                  gridTemplateColumns: calendar.weeklyTarget && calendar.monthlyTarget && calendar.yearlyTarget\r\n                                    ? 'repeat(3, 1fr)'\r\n                                    : calendar.weeklyTarget && calendar.monthlyTarget || calendar.weeklyTarget && calendar.yearlyTarget || calendar.monthlyTarget && calendar.yearlyTarget\r\n                                      ? 'repeat(2, 1fr)'\r\n                                      : '1fr',\r\n                                  gap: 2\r\n                                }}>\r\n                                  {calendar.weeklyTarget && (\r\n                                    <Box>\r\n                                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        Weekly\r\n                                      </Typography>\r\n                                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                                        {stats.weeklyProgress.toFixed(1)}%\r\n                                      </Typography>\r\n                                    </Box>\r\n                                  )}\r\n                                  {calendar.monthlyTarget && (\r\n                                    <Box>\r\n                                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        Monthly\r\n                                      </Typography>\r\n                                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                                        {stats.monthlyProgress.toFixed(1)}%\r\n                                      </Typography>\r\n                                    </Box>\r\n                                  )}\r\n                                  {calendar.yearlyTarget && (\r\n                                    <Box>\r\n                                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        Yearly\r\n                                      </Typography>\r\n                                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                                        {stats.yearlyProgress.toFixed(1)}%\r\n                                      </Typography>\r\n                                    </Box>\r\n                                  )}\r\n                                </Box>\r\n                              </Box>\r\n                            )}\r\n\r\n                            <Box sx={{\r\n                              p: 1.5,\r\n                              borderRadius: 1,\r\n                              bgcolor: alpha(theme.palette.background.default, 0.6)\r\n                            }}>\r\n                              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                PnL Performance\r\n                              </Typography>\r\n                              <Box sx={{\r\n                                display: 'grid',\r\n                                gridTemplateColumns: 'repeat(3, 1fr)',\r\n                                gap: 2\r\n                              }}>\r\n                                <Box>\r\n                                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    Weekly\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"h6\"\r\n                                    sx={{\r\n                                      fontWeight: 600,\r\n                                      color: parseFloat(String(stats.weeklyPnLPercentage)) > 0\r\n                                        ? 'success.main'\r\n                                        : parseFloat(String(stats.weeklyPnLPercentage)) < 0\r\n                                        ? 'error.main'\r\n                                        : 'text.primary'\r\n                                    }}\r\n                                  >\r\n                                    {parseFloat(String(stats.weeklyPnLPercentage)) > 0 ? '+' : ''}{parseFloat(String(stats.weeklyPnLPercentage)).toFixed(1)}%\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    Monthly\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"h6\"\r\n                                    sx={{\r\n                                      fontWeight: 600,\r\n                                      color: parseFloat(String(stats.monthlyPnLPercentage)) > 0\r\n                                        ? 'success.main'\r\n                                        : parseFloat(String(stats.monthlyPnLPercentage)) < 0\r\n                                        ? 'error.main'\r\n                                        : 'text.primary'\r\n                                    }}\r\n                                  >\r\n                                    {parseFloat(String(stats.monthlyPnLPercentage)) > 0 ? '+' : ''}{parseFloat(String(stats.monthlyPnLPercentage)).toFixed(1)}%\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    Yearly\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"h6\"\r\n                                    sx={{\r\n                                      fontWeight: 600,\r\n                                      color: parseFloat(String(stats.yearlyPnLPercentage)) > 0\r\n                                        ? 'success.main'\r\n                                        : parseFloat(String(stats.yearlyPnLPercentage)) < 0\r\n                                        ? 'error.main'\r\n                                        : 'text.primary'\r\n                                    }}\r\n                                  >\r\n                                    {parseFloat(String(stats.yearlyPnLPercentage)) > 0 ? '+' : ''}{parseFloat(String(stats.yearlyPnLPercentage)).toFixed(1)}%\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                            </Box>\r\n                          </Stack>\r\n\r\n\r\n\r\n                        </CardContent>\r\n                        <CardActions sx={{\r\n                          justifyContent: 'space-between',\r\n                          p: 2,\r\n                          pt: 1,\r\n                          mt: 'auto',\r\n                          borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n                          position: 'relative',\r\n                          zIndex: 2,\r\n                          backgroundColor: theme.palette.background.paper\r\n                        }}>\r\n                          <Button\r\n                            size=\"small\"\r\n                            startIcon={<ChartIcon />}\r\n                            onClick={(e) => handleViewCharts(e, calendar)}\r\n                            sx={{\r\n                              color: 'primary.main',\r\n                              '&:hover': {\r\n                                bgcolor: alpha(theme.palette.primary.main, 0.1)\r\n                              }\r\n                            }}\r\n                          >\r\n                            View Charts\r\n                          </Button>\r\n\r\n                          <Box>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={(e) => handleMenuClick(e, calendar.id)}\r\n                              sx={{\r\n                                color: 'text.secondary',\r\n                                '&:hover': {\r\n                                  bgcolor: alpha(theme.palette.text.secondary, 0.1)\r\n                                }\r\n                              }}\r\n                            >\r\n                              <MoreVertIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n\r\n                            <Menu\r\n                              anchorEl={menuAnchorEl[calendar.id]}\r\n                              open={Boolean(menuAnchorEl[calendar.id])}\r\n                              onClose={() => handleMenuClose(calendar.id)}\r\n                              onClick={(e) => e.stopPropagation()}\r\n                              transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                              anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                            >\r\n                              <MenuItem\r\n                                onClick={() => handleMenuItemClick(calendar.id, () => handleEditCalendar(calendar))}\r\n                              >\r\n                                <ListItemIcon>\r\n                                  <EditIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText>Edit</ListItemText>\r\n                              </MenuItem>\r\n\r\n                              <MenuItem\r\n                                onClick={() => handleMenuItemClick(calendar.id, () => handleDuplicateCalendar(calendar))}\r\n                              >\r\n                                <ListItemIcon>\r\n                                  <CopyIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText>Duplicate</ListItemText>\r\n                              </MenuItem>\r\n\r\n                              <MenuItem\r\n                                onClick={() => handleMenuItemClick(calendar.id, () => handleDeleteCalendar(calendar.id))}\r\n                                sx={{ color: 'error.main' }}\r\n                              >\r\n                                <ListItemIcon>\r\n                                  <DeleteIcon fontSize=\"small\" sx={{ color: 'error.main' }} />\r\n                                </ListItemIcon>\r\n                                <ListItemText>Delete</ListItemText>\r\n                              </MenuItem>\r\n                            </Menu>\r\n                          </Box>\r\n                        </CardActions>\r\n                      </Card>\r\n                    );\r\n                  })\r\n                )}\r\n              </Box>\r\n            )}\r\n\r\n            <CalendarFormDialog\r\n              open={isCreateDialogOpen}\r\n              onClose={() => setIsCreateDialogOpen(false)}\r\n              onSubmit={handleCreateCalendarSubmit}\r\n              isSubmitting={isCreating}\r\n              mode=\"create\"\r\n              title=\"Create New Calendar\"\r\n              submitButtonText=\"Create\"\r\n            />\r\n\r\n            <CalendarFormDialog\r\n              open={isEditDialogOpen}\r\n              onClose={() => setIsEditDialogOpen(false)}\r\n              onSubmit={handleEditCalendarSubmit}\r\n              initialData={calendarToEdit || undefined}\r\n              isSubmitting={isEditing}\r\n              mode=\"edit\"\r\n              title=\"Edit Calendar\"\r\n              submitButtonText=\"Save Changes\"\r\n            />\r\n\r\n            <Dialog\r\n              open={isDuplicateOptionsDialogOpen}\r\n              onClose={() => {\r\n                setIsDuplicateOptionsDialogOpen(false);\r\n                setCalendarToDuplicate(null);\r\n              }}\r\n              maxWidth=\"sm\"\r\n              fullWidth\r\n              {...dialogProps}\r\n            >\r\n              <DialogTitle sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 1,\r\n                color: 'primary.main'\r\n              }}>\r\n                <CopyIcon fontSize=\"small\" />\r\n                Duplicate Calendar Options\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                {isDuplicating ? (\r\n                  <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    py: 4\r\n                  }}>\r\n                    <CircularProgress size={40} sx={{ mb: 2 }} />\r\n                    <Typography variant=\"body1\" color=\"text.secondary\">\r\n                      Duplicating calendar...\r\n                    </Typography>\r\n                  </Box>\r\n                ) : (\r\n                  <>\r\n                    <Typography variant=\"body1\" sx={{ mb: 3 }}>\r\n                      How would you like to duplicate \"{calendarToDuplicate?.name}\"?\r\n                    </Typography>\r\n\r\n                    <Stack spacing={2}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={() => handleDuplicateOptionSelect(false)}\r\n                    disabled={isDuplicating}\r\n                    sx={{\r\n                      p: 2,\r\n                      textAlign: 'left',\r\n                      justifyContent: 'flex-start',\r\n                      borderColor: 'primary.main',\r\n                      '&:hover': {\r\n                        bgcolor: alpha(theme.palette.primary.main, 0.1)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box>\r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n                        Settings Only\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Copy calendar settings, targets, and configuration without any trades\r\n                      </Typography>\r\n                    </Box>\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={() => handleDuplicateOptionSelect(true)}\r\n                    disabled={isDuplicating}\r\n                    sx={{\r\n                      p: 2,\r\n                      textAlign: 'left',\r\n                      justifyContent: 'flex-start',\r\n                      borderColor: 'info.main',\r\n                      color: 'info.main',\r\n                      '&:hover': {\r\n                        bgcolor: alpha(theme.palette.info.main, 0.1)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box>\r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n                        Settings + All Trades\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Copy everything including all trades and performance data\r\n                      </Typography>\r\n                    </Box>\r\n                  </Button>\r\n                    </Stack>\r\n                  </>\r\n                )}\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    setIsDuplicateOptionsDialogOpen(false);\r\n                    setCalendarToDuplicate(null);\r\n                  }}\r\n                  sx={{ color: 'text.secondary' }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n\r\n            <Dialog\r\n              open={isDeleteDialogOpen}\r\n              onClose={() => setIsDeleteDialogOpen(false)}\r\n              maxWidth=\"xs\"\r\n              fullWidth\r\n              {...dialogProps}\r\n            >\r\n              <DialogTitle sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 1,\r\n                color: 'error.main'\r\n              }}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n                Delete Calendar\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <Typography>\r\n                  Are you sure you want to delete this calendar? This action cannot be undone.\r\n                </Typography>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => setIsDeleteDialogOpen(false)}\r\n                  sx={{ color: 'text.secondary' }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={handleDeleteConfirm}\r\n                  sx={{\r\n                    color: 'error.main',\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Performance Charts Dialog */}\r\n            <Dialog\r\n              open={selectedCalendarForCharts !== null}\r\n              onClose={handleCloseCharts}\r\n              maxWidth=\"lg\"\r\n              fullWidth\r\n              {...dialogProps}\r\n              PaperProps={{\r\n                sx: {\r\n                  minHeight: '80vh',\r\n                  maxHeight: '90vh',\r\n                  bgcolor: 'background.paper',\r\n                  backgroundImage: 'none'\r\n                }\r\n              }}\r\n            >\r\n              <DialogTitle sx={{\r\n                borderBottom: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n                pb: 2,\r\n                height: '60px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                gap: 1\r\n              }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <ChartIcon color=\"primary\" />\r\n                  <Typography variant=\"h6\">\r\n                    Performance Charts - {selectedCalendarForCharts?.name}\r\n                  </Typography>\r\n                </Box>\r\n                {currentTimePeriod === 'month' ? (\r\n                  <Button\r\n                    onClick={() => setIsDateDialogOpen(true)}\r\n                    startIcon={<CalendarMonth />}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  >\r\n                    {format(selectedMonth, 'MMMM yyyy')}\r\n                  </Button>\r\n                ) : currentTimePeriod === 'year' ? (\r\n                  <FormControl size=\"small\" variant=\"outlined\">\r\n                    <Select\r\n                      value={selectedMonth.getFullYear()}\r\n                      onChange={(e) => handleYearChange(e.target.value as number)}\r\n                      sx={{ minWidth: 120 }}\r\n                    >\r\n                      {Array.from(\r\n                        { length: 10 },\r\n                        (_, i) => new Date().getFullYear() - i\r\n                      ).map((year) => (\r\n                        <MenuItem key={year} value={year}>\r\n                          {year}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                ) : null}\r\n              </DialogTitle>\r\n              <DialogContent sx={{\r\n                p: 3,\r\n                backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.background.paper, 0.6) : '#f0f0f0',\r\n                ...scrollbarStyles(theme)\r\n              }}>\r\n                {selectedCalendarForCharts && (\r\n                  isLoading || (loadAllTrades && selectedCalendarForCharts.cachedTrades.length === 0) ? (\r\n                    <Box sx={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      height: '300px'\r\n                    }}>\r\n                      <CircularProgress size={40} />\r\n                      <Typography variant=\"body2\" sx={{ mt: 2, color: 'text.secondary' }}>\r\n                        Loading chart data...\r\n                      </Typography>\r\n                    </Box>\r\n                  ) : (\r\n                    <PerformanceCharts\r\n                      trades={selectedCalendarForCharts.cachedTrades || []}\r\n                      selectedDate={selectedMonth}\r\n                      accountBalance={selectedCalendarForCharts.accountBalance}\r\n                      monthlyTarget={selectedCalendarForCharts.monthlyTarget ?? undefined}\r\n                      maxDailyDrawdown={selectedCalendarForCharts.maxDailyDrawdown}\r\n                      calendarId={selectedCalendarForCharts.id}\r\n                      dynamicRiskSettings={{\r\n                        accountBalance: selectedCalendarForCharts.accountBalance,\r\n                        riskPerTrade: selectedCalendarForCharts.riskPerTrade,\r\n                        dynamicRiskEnabled: selectedCalendarForCharts.dynamicRiskEnabled,\r\n                        increasedRiskPercentage: selectedCalendarForCharts.increasedRiskPercentage,\r\n                        profitThresholdPercentage: selectedCalendarForCharts.profitThresholdPercentage\r\n                      }}\r\n                      scoreSettings={selectedCalendarForCharts.scoreSettings}\r\n                      onUpdateCalendarProperty={handleUpdateCalendarProperty}\r\n                      onTimePeriodChange={handleTimePeriodChange}\r\n                    />\r\n                  )\r\n                )}\r\n\r\n                 {/* TradeDetailDialog has been removed */}\r\n              </DialogContent>\r\n              <DialogActions sx={{\r\n                p: 2,\r\n                borderTop: `1px solid ${alpha(theme.palette.divider, 0.1)}`,\r\n                gap: 1\r\n              }}>\r\n                <Button\r\n                  onClick={handleCloseCharts}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                >\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Date Selection Dialog */}\r\n            {selectedCalendarForCharts && currentTimePeriod === 'month' && (\r\n              <SelectDateDialog\r\n                open={isDateDialogOpen}\r\n                onClose={() => setIsDateDialogOpen(false)}\r\n                onDateSelect={(date) => {\r\n                  setSelectedMonth(date);\r\n                  setIsDateDialogOpen(false);\r\n                }}\r\n                initialDate={selectedMonth}\r\n                trades={selectedCalendarForCharts.cachedTrades || []}\r\n                accountBalance={selectedCalendarForCharts.accountBalance}\r\n                monthlyTarget={selectedCalendarForCharts.monthlyTarget ?? undefined}\r\n                yearlyTarget={selectedCalendarForCharts.yearlyTarget}\r\n              />\r\n            )}\r\n\r\n\r\n          </>\r\n        ) : (\r\n          <Box sx={{ textAlign: 'center', mt: 8 }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Welcome to Trade Tracker\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\r\n              Sign in to start managing your trades\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CalendarHome;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { Box, useTheme, alpha } from '@mui/material';\r\nimport { keyframes } from '@mui/system';\r\n\r\nconst shimmer = keyframes`\r\n  0% {\r\n    background-position: -200% 0;\r\n  }\r\n  100% {\r\n    background-position: 200% 0;\r\n  }\r\n`;\r\n\r\ninterface ShimmerProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n  borderRadius?: string | number;\r\n  variant?: 'default' | 'wave' | 'pulse';\r\n  intensity?: 'low' | 'medium' | 'high';\r\n  sx?: any; // Allow for additional styling\r\n}\r\n\r\nconst Shimmer = ({\r\n  width = '100%',\r\n  height = '100%',\r\n  borderRadius = 8,\r\n  variant = 'default',\r\n  intensity = 'medium',\r\n  sx = {}\r\n}: ShimmerProps) => {\r\n  const theme = useTheme();\r\n\r\n  // Calculate colors based on intensity\r\n  const getColors = () => {\r\n    const intensityValues = {\r\n      low: {\r\n        dark: { base: 0.03, shimmer: 0.08 },\r\n        light: { base: 0.03, shimmer: 0.08 }\r\n      },\r\n      medium: {\r\n        dark: { base: 0.05, shimmer: 0.15 },\r\n        light: { base: 0.04, shimmer: 0.1 }\r\n      },\r\n      high: {\r\n        dark: { base: 0.08, shimmer: 0.25 },\r\n        light: { base: 0.06, shimmer: 0.15 }\r\n      }\r\n    };\r\n\r\n    const values = intensityValues[intensity];\r\n    const mode = theme.palette.mode;\r\n\r\n    return {\r\n      baseColor: mode === 'dark'\r\n        ? `rgba(255, 255, 255, ${values.dark.base})`\r\n        : `rgba(0, 0, 0, ${values.light.base})`,\r\n      shimmerColor: mode === 'dark'\r\n        ? `rgba(255, 255, 255, ${values.dark.shimmer})`\r\n        : `rgba(0, 0, 0, ${values.light.shimmer})`,\r\n      primaryTint: alpha(theme.palette.primary.main, mode === 'dark' ? 0.15 : 0.08)\r\n    };\r\n  };\r\n\r\n  const { baseColor, shimmerColor, primaryTint } = getColors();\r\n\r\n  // Different animation styles\r\n  const getAnimationStyles = () => {\r\n    switch (variant) {\r\n      case 'wave':\r\n        return {\r\n          background: `linear-gradient(90deg,\r\n            ${baseColor} 0%,\r\n            ${shimmerColor} 20%,\r\n            ${baseColor} 40%\r\n          )`,\r\n          backgroundSize: '200% 100%',\r\n          animation: `${shimmer} 2s infinite ease-in-out`,\r\n        };\r\n      case 'pulse':\r\n        const pulse = keyframes`\r\n          0% { opacity: ${theme.palette.mode === 'dark' ? 0.5 : 0.6}; }\r\n          50% { opacity: ${theme.palette.mode === 'dark' ? 0.8 : 0.9}; }\r\n          100% { opacity: ${theme.palette.mode === 'dark' ? 0.5 : 0.6}; }\r\n        `;\r\n        return {\r\n          background: `linear-gradient(135deg, ${baseColor} 0%, ${primaryTint} 100%)`,\r\n          animation: `${pulse} 1.8s infinite ease-in-out`,\r\n        };\r\n      default:\r\n        return {\r\n          background: `linear-gradient(90deg,\r\n            ${baseColor} 25%,\r\n            ${shimmerColor} 50%,\r\n            ${baseColor} 75%\r\n          )`,\r\n          backgroundSize: '200% 100%',\r\n          animation: `${shimmer} 1.5s infinite linear`,\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width,\r\n        height,\r\n        borderRadius,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        willChange: 'background-position, opacity', // Optimize animation performance\r\n        ...getAnimationStyles(),\r\n        '&::after': variant === 'wave' ? {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: `linear-gradient(90deg, transparent, ${alpha(theme.palette.background.paper, 0.1)}, transparent)`,\r\n          transform: 'translateX(-100%)',\r\n          animation: `shimmerWave 1.6s infinite`,\r\n          '@keyframes shimmerWave': {\r\n            '100%': {\r\n              transform: 'translateX(100%)'\r\n            }\r\n          }\r\n        } : {},\r\n        ...sx // Apply additional styles\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Shimmer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardActionsUtilityClass } from \"./cardActionsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  variants: [{\n    props: {\n      disableSpacing: false\n    },\n    style: {\n      '& > :not(style) ~ :not(style)': {\n        marginLeft: 8\n      }\n    }\n  }]\n});\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n    disableSpacing = false,\n    className,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableSpacing\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;"],"names":["_ref","open","onClose","onSubmit","initialData","isSubmitting","mode","title","submitButtonText","name","setName","useState","accountBalance","setAccountBalance","maxDailyDrawdown","setMaxDailyDrawdown","weeklyTarget","setWeeklyTarget","monthlyTarget","setMonthlyTarget","yearlyTarget","setYearlyTarget","riskPerTrade","setRiskPerTrade","dynamicRiskEnabled","setDynamicRiskEnabled","increasedRiskPercentage","setIncreasedRiskPercentage","profitThresholdPercentage","setProfitThresholdPercentage","useEffect","_initialData$accountB","_initialData$maxDaily","_initialData$weeklyTa","_initialData$monthlyT","_initialData$yearlyTa","_initialData$riskPerT","_initialData$increase","_initialData$profitTh","toString","resetForm","isFormValid","trim","dialogTitle","dialogActions","_jsxs","_Fragment","children","_jsx","Button","onClick","disabled","async","balance","parseFloat","maxDrawdown","weeklyTargetValue","undefined","monthlyTargetValue","yearlyTargetValue","riskPerTradeValue","increasedRiskValue","profitThresholdValue","isNaN","variant","sx","minWidth","display","alignItems","gap","CircularProgress","size","color","BaseDialog","maxWidth","fullWidth","actions","hideFooterCancelButton","Stack","spacing","mt","TextField","label","value","onChange","e","target","autoFocus","test","type","InputProps","startAdornment","Box","component","mr","endAdornment","ml","helperText","border","borderColor","borderRadius","p","Typography","mb","fontWeight","FormControlLabel","control","Switch","checked","createSvgIcon","d","CalendarSkeleton","theme","useTheme","Card","height","position","overflow","transition","content","top","left","right","background","alpha","palette","primary","main","zIndex","CardContent","Shimmer","width","intensity","direction","Divider","my","opacity","bgcolor","default","gridTemplateColumns","map","i","CardActions","justifyContent","pt","borderTop","divider","CalendarHome","_selectedCalendarForC","_selectedCalendarForC2","calendars","onCreateCalendar","onDuplicateCalendar","onDeleteCalendar","onUpdateCalendar","onToggleTheme","isLoading","externalLoading","loadAllTrades","user","signInWithGoogle","signOut","useAuth","isCreateDialogOpen","setIsCreateDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","isEditDialogOpen","setIsEditDialogOpen","isDuplicateOptionsDialogOpen","setIsDuplicateOptionsDialogOpen","calendarToDelete","setCalendarToDelete","calendarToEdit","setCalendarToEdit","calendarToDuplicate","setCalendarToDuplicate","isCreating","setIsCreating","isEditing","setIsEditing","isDuplicating","setIsDuplicating","expandedCalendars","setExpandedCalendars","menuAnchorEl","setMenuAnchorEl","navigate","useNavigate","selectedCalendarForCharts","setSelectedCalendarForCharts","selectedMonth","setSelectedMonth","Date","isDateDialogOpen","setIsDateDialogOpen","currentTimePeriod","setCurrentTimePeriod","loadAttempted","setLoadAttempted","length","updatedCalendar","find","c","id","cachedTrades","handleDuplicateOptionSelect","newName","withContent","error","console","handleToggleExpand","calendarId","stopPropagation","prev","handleMenuClose","handleMenuItemClick","action","handleCloseCharts","useMemo","trades","dates","trade","date","minDate","Math","min","getTime","maxDate","max","months","currentDate","getFullYear","getMonth","endDate","push","AppHeader","Toolbar","Container","startIcon","TrashIcon","AddIcon","xs","sm","md","Array","from","_","index","calendar","stats","getCalendarStats","cursor","flexDirection","transform","boxShadow","shadows","loadedYears","handleCalendarClick","className","bottom","light","pointerEvents","flexGrow","maxHeight","gutterBottom","totalPnL","TrendingUp","fontSize","TrendingDown","IconButton","ExpandLess","ExpandMore","CalendarIcon","format","createdAt","EditIcon","lastModified","px","formatCurrency","winRate","toFixed","success","grey","growthPercentage","initialBalance","winCount","lossCount","Tooltip","arrow","placement","InfoOutlined","profitFactor","avgWin","drawdownRecoveryNeeded","drawdownDuration","drawdownStartDate","drawdownEndDate","avgLoss","weeklyProgress","monthlyProgress","yearlyProgress","String","weeklyPnLPercentage","monthlyPnLPercentage","yearlyPnLPercentage","backgroundColor","paper","ChartIcon","handleViewCharts","handleMenuClick","currentTarget","text","secondary","MoreVertIcon","Menu","anchorEl","Boolean","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","handleEditCalendar","ListItemIcon","ListItemText","handleDuplicateCalendar","CopyIcon","handleDeleteCalendar","DeleteIcon","py","align","CalendarFormDialog","data","updates","Dialog","dialogProps","DialogTitle","DialogContent","textAlign","info","DialogActions","handleDeleteConfirm","PaperProps","minHeight","backgroundImage","borderBottom","pb","CalendarMonth","FormControl","Select","year","newDate","handleYearChange","scrollbarStyles","PerformanceCharts","selectedDate","dynamicRiskSettings","scoreSettings","onUpdateCalendarProperty","updateCallback","onTimePeriodChange","period","SelectDateDialog","onDateSelect","initialDate","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","createStyledComponent","useThemeProps","componentName","ContainerRoot","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","React","ref","classes","classesProp","other","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled","useDefaultProps","shimmer","keyframes","baseColor","shimmerColor","primaryTint","getColors","low","dark","base","medium","high","willChange","getAnimationStyles","backgroundSize","animation","pulse","getCardActionsUtilityClass","generateUtilityClasses","CardActionsRoot","disableSpacing","padding","variants","style"],"sourceRoot":""}